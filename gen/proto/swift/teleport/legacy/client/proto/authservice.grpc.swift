//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: teleport/legacy/client/proto/authservice.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// AuthService is authentication/authorization service implementation
///
/// Usage: instantiate `Proto_AuthServiceClient`, then call methods of this protocol to make API calls.
internal protocol Proto_AuthServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? { get }

  func inventoryControlStream(
    callOptions: CallOptions?,
    handler: @escaping (Proto_DownstreamInventoryOneOf) -> Void
  ) -> BidirectionalStreamingCall<Proto_UpstreamInventoryOneOf, Proto_DownstreamInventoryOneOf>

  func getInventoryStatus(
    _ request: Proto_InventoryStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_InventoryStatusRequest, Proto_InventoryStatusSummary>

  func getInventoryConnectedServiceCounts(
    _ request: Proto_InventoryConnectedServiceCountsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_InventoryConnectedServiceCountsRequest, Proto_InventoryConnectedServiceCounts>

  func pingInventory(
    _ request: Proto_InventoryPingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_InventoryPingRequest, Proto_InventoryPingResponse>

  func getInstances(
    _ request: Types_InstanceFilter,
    callOptions: CallOptions?,
    handler: @escaping (Types_InstanceV1) -> Void
  ) -> ServerStreamingCall<Types_InstanceFilter, Types_InstanceV1>

  func getClusterAlerts(
    _ request: Types_GetClusterAlertsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_GetClusterAlertsRequest, Proto_GetClusterAlertsResponse>

  func upsertClusterAlert(
    _ request: Proto_UpsertClusterAlertRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertClusterAlertRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createAlertAck(
    _ request: Types_AlertAcknowledgement,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AlertAcknowledgement, SwiftProtobuf.Google_Protobuf_Empty>

  func getAlertAcks(
    _ request: Proto_GetAlertAcksRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetAlertAcksRequest, Proto_GetAlertAcksResponse>

  func clearAlertAcks(
    _ request: Proto_ClearAlertAcksRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ClearAlertAcksRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func maintainSessionPresence(
    callOptions: CallOptions?,
    handler: @escaping (Proto_MFAAuthenticateChallenge) -> Void
  ) -> BidirectionalStreamingCall<Proto_PresenceMFAChallengeSend, Proto_MFAAuthenticateChallenge>

  func createSessionTracker(
    _ request: Proto_CreateSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateSessionTrackerRequest, Types_SessionTrackerV1>

  func getSessionTracker(
    _ request: Proto_GetSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSessionTrackerRequest, Types_SessionTrackerV1>

  func getActiveSessionTrackers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?,
    handler: @escaping (Types_SessionTrackerV1) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionTrackerV1>

  func getActiveSessionTrackersWithFilter(
    _ request: Types_SessionTrackerFilter,
    callOptions: CallOptions?,
    handler: @escaping (Types_SessionTrackerV1) -> Void
  ) -> ServerStreamingCall<Types_SessionTrackerFilter, Types_SessionTrackerV1>

  func removeSessionTracker(
    _ request: Proto_RemoveSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_RemoveSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func updateSessionTracker(
    _ request: Proto_UpdateSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpdateSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func sendKeepAlives(
    callOptions: CallOptions?
  ) -> ClientStreamingCall<Types_KeepAlive, SwiftProtobuf.Google_Protobuf_Empty>

  func watchEvents(
    _ request: Proto_Watch,
    callOptions: CallOptions?,
    handler: @escaping (Proto_Event) -> Void
  ) -> ServerStreamingCall<Proto_Watch, Proto_Event>

  func getNode(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceInNamespaceRequest, Types_ServerV2>

  func upsertNode(
    _ request: Types_ServerV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ServerV2, Types_KeepAlive>

  func deleteNode(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllNodes(
    _ request: Types_ResourcesInNamespaceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourcesInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func generateUserCerts(
    _ request: Proto_UserCertsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UserCertsRequest, Proto_Certs>

  func generateHostCerts(
    _ request: Proto_HostCertsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_HostCertsRequest, Proto_Certs>

  func generateUserSingleUseCerts(
    callOptions: CallOptions?,
    handler: @escaping (Proto_UserSingleUseCertsResponse) -> Void
  ) -> BidirectionalStreamingCall<Proto_UserSingleUseCertsRequest, Proto_UserSingleUseCertsResponse>

  func generateOpenSSHCert(
    _ request: Proto_OpenSSHCertRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_OpenSSHCertRequest, Proto_OpenSSHCert>

  func isMFARequired(
    _ request: Proto_IsMFARequiredRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_IsMFARequiredRequest, Proto_IsMFARequiredResponse>

  func getAccessRequestsV2(
    _ request: Types_AccessRequestFilter,
    callOptions: CallOptions?,
    handler: @escaping (Types_AccessRequestV3) -> Void
  ) -> ServerStreamingCall<Types_AccessRequestFilter, Types_AccessRequestV3>

  func createAccessRequest(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AccessRequestV3, SwiftProtobuf.Google_Protobuf_Empty>

  func createAccessRequestV2(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AccessRequestV3, Types_AccessRequestV3>

  func deleteAccessRequest(
    _ request: Proto_RequestID,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_RequestID, SwiftProtobuf.Google_Protobuf_Empty>

  func setAccessRequestState(
    _ request: Proto_RequestStateSetter,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_RequestStateSetter, SwiftProtobuf.Google_Protobuf_Empty>

  func submitAccessReview(
    _ request: Types_AccessReviewSubmission,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AccessReviewSubmission, Types_AccessRequestV3>

  func getAccessCapabilities(
    _ request: Types_AccessCapabilitiesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AccessCapabilitiesRequest, Types_AccessCapabilities>

  func getAccessRequestAllowedPromotions(
    _ request: Proto_AccessRequestAllowedPromotionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_AccessRequestAllowedPromotionRequest, Proto_AccessRequestAllowedPromotionResponse>

  func getPluginData(
    _ request: Types_PluginDataFilter,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_PluginDataFilter, Proto_PluginDataSeq>

  func updatePluginData(
    _ request: Types_PluginDataUpdateParams,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_PluginDataUpdateParams, SwiftProtobuf.Google_Protobuf_Empty>

  func ping(
    _ request: Proto_PingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_PingRequest, Proto_PingResponse>

  func getResetPasswordToken(
    _ request: Proto_GetResetPasswordTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetResetPasswordTokenRequest, Types_UserTokenV3>

  func createResetPasswordToken(
    _ request: Proto_CreateResetPasswordTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateResetPasswordTokenRequest, Types_UserTokenV3>

  func createBot(
    _ request: Proto_CreateBotRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateBotRequest, Proto_CreateBotResponse>

  func deleteBot(
    _ request: Proto_DeleteBotRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteBotRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getBotUsers(
    _ request: Proto_GetBotUsersRequest,
    callOptions: CallOptions?,
    handler: @escaping (Types_UserV2) -> Void
  ) -> ServerStreamingCall<Proto_GetBotUsersRequest, Types_UserV2>

  func getUser(
    _ request: Proto_GetUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetUserRequest, Types_UserV2>

  func getCurrentUser(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UserV2>

  func getCurrentUserRoles(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?,
    handler: @escaping (Types_RoleV6) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_RoleV6>

  func getUsers(
    _ request: Proto_GetUsersRequest,
    callOptions: CallOptions?,
    handler: @escaping (Types_UserV2) -> Void
  ) -> ServerStreamingCall<Proto_GetUsersRequest, Types_UserV2>

  func createUser(
    _ request: Types_UserV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>

  func updateUser(
    _ request: Types_UserV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteUser(
    _ request: Proto_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func changePassword(
    _ request: Proto_ChangePasswordRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ChangePasswordRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func acquireSemaphore(
    _ request: Types_AcquireSemaphoreRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AcquireSemaphoreRequest, Types_SemaphoreLease>

  func keepAliveSemaphoreLease(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>

  func cancelSemaphoreLease(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>

  func getSemaphores(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SemaphoreFilter, Proto_Semaphores>

  func deleteSemaphore(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SemaphoreFilter, SwiftProtobuf.Google_Protobuf_Empty>

  func emitAuditEvent(
    _ request: Events_OneOf,
    callOptions: CallOptions?
  ) -> UnaryCall<Events_OneOf, SwiftProtobuf.Google_Protobuf_Empty>

  func createAuditStream(
    callOptions: CallOptions?,
    handler: @escaping (Events_StreamStatus) -> Void
  ) -> BidirectionalStreamingCall<Proto_AuditStreamRequest, Events_StreamStatus>

  func upsertApplicationServer(
    _ request: Proto_UpsertApplicationServerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertApplicationServerRequest, Types_KeepAlive>

  func deleteApplicationServer(
    _ request: Proto_DeleteApplicationServerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteApplicationServerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllApplicationServers(
    _ request: Proto_DeleteAllApplicationServersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteAllApplicationServersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func generateAppToken(
    _ request: Proto_GenerateAppTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GenerateAppTokenRequest, Proto_GenerateAppTokenResponse>

  func getAppSession(
    _ request: Proto_GetAppSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetAppSessionRequest, Proto_GetAppSessionResponse>

  func listAppSessions(
    _ request: Proto_ListAppSessionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListAppSessionsRequest, Proto_ListAppSessionsResponse>

  func createAppSession(
    _ request: Proto_CreateAppSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateAppSessionRequest, Proto_CreateAppSessionResponse>

  func deleteAppSession(
    _ request: Proto_DeleteAppSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteAppSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllAppSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteUserAppSessions(
    _ request: Proto_DeleteUserAppSessionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteUserAppSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createSnowflakeSession(
    _ request: Proto_CreateSnowflakeSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateSnowflakeSessionRequest, Proto_CreateSnowflakeSessionResponse>

  func getSnowflakeSession(
    _ request: Proto_GetSnowflakeSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSnowflakeSessionRequest, Proto_GetSnowflakeSessionResponse>

  func getSnowflakeSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetSnowflakeSessionsResponse>

  func deleteSnowflakeSession(
    _ request: Proto_DeleteSnowflakeSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteSnowflakeSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllSnowflakeSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func createSAMLIdPSession(
    _ request: Proto_CreateSAMLIdPSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateSAMLIdPSessionRequest, Proto_CreateSAMLIdPSessionResponse>

  func getSAMLIdPSession(
    _ request: Proto_GetSAMLIdPSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSAMLIdPSessionRequest, Proto_GetSAMLIdPSessionResponse>

  func listSAMLIdPSessions(
    _ request: Proto_ListSAMLIdPSessionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListSAMLIdPSessionsRequest, Proto_ListSAMLIdPSessionsResponse>

  func deleteSAMLIdPSession(
    _ request: Proto_DeleteSAMLIdPSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteSAMLIdPSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllSAMLIdPSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteUserSAMLIdPSessions(
    _ request: Proto_DeleteUserSAMLIdPSessionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteUserSAMLIdPSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getWebSession(
    _ request: Types_GetWebSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_GetWebSessionRequest, Proto_GetWebSessionResponse>

  func getWebSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebSessionsResponse>

  func deleteWebSession(
    _ request: Types_DeleteWebSessionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_DeleteWebSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllWebSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getWebToken(
    _ request: Types_GetWebTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_GetWebTokenRequest, Proto_GetWebTokenResponse>

  func getWebTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebTokensResponse>

  func deleteWebToken(
    _ request: Types_DeleteWebTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_DeleteWebTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllWebTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func updateRemoteCluster(
    _ request: Types_RemoteClusterV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_RemoteClusterV3, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertKubernetesServer(
    _ request: Proto_UpsertKubernetesServerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertKubernetesServerRequest, Types_KeepAlive>

  func deleteKubernetesServer(
    _ request: Proto_DeleteKubernetesServerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteKubernetesServerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllKubernetesServers(
    _ request: Proto_DeleteAllKubernetesServersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteAllKubernetesServersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertDatabaseServer(
    _ request: Proto_UpsertDatabaseServerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertDatabaseServerRequest, Types_KeepAlive>

  func deleteDatabaseServer(
    _ request: Proto_DeleteDatabaseServerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteDatabaseServerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllDatabaseServers(
    _ request: Proto_DeleteAllDatabaseServersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteAllDatabaseServersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertDatabaseService(
    _ request: Proto_UpsertDatabaseServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertDatabaseServiceRequest, Types_KeepAlive>

  func deleteDatabaseService(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllDatabaseServices(
    _ request: Proto_DeleteAllDatabaseServicesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteAllDatabaseServicesRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func signDatabaseCSR(
    _ request: Proto_DatabaseCSRRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DatabaseCSRRequest, Proto_DatabaseCSRResponse>

  func generateDatabaseCert(
    _ request: Proto_DatabaseCertRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DatabaseCertRequest, Proto_DatabaseCertResponse>

  func generateSnowflakeJWT(
    _ request: Proto_SnowflakeJWTRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_SnowflakeJWTRequest, Proto_SnowflakeJWTResponse>

  func getRole(
    _ request: Proto_GetRoleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetRoleRequest, Types_RoleV6>

  func getRoles(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetRolesResponse>

  func createRole(
    _ request: Proto_CreateRoleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateRoleRequest, Types_RoleV6>

  func updateRole(
    _ request: Proto_UpdateRoleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpdateRoleRequest, Types_RoleV6>

  func upsertRoleV2(
    _ request: Proto_UpsertRoleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertRoleRequest, Types_RoleV6>

  func upsertRole(
    _ request: Types_RoleV6,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_RoleV6, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteRole(
    _ request: Proto_DeleteRoleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteRoleRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func addMFADevice(
    callOptions: CallOptions?,
    handler: @escaping (Proto_AddMFADeviceResponse) -> Void
  ) -> BidirectionalStreamingCall<Proto_AddMFADeviceRequest, Proto_AddMFADeviceResponse>

  func deleteMFADevice(
    callOptions: CallOptions?,
    handler: @escaping (Proto_DeleteMFADeviceResponse) -> Void
  ) -> BidirectionalStreamingCall<Proto_DeleteMFADeviceRequest, Proto_DeleteMFADeviceResponse>

  func addMFADeviceSync(
    _ request: Proto_AddMFADeviceSyncRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_AddMFADeviceSyncRequest, Proto_AddMFADeviceSyncResponse>

  func deleteMFADeviceSync(
    _ request: Proto_DeleteMFADeviceSyncRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteMFADeviceSyncRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getMFADevices(
    _ request: Proto_GetMFADevicesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetMFADevicesRequest, Proto_GetMFADevicesResponse>

  func createAuthenticateChallenge(
    _ request: Proto_CreateAuthenticateChallengeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateAuthenticateChallengeRequest, Proto_MFAAuthenticateChallenge>

  func createRegisterChallenge(
    _ request: Proto_CreateRegisterChallengeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateRegisterChallengeRequest, Proto_MFARegisterChallenge>

  func getOIDCConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceWithSecretsRequest, Types_OIDCConnectorV3>

  func getOIDCConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourcesWithSecretsRequest, Types_OIDCConnectorV3List>

  func createOIDCConnector(
    _ request: Proto_CreateOIDCConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateOIDCConnectorRequest, Types_OIDCConnectorV3>

  func updateOIDCConnector(
    _ request: Proto_UpdateOIDCConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpdateOIDCConnectorRequest, Types_OIDCConnectorV3>

  func upsertOIDCConnector(
    _ request: Types_OIDCConnectorV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_OIDCConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertOIDCConnectorV2(
    _ request: Proto_UpsertOIDCConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertOIDCConnectorRequest, Types_OIDCConnectorV3>

  func deleteOIDCConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createOIDCAuthRequest(
    _ request: Types_OIDCAuthRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_OIDCAuthRequest, Types_OIDCAuthRequest>

  func getOIDCAuthRequest(
    _ request: Proto_GetOIDCAuthRequestRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetOIDCAuthRequestRequest, Types_OIDCAuthRequest>

  func getSAMLConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceWithSecretsRequest, Types_SAMLConnectorV2>

  func getSAMLConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourcesWithSecretsRequest, Types_SAMLConnectorV2List>

  func createSAMLConnector(
    _ request: Proto_CreateSAMLConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateSAMLConnectorRequest, Types_SAMLConnectorV2>

  func updateSAMLConnector(
    _ request: Proto_UpdateSAMLConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpdateSAMLConnectorRequest, Types_SAMLConnectorV2>

  func upsertSAMLConnector(
    _ request: Types_SAMLConnectorV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SAMLConnectorV2, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertSAMLConnectorV2(
    _ request: Proto_UpsertSAMLConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertSAMLConnectorRequest, Types_SAMLConnectorV2>

  func deleteSAMLConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createSAMLAuthRequest(
    _ request: Types_SAMLAuthRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SAMLAuthRequest, Types_SAMLAuthRequest>

  func getSAMLAuthRequest(
    _ request: Proto_GetSAMLAuthRequestRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSAMLAuthRequestRequest, Types_SAMLAuthRequest>

  func getGithubConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceWithSecretsRequest, Types_GithubConnectorV3>

  func getGithubConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourcesWithSecretsRequest, Types_GithubConnectorV3List>

  func createGithubConnector(
    _ request: Proto_CreateGithubConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateGithubConnectorRequest, Types_GithubConnectorV3>

  func updateGithubConnector(
    _ request: Proto_UpdateGithubConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpdateGithubConnectorRequest, Types_GithubConnectorV3>

  func upsertGithubConnector(
    _ request: Types_GithubConnectorV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_GithubConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertGithubConnectorV2(
    _ request: Proto_UpsertGithubConnectorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertGithubConnectorRequest, Types_GithubConnectorV3>

  func deleteGithubConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createGithubAuthRequest(
    _ request: Types_GithubAuthRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_GithubAuthRequest, Types_GithubAuthRequest>

  func getGithubAuthRequest(
    _ request: Proto_GetGithubAuthRequestRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetGithubAuthRequestRequest, Types_GithubAuthRequest>

  func getSSODiagnosticInfo(
    _ request: Proto_GetSSODiagnosticInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSSODiagnosticInfoRequest, Types_SSODiagnosticInfo>

  func getServerInfos(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?,
    handler: @escaping (Types_ServerInfoV1) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ServerInfoV1>

  func getServerInfo(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_ServerInfoV1>

  func upsertServerInfo(
    _ request: Types_ServerInfoV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ServerInfoV1, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteServerInfo(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllServerInfos(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getTrustedCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_TrustedClusterV2>

  func getTrustedClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_TrustedClusterV2List>

  func upsertTrustedCluster(
    _ request: Types_TrustedClusterV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_TrustedClusterV2, Types_TrustedClusterV2>

  func deleteTrustedCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getToken(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_ProvisionTokenV2>

  func getTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ProvisionTokenV2List>

  func createTokenV2(
    _ request: Proto_CreateTokenV2Request,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertTokenV2(
    _ request: Proto_UpsertTokenV2Request,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpsertTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteToken(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getClusterAuditConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterAuditConfigV2>

  func getClusterNetworkingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterNetworkingConfigV2>

  func setClusterNetworkingConfig(
    _ request: Types_ClusterNetworkingConfigV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ClusterNetworkingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>

  func resetClusterNetworkingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getSessionRecordingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionRecordingConfigV2>

  func setSessionRecordingConfig(
    _ request: Types_SessionRecordingConfigV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SessionRecordingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>

  func resetSessionRecordingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getAuthPreference(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AuthPreferenceV2>

  func setAuthPreference(
    _ request: Types_AuthPreferenceV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AuthPreferenceV2, SwiftProtobuf.Google_Protobuf_Empty>

  func resetAuthPreference(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getUIConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UIConfigV1>

  func setUIConfig(
    _ request: Types_UIConfigV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_UIConfigV1, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteUIConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getEvents(
    _ request: Proto_GetEventsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetEventsRequest, Proto_Events>

  func getSessionEvents(
    _ request: Proto_GetSessionEventsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSessionEventsRequest, Proto_Events>

  func getLock(
    _ request: Proto_GetLockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetLockRequest, Types_LockV2>

  func getLocks(
    _ request: Proto_GetLocksRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetLocksRequest, Proto_GetLocksResponse>

  func upsertLock(
    _ request: Types_LockV2,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_LockV2, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteLock(
    _ request: Proto_DeleteLockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteLockRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func replaceRemoteLocks(
    _ request: Proto_ReplaceRemoteLocksRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ReplaceRemoteLocksRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func streamSessionEvents(
    _ request: Proto_StreamSessionEventsRequest,
    callOptions: CallOptions?,
    handler: @escaping (Events_OneOf) -> Void
  ) -> ServerStreamingCall<Proto_StreamSessionEventsRequest, Events_OneOf>

  func getNetworkRestrictions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_NetworkRestrictionsV4>

  func setNetworkRestrictions(
    _ request: Types_NetworkRestrictionsV4,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_NetworkRestrictionsV4, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteNetworkRestrictions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getApps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AppV3List>

  func getApp(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_AppV3>

  func createApp(
    _ request: Types_AppV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>

  func updateApp(
    _ request: Types_AppV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteApp(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllApps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getDatabases(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_DatabaseV3List>

  func getDatabase(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_DatabaseV3>

  func createDatabase(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>

  func updateDatabase(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteDatabase(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllDatabases(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getKubernetesClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_KubernetesClusterV3List>

  func getKubernetesCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_KubernetesClusterV3>

  func createKubernetesCluster(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>

  func updateKubernetesCluster(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteKubernetesCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllKubernetesClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getWindowsDesktopServices(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWindowsDesktopServicesResponse>

  func getWindowsDesktopService(
    _ request: Proto_GetWindowsDesktopServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetWindowsDesktopServiceRequest, Proto_GetWindowsDesktopServiceResponse>

  func upsertWindowsDesktopService(
    _ request: Types_WindowsDesktopServiceV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_WindowsDesktopServiceV3, Types_KeepAlive>

  func deleteWindowsDesktopService(
    _ request: Proto_DeleteWindowsDesktopServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteWindowsDesktopServiceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllWindowsDesktopServices(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getWindowsDesktops(
    _ request: Types_WindowsDesktopFilter,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_WindowsDesktopFilter, Proto_GetWindowsDesktopsResponse>

  func createWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>

  func updateWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteWindowsDesktop(
    _ request: Proto_DeleteWindowsDesktopRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteWindowsDesktopRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllWindowsDesktops(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func generateWindowsDesktopCert(
    _ request: Proto_WindowsDesktopCertRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_WindowsDesktopCertRequest, Proto_WindowsDesktopCertResponse>

  func generateCertAuthorityCRL(
    _ request: Proto_CertAuthorityRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CertAuthorityRequest, Proto_CRL>

  func createConnectionDiagnostic(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>

  func updateConnectionDiagnostic(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>

  func getConnectionDiagnostic(
    _ request: Proto_GetConnectionDiagnosticRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetConnectionDiagnosticRequest, Types_ConnectionDiagnosticV1>

  func appendDiagnosticTrace(
    _ request: Proto_AppendDiagnosticTraceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_AppendDiagnosticTraceRequest, Types_ConnectionDiagnosticV1>

  func changeUserAuthentication(
    _ request: Proto_ChangeUserAuthenticationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ChangeUserAuthenticationRequest, Proto_ChangeUserAuthenticationResponse>

  func startAccountRecovery(
    _ request: Proto_StartAccountRecoveryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_StartAccountRecoveryRequest, Types_UserTokenV3>

  func verifyAccountRecovery(
    _ request: Proto_VerifyAccountRecoveryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_VerifyAccountRecoveryRequest, Types_UserTokenV3>

  func completeAccountRecovery(
    _ request: Proto_CompleteAccountRecoveryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CompleteAccountRecoveryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createAccountRecoveryCodes(
    _ request: Proto_CreateAccountRecoveryCodesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreateAccountRecoveryCodesRequest, Proto_RecoveryCodes>

  func getAccountRecoveryToken(
    _ request: Proto_GetAccountRecoveryTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetAccountRecoveryTokenRequest, Types_UserTokenV3>

  func getAccountRecoveryCodes(
    _ request: Proto_GetAccountRecoveryCodesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetAccountRecoveryCodesRequest, Proto_RecoveryCodes>

  func createPrivilegeToken(
    _ request: Proto_CreatePrivilegeTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_CreatePrivilegeTokenRequest, Types_UserTokenV3>

  func getInstaller(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, Types_InstallerV1>

  func getInstallers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_InstallerV1List>

  func setInstaller(
    _ request: Types_InstallerV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_InstallerV1, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteInstaller(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllInstallers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func listResources(
    _ request: Proto_ListResourcesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListResourcesRequest, Proto_ListResourcesResponse>

  func listUnifiedResources(
    _ request: Proto_ListUnifiedResourcesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListUnifiedResourcesRequest, Proto_ListUnifiedResourcesResponse>

  func getSSHTargets(
    _ request: Proto_GetSSHTargetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSSHTargetsRequest, Proto_GetSSHTargetsResponse>

  func getDomainName(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetDomainNameResponse>

  func getClusterCACert(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetClusterCACertResponse>

  func submitUsageEvent(
    _ request: Proto_SubmitUsageEventRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_SubmitUsageEventRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getLicense(
    _ request: Proto_GetLicenseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetLicenseRequest, Proto_GetLicenseResponse>

  func listReleases(
    _ request: Proto_ListReleasesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListReleasesRequest, Proto_ListReleasesResponse>

  func listSAMLIdPServiceProviders(
    _ request: Proto_ListSAMLIdPServiceProvidersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListSAMLIdPServiceProvidersRequest, Proto_ListSAMLIdPServiceProvidersResponse>

  func getSAMLIdPServiceProvider(
    _ request: Proto_GetSAMLIdPServiceProviderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetSAMLIdPServiceProviderRequest, Types_SAMLIdPServiceProviderV1>

  func createSAMLIdPServiceProvider(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>

  func updateSAMLIdPServiceProvider(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteSAMLIdPServiceProvider(
    _ request: Proto_DeleteSAMLIdPServiceProviderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteSAMLIdPServiceProviderRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllSAMLIdPServiceProviders(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func listUserGroups(
    _ request: Proto_ListUserGroupsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ListUserGroupsRequest, Proto_ListUserGroupsResponse>

  func getUserGroup(
    _ request: Proto_GetUserGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetUserGroupRequest, Types_UserGroupV1>

  func createUserGroup(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>

  func updateUserGroup(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteUserGroup(
    _ request: Proto_DeleteUserGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_DeleteUserGroupRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllUserGroups(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func getHeadlessAuthentication(
    _ request: Proto_GetHeadlessAuthenticationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_GetHeadlessAuthenticationRequest, Types_HeadlessAuthentication>

  func watchPendingHeadlessAuthentications(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?,
    handler: @escaping (Proto_Event) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_Event>

  func updateHeadlessAuthenticationState(
    _ request: Proto_UpdateHeadlessAuthenticationStateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_UpdateHeadlessAuthenticationStateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func exportUpgradeWindows(
    _ request: Proto_ExportUpgradeWindowsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_ExportUpgradeWindowsRequest, Proto_ExportUpgradeWindowsResponse>

  func getClusterMaintenanceConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterMaintenanceConfigV1>

  func updateClusterMaintenanceConfig(
    _ request: Types_ClusterMaintenanceConfigV1,
    callOptions: CallOptions?
  ) -> UnaryCall<Types_ClusterMaintenanceConfigV1, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteClusterMaintenanceConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>
}

extension Proto_AuthServiceClientProtocol {
  internal var serviceName: String {
    return "proto.AuthService"
  }

  /// InventoryControlStream is the per-instance stream used to advertise teleport instance
  /// presence/version/etc to the auth server.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func inventoryControlStream(
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_DownstreamInventoryOneOf) -> Void
  ) -> BidirectionalStreamingCall<Proto_UpstreamInventoryOneOf, Proto_DownstreamInventoryOneOf> {
    return self.makeBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.inventoryControlStream.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInventoryControlStreamInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetInventoryStatus gets information about current instance inventory.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInventoryStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getInventoryStatus(
    _ request: Proto_InventoryStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_InventoryStatusRequest, Proto_InventoryStatusSummary> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInventoryStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInventoryStatusInterceptors() ?? []
    )
  }

  /// GetInventoryConnectedServiceCounts returns the counts of each connected service seen in the inventory.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInventoryConnectedServiceCounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getInventoryConnectedServiceCounts(
    _ request: Proto_InventoryConnectedServiceCountsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_InventoryConnectedServiceCountsRequest, Proto_InventoryConnectedServiceCounts> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInventoryConnectedServiceCounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInventoryConnectedServiceCountsInterceptors() ?? []
    )
  }

  /// PingInventory attempts to trigger a downstream inventory ping (used in testing/debug).
  ///
  /// - Parameters:
  ///   - request: Request to send to PingInventory.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func pingInventory(
    _ request: Proto_InventoryPingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_InventoryPingRequest, Proto_InventoryPingResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.pingInventory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInventoryInterceptors() ?? []
    )
  }

  /// GetInstances streams all instances matching the specified filter.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInstances.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getInstances(
    _ request: Types_InstanceFilter,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_InstanceV1) -> Void
  ) -> ServerStreamingCall<Types_InstanceFilter, Types_InstanceV1> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstances.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstancesInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetClusterAlerts loads cluster-level alert messages.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetClusterAlerts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getClusterAlerts(
    _ request: Types_GetClusterAlertsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_GetClusterAlertsRequest, Proto_GetClusterAlertsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterAlerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterAlertsInterceptors() ?? []
    )
  }

  /// UpsertClusterAlert creates a cluster alert.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertClusterAlert.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertClusterAlert(
    _ request: Proto_UpsertClusterAlertRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertClusterAlertRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertClusterAlert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertClusterAlertInterceptors() ?? []
    )
  }

  /// CreateAlertAck marks a cluster alert as acknowledged.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAlertAck.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAlertAck(
    _ request: Types_AlertAcknowledgement,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AlertAcknowledgement, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAlertAck.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAlertAckInterceptors() ?? []
    )
  }

  /// GetAlertAcks gets active alert ackowledgements.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAlertAcks.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAlertAcks(
    _ request: Proto_GetAlertAcksRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetAlertAcksRequest, Proto_GetAlertAcksResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAlertAcks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAlertAcksInterceptors() ?? []
    )
  }

  /// ClearAlertAcks clears alert acknowledgments.
  ///
  /// - Parameters:
  ///   - request: Request to send to ClearAlertAcks.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func clearAlertAcks(
    _ request: Proto_ClearAlertAcksRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ClearAlertAcksRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.clearAlertAcks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearAlertAcksInterceptors() ?? []
    )
  }

  /// MaintainSessionPresence establishes a channel used to continously verify the presence for a
  /// session.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func maintainSessionPresence(
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_MFAAuthenticateChallenge) -> Void
  ) -> BidirectionalStreamingCall<Proto_PresenceMFAChallengeSend, Proto_MFAAuthenticateChallenge> {
    return self.makeBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.maintainSessionPresence.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMaintainSessionPresenceInterceptors() ?? [],
      handler: handler
    )
  }

  /// CreateSessionTracker creates a new session tracker resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSessionTracker.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSessionTracker(
    _ request: Proto_CreateSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateSessionTrackerRequest, Types_SessionTrackerV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSessionTrackerInterceptors() ?? []
    )
  }

  /// GetSessionTracker fetches a session tracker resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSessionTracker.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSessionTracker(
    _ request: Proto_GetSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSessionTrackerRequest, Types_SessionTrackerV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionTrackerInterceptors() ?? []
    )
  }

  /// GetActiveSessionTrackers returns a list of active sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetActiveSessionTrackers.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getActiveSessionTrackers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_SessionTrackerV1) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionTrackerV1> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveSessionTrackersInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetActiveSessionTrackersWithFilter returns a list of active sessions filtered by a filter.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetActiveSessionTrackersWithFilter.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getActiveSessionTrackersWithFilter(
    _ request: Types_SessionTrackerFilter,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_SessionTrackerV1) -> Void
  ) -> ServerStreamingCall<Types_SessionTrackerFilter, Types_SessionTrackerV1> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackersWithFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveSessionTrackersWithFilterInterceptors() ?? [],
      handler: handler
    )
  }

  /// RemoveSessionTracker removes a session tracker resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveSessionTracker.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeSessionTracker(
    _ request: Proto_RemoveSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_RemoveSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.removeSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSessionTrackerInterceptors() ?? []
    )
  }

  /// UpdateSessionTracker updates some state of a session tracker.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSessionTracker.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateSessionTracker(
    _ request: Proto_UpdateSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpdateSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSessionTrackerInterceptors() ?? []
    )
  }

  /// SendKeepAlives allows node to send a stream of keep alive requests
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata, status and response.
  internal func sendKeepAlives(
    callOptions: CallOptions? = nil
  ) -> ClientStreamingCall<Types_KeepAlive, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeClientStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.sendKeepAlives.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendKeepAlivesInterceptors() ?? []
    )
  }

  /// WatchEvents returns a new stream of cluster events
  ///
  /// - Parameters:
  ///   - request: Request to send to WatchEvents.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func watchEvents(
    _ request: Proto_Watch,
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_Event) -> Void
  ) -> ServerStreamingCall<Proto_Watch, Proto_Event> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.watchEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWatchEventsInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetNode retrieves a node described by the given request.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNode.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getNode(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceInNamespaceRequest, Types_ServerV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNodeInterceptors() ?? []
    )
  }

  /// UpsertNode upserts a node in a backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertNode.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertNode(
    _ request: Types_ServerV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ServerV2, Types_KeepAlive> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertNodeInterceptors() ?? []
    )
  }

  /// DeleteNode deletes an existing node in a backend described by the given request.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteNode.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteNode(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNodeInterceptors() ?? []
    )
  }

  /// DeleteAllNodes deletes all nodes.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllNodes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllNodes(
    _ request: Types_ResourcesInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourcesInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllNodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllNodesInterceptors() ?? []
    )
  }

  /// GenerateUserCerts generates a set of user certificates.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateUserCerts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateUserCerts(
    _ request: Proto_UserCertsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UserCertsRequest, Proto_Certs> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserCerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserCertsInterceptors() ?? []
    )
  }

  /// GenerateHostCerts generates a set of host certificates.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateHostCerts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateHostCerts(
    _ request: Proto_HostCertsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_HostCertsRequest, Proto_Certs> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateHostCerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateHostCertsInterceptors() ?? []
    )
  }

  /// GenerateUserSingleUseCerts generates a set of single-use user
  /// certificates.
  ///
  /// Deprecated: Superseded by GenerateUserCerts.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func generateUserSingleUseCerts(
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_UserSingleUseCertsResponse) -> Void
  ) -> BidirectionalStreamingCall<Proto_UserSingleUseCertsRequest, Proto_UserSingleUseCertsResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserSingleUseCerts.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserSingleUseCertsInterceptors() ?? [],
      handler: handler
    )
  }

  /// GenerateOpenSSHCert signs a SSH certificate that can be used
  /// to connect to Agentless nodes.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateOpenSSHCert.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateOpenSSHCert(
    _ request: Proto_OpenSSHCertRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_OpenSSHCertRequest, Proto_OpenSSHCert> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateOpenSSHCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateOpenSSHCertInterceptors() ?? []
    )
  }

  /// IsMFARequired checks whether MFA is required to access the specified
  /// target.
  ///
  /// - Parameters:
  ///   - request: Request to send to IsMFARequired.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func isMFARequired(
    _ request: Proto_IsMFARequiredRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_IsMFARequiredRequest, Proto_IsMFARequiredResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.isMFARequired.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIsMFARequiredInterceptors() ?? []
    )
  }

  /// GetAccessRequestsV2 gets all pending access requests.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccessRequestsV2.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getAccessRequestsV2(
    _ request: Types_AccessRequestFilter,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_AccessRequestV3) -> Void
  ) -> ServerStreamingCall<Types_AccessRequestFilter, Types_AccessRequestV3> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessRequestsV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessRequestsV2Interceptors() ?? [],
      handler: handler
    )
  }

  /// CreateAccessRequest creates a new access request.
  /// Deprecated: use CreateAccessRequestV2 instead.
  /// DELETE IN v15.0.0.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAccessRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAccessRequest(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AccessRequestV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccessRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccessRequestInterceptors() ?? []
    )
  }

  /// CreateAccessRequestV2 creates a new access request.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAccessRequestV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAccessRequestV2(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AccessRequestV3, Types_AccessRequestV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccessRequestV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccessRequestV2Interceptors() ?? []
    )
  }

  /// DeleteAccessRequest deletes an access request.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAccessRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAccessRequest(
    _ request: Proto_RequestID,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_RequestID, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAccessRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccessRequestInterceptors() ?? []
    )
  }

  /// SetAccessRequestState sets the state of an access request.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetAccessRequestState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setAccessRequestState(
    _ request: Proto_RequestStateSetter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_RequestStateSetter, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setAccessRequestState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAccessRequestStateInterceptors() ?? []
    )
  }

  /// SubmitAccessReview applies a review to a request and returns the post-application state.
  ///
  /// - Parameters:
  ///   - request: Request to send to SubmitAccessReview.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func submitAccessReview(
    _ request: Types_AccessReviewSubmission,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AccessReviewSubmission, Types_AccessRequestV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.submitAccessReview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitAccessReviewInterceptors() ?? []
    )
  }

  /// GetAccessCapabilities requests the access capabilities of a user.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccessCapabilities.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAccessCapabilities(
    _ request: Types_AccessCapabilitiesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AccessCapabilitiesRequest, Types_AccessCapabilities> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessCapabilities.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessCapabilitiesInterceptors() ?? []
    )
  }

  /// GetAccessRequestAllowedPromotions returns a list of allowed promotions from an access request to an access list.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccessRequestAllowedPromotions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAccessRequestAllowedPromotions(
    _ request: Proto_AccessRequestAllowedPromotionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_AccessRequestAllowedPromotionRequest, Proto_AccessRequestAllowedPromotionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessRequestAllowedPromotions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessRequestAllowedPromotionsInterceptors() ?? []
    )
  }

  /// GetPluginData gets all plugin data matching the supplied filter.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPluginData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPluginData(
    _ request: Types_PluginDataFilter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_PluginDataFilter, Proto_PluginDataSeq> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getPluginData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPluginDataInterceptors() ?? []
    )
  }

  /// UpdatePluginData updates a plugin's resource-specific datastore.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePluginData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updatePluginData(
    _ request: Types_PluginDataUpdateParams,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_PluginDataUpdateParams, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updatePluginData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePluginDataInterceptors() ?? []
    )
  }

  /// Ping gets basic info about the auth server. This method is intended
  /// to mimic the behavior of the proxy's Ping method, and may be used by
  /// clients for verification or configuration on startup.
  ///
  /// - Parameters:
  ///   - request: Request to send to Ping.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func ping(
    _ request: Proto_PingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_PingRequest, Proto_PingResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  /// GetResetPasswordToken returns a reset password token.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetResetPasswordToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getResetPasswordToken(
    _ request: Proto_GetResetPasswordTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetResetPasswordTokenRequest, Types_UserTokenV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getResetPasswordToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetResetPasswordTokenInterceptors() ?? []
    )
  }

  /// CreateResetPasswordToken resets users current password and second factors and creates a reset
  /// password token.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateResetPasswordToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createResetPasswordToken(
    _ request: Proto_CreateResetPasswordTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateResetPasswordTokenRequest, Types_UserTokenV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createResetPasswordToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateResetPasswordTokenInterceptors() ?? []
    )
  }

  /// CreateBot creates a new bot user.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBot.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createBot(
    _ request: Proto_CreateBotRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateBotRequest, Proto_CreateBotResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createBot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBotInterceptors() ?? []
    )
  }

  /// DeleteBot deletes a bot user.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteBot.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteBot(
    _ request: Proto_DeleteBotRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteBotRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteBot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteBotInterceptors() ?? []
    )
  }

  /// GetBotUsers gets all users with bot labels.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBotUsers.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getBotUsers(
    _ request: Proto_GetBotUsersRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_UserV2) -> Void
  ) -> ServerStreamingCall<Proto_GetBotUsersRequest, Types_UserV2> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getBotUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBotUsersInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetUser gets a user resource by name.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUser(
    _ request: Proto_GetUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetUserRequest, Types_UserV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserInterceptors() ?? []
    )
  }

  /// GetCurrentUser returns current user as seen by the server.
  /// Useful especially in the context of remote clusters which perform role and trait mapping.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCurrentUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getCurrentUser(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UserV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getCurrentUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCurrentUserInterceptors() ?? []
    )
  }

  /// GetCurrentUserRoles returns current user's roles.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCurrentUserRoles.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getCurrentUserRoles(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_RoleV6) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_RoleV6> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getCurrentUserRoles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCurrentUserRolesInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetUsers gets all current user resources.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUsers.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getUsers(
    _ request: Proto_GetUsersRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_UserV2) -> Void
  ) -> ServerStreamingCall<Proto_GetUsersRequest, Types_UserV2> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersInterceptors() ?? [],
      handler: handler
    )
  }

  /// CreateUser inserts a new user entry to a backend.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createUser(
    _ request: Types_UserV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserInterceptors() ?? []
    )
  }

  /// UpdateUser updates an existing user in a backend.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateUser(
    _ request: Types_UserV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUserInterceptors() ?? []
    )
  }

  /// DeleteUser deletes an existing user in a backend by username.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteUser(
    _ request: Proto_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  /// ChangePassword allows a user to change their own password.
  ///
  /// - Parameters:
  ///   - request: Request to send to ChangePassword.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func changePassword(
    _ request: Proto_ChangePasswordRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ChangePasswordRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.changePassword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangePasswordInterceptors() ?? []
    )
  }

  /// AcquireSemaphore acquires lease with requested resources from semaphore.
  ///
  /// - Parameters:
  ///   - request: Request to send to AcquireSemaphore.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func acquireSemaphore(
    _ request: Types_AcquireSemaphoreRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AcquireSemaphoreRequest, Types_SemaphoreLease> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.acquireSemaphore.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAcquireSemaphoreInterceptors() ?? []
    )
  }

  /// KeepAliveSemaphoreLease updates semaphore lease.
  ///
  /// - Parameters:
  ///   - request: Request to send to KeepAliveSemaphoreLease.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func keepAliveSemaphoreLease(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.keepAliveSemaphoreLease.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeKeepAliveSemaphoreLeaseInterceptors() ?? []
    )
  }

  /// CancelSemaphoreLease cancels semaphore lease early.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelSemaphoreLease.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelSemaphoreLease(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.cancelSemaphoreLease.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSemaphoreLeaseInterceptors() ?? []
    )
  }

  /// GetSemaphores returns a list of all semaphores matching the supplied filter.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSemaphores.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSemaphores(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SemaphoreFilter, Proto_Semaphores> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSemaphores.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSemaphoresInterceptors() ?? []
    )
  }

  /// DeleteSemaphore deletes a semaphore matching the supplied filter.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSemaphore.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteSemaphore(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SemaphoreFilter, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSemaphore.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSemaphoreInterceptors() ?? []
    )
  }

  /// EmitAuditEvent emits audit event
  ///
  /// - Parameters:
  ///   - request: Request to send to EmitAuditEvent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func emitAuditEvent(
    _ request: Events_OneOf,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Events_OneOf, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.emitAuditEvent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEmitAuditEventInterceptors() ?? []
    )
  }

  /// CreateAuditStream creates or resumes audit events streams
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func createAuditStream(
    callOptions: CallOptions? = nil,
    handler: @escaping (Events_StreamStatus) -> Void
  ) -> BidirectionalStreamingCall<Proto_AuditStreamRequest, Events_StreamStatus> {
    return self.makeBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuditStream.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuditStreamInterceptors() ?? [],
      handler: handler
    )
  }

  /// UpsertApplicationServer adds an application server.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertApplicationServer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertApplicationServer(
    _ request: Proto_UpsertApplicationServerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertApplicationServerRequest, Types_KeepAlive> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertApplicationServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertApplicationServerInterceptors() ?? []
    )
  }

  /// DeleteApplicationServer removes an application server.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteApplicationServer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteApplicationServer(
    _ request: Proto_DeleteApplicationServerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteApplicationServerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteApplicationServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteApplicationServerInterceptors() ?? []
    )
  }

  /// DeleteAllApplicationServers removes all application servers.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllApplicationServers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllApplicationServers(
    _ request: Proto_DeleteAllApplicationServersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteAllApplicationServersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllApplicationServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllApplicationServersInterceptors() ?? []
    )
  }

  /// GenerateAppToken will generate a JWT token for application access.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateAppToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateAppToken(
    _ request: Proto_GenerateAppTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GenerateAppTokenRequest, Proto_GenerateAppTokenResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateAppToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateAppTokenInterceptors() ?? []
    )
  }

  /// GetAppSession gets an application web session.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAppSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAppSession(
    _ request: Proto_GetAppSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetAppSessionRequest, Proto_GetAppSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppSessionInterceptors() ?? []
    )
  }

  /// ListAppSessions gets all application web sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListAppSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listAppSessions(
    _ request: Proto_ListAppSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListAppSessionsRequest, Proto_ListAppSessionsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListAppSessionsInterceptors() ?? []
    )
  }

  /// CreateAppSession creates an application web session. Application web
  /// sessions represent a browser session the client holds.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAppSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAppSession(
    _ request: Proto_CreateAppSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateAppSessionRequest, Proto_CreateAppSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAppSessionInterceptors() ?? []
    )
  }

  /// DeleteAppSession removes an application web session.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAppSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAppSession(
    _ request: Proto_DeleteAppSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteAppSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAppSessionInterceptors() ?? []
    )
  }

  /// DeleteAllAppSessions removes all application web sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllAppSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllAppSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllAppSessionsInterceptors() ?? []
    )
  }

  /// DeleteUserAppSessions deletes all user’s application sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUserAppSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteUserAppSessions(
    _ request: Proto_DeleteUserAppSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteUserAppSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserAppSessionsInterceptors() ?? []
    )
  }

  /// CreateSnowflakeSession creates web session with sub kind Snowflake used by Database access
  /// Snowflake integration.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSnowflakeSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSnowflakeSession(
    _ request: Proto_CreateSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateSnowflakeSessionRequest, Proto_CreateSnowflakeSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSnowflakeSessionInterceptors() ?? []
    )
  }

  /// GetSnowflakeSession returns a web session with sub kind Snowflake.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSnowflakeSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSnowflakeSession(
    _ request: Proto_GetSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSnowflakeSessionRequest, Proto_GetSnowflakeSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSnowflakeSessionInterceptors() ?? []
    )
  }

  /// GetSnowflakeSessions gets all Snowflake web sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSnowflakeSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSnowflakeSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetSnowflakeSessionsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSnowflakeSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSnowflakeSessionsInterceptors() ?? []
    )
  }

  /// DeleteSnowflakeSession removes a Snowflake web session.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSnowflakeSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteSnowflakeSession(
    _ request: Proto_DeleteSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteSnowflakeSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSnowflakeSessionInterceptors() ?? []
    )
  }

  /// DeleteAllSnowflakeSessions removes all Snowflake web sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllSnowflakeSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllSnowflakeSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSnowflakeSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSnowflakeSessionsInterceptors() ?? []
    )
  }

  /// CreateSAMLIdPSession creates web session with sub kind saml_idp used by the SAML IdP.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSAMLIdPSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSAMLIdPSession(
    _ request: Proto_CreateSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateSAMLIdPSessionRequest, Proto_CreateSAMLIdPSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLIdPSessionInterceptors() ?? []
    )
  }

  /// GetSAMLIdPSession returns a SAML IdP session with sub kind saml_idp.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSAMLIdPSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSAMLIdPSession(
    _ request: Proto_GetSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSAMLIdPSessionRequest, Proto_GetSAMLIdPSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLIdPSessionInterceptors() ?? []
    )
  }

  /// ListSAMLIdPSessions gets all SAML IdP sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListSAMLIdPSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listSAMLIdPSessions(
    _ request: Proto_ListSAMLIdPSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListSAMLIdPSessionsRequest, Proto_ListSAMLIdPSessionsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListSAMLIdPSessionsInterceptors() ?? []
    )
  }

  /// DeleteSAMLIdPSession removes a SAML IdP session.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSAMLIdPSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteSAMLIdPSession(
    _ request: Proto_DeleteSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteSAMLIdPSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLIdPSessionInterceptors() ?? []
    )
  }

  /// DeleteAllSAMLIdPSessions removes all SAML IdP sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllSAMLIdPSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllSAMLIdPSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSAMLIdPSessionsInterceptors() ?? []
    )
  }

  /// DeleteUserSAMLIdPSessions deletes all user’s SAML IdP sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUserSAMLIdPSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteUserSAMLIdPSessions(
    _ request: Proto_DeleteUserSAMLIdPSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteUserSAMLIdPSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserSAMLIdPSessionsInterceptors() ?? []
    )
  }

  /// GetWebSession gets a web session.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWebSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWebSession(
    _ request: Types_GetWebSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_GetWebSessionRequest, Proto_GetWebSessionResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebSessionInterceptors() ?? []
    )
  }

  /// GetWebSessions gets all web sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWebSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWebSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebSessionsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebSessionsInterceptors() ?? []
    )
  }

  /// DeleteWebSession deletes a web session.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWebSession.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteWebSession(
    _ request: Types_DeleteWebSessionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_DeleteWebSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWebSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWebSessionInterceptors() ?? []
    )
  }

  /// DeleteAllWebSessions deletes all web sessions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllWebSessions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllWebSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWebSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWebSessionsInterceptors() ?? []
    )
  }

  /// GetWebToken gets a web token.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWebToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWebToken(
    _ request: Types_GetWebTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_GetWebTokenRequest, Proto_GetWebTokenResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebTokenInterceptors() ?? []
    )
  }

  /// GetWebTokens gets all web tokens.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWebTokens.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWebTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebTokensResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebTokensInterceptors() ?? []
    )
  }

  /// DeleteWebToken deletes a web token.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWebToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteWebToken(
    _ request: Types_DeleteWebTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_DeleteWebTokenRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWebToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWebTokenInterceptors() ?? []
    )
  }

  /// DeleteAllWebTokens deletes all web tokens.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllWebTokens.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllWebTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWebTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWebTokensInterceptors() ?? []
    )
  }

  /// UpdateRemoteCluster updates remote cluster
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRemoteCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateRemoteCluster(
    _ request: Types_RemoteClusterV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_RemoteClusterV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateRemoteCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRemoteClusterInterceptors() ?? []
    )
  }

  /// UpsertKubernetesServer adds or updates a kubernetes server.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertKubernetesServer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertKubernetesServer(
    _ request: Proto_UpsertKubernetesServerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertKubernetesServerRequest, Types_KeepAlive> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertKubernetesServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertKubernetesServerInterceptors() ?? []
    )
  }

  /// DeleteKubernetesServer removes a kubernetes server.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteKubernetesServer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteKubernetesServer(
    _ request: Proto_DeleteKubernetesServerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteKubernetesServerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteKubernetesServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKubernetesServerInterceptors() ?? []
    )
  }

  /// DeleteAllKubernetesServers removes all kubernetes servers.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllKubernetesServers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllKubernetesServers(
    _ request: Proto_DeleteAllKubernetesServersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteAllKubernetesServersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllKubernetesServersInterceptors() ?? []
    )
  }

  /// UpsertDatabaseServer registers a new database proxy server.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertDatabaseServer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertDatabaseServer(
    _ request: Proto_UpsertDatabaseServerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertDatabaseServerRequest, Types_KeepAlive> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertDatabaseServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDatabaseServerInterceptors() ?? []
    )
  }

  /// DeleteDatabaseServer removes the specified database proxy server.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDatabaseServer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteDatabaseServer(
    _ request: Proto_DeleteDatabaseServerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteDatabaseServerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabaseServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseServerInterceptors() ?? []
    )
  }

  /// DeleteAllDatabaseServers removes all registered database proxy servers.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllDatabaseServers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllDatabaseServers(
    _ request: Proto_DeleteAllDatabaseServersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteAllDatabaseServersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabaseServersInterceptors() ?? []
    )
  }

  /// UpsertDatabaseService registers a new DatabaseService.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertDatabaseService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertDatabaseService(
    _ request: Proto_UpsertDatabaseServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertDatabaseServiceRequest, Types_KeepAlive> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertDatabaseService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDatabaseServiceInterceptors() ?? []
    )
  }

  /// DeleteDatabaseService removes the specified DatabaseService.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDatabaseService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteDatabaseService(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabaseService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseServiceInterceptors() ?? []
    )
  }

  /// DeleteAllDatabaseServices removes all registered DatabaseServices.
  /// If there's an error deleting the resources, there's no guarantee of a rollback.
  /// A subset of resources might be deleted while others still exist.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllDatabaseServices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllDatabaseServices(
    _ request: Proto_DeleteAllDatabaseServicesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteAllDatabaseServicesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabaseServicesInterceptors() ?? []
    )
  }

  /// SignDatabaseCSR generates client certificate used by proxy to
  /// authenticate with a remote database service.
  ///
  /// - Parameters:
  ///   - request: Request to send to SignDatabaseCSR.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func signDatabaseCSR(
    _ request: Proto_DatabaseCSRRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DatabaseCSRRequest, Proto_DatabaseCSRResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.signDatabaseCSR.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSignDatabaseCSRInterceptors() ?? []
    )
  }

  /// GenerateDatabaseCert generates client certificate used by a database
  /// service to authenticate with the database instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateDatabaseCert.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateDatabaseCert(
    _ request: Proto_DatabaseCertRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DatabaseCertRequest, Proto_DatabaseCertResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateDatabaseCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateDatabaseCertInterceptors() ?? []
    )
  }

  //// GenerateSnowflakeJWT generates JWT in the format required by Snowflake.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateSnowflakeJWT.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateSnowflakeJWT(
    _ request: Proto_SnowflakeJWTRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_SnowflakeJWTRequest, Proto_SnowflakeJWTResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateSnowflakeJWT.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateSnowflakeJWTInterceptors() ?? []
    )
  }

  /// GetRole retrieves a role described by the given request.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRole.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getRole(
    _ request: Proto_GetRoleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetRoleRequest, Types_RoleV6> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoleInterceptors() ?? []
    )
  }

  /// GetRole retrieves all roles.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRoles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getRoles(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetRolesResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getRoles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRolesInterceptors() ?? []
    )
  }

  /// CreateRole creates a new role.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRole.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createRole(
    _ request: Proto_CreateRoleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateRoleRequest, Types_RoleV6> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRoleInterceptors() ?? []
    )
  }

  /// UpdateRole updates an existing role.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRole.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateRole(
    _ request: Proto_UpdateRoleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpdateRoleRequest, Types_RoleV6> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRoleInterceptors() ?? []
    )
  }

  /// UpsertRoleV2 creates or overwrites an existing role.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertRoleV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertRoleV2(
    _ request: Proto_UpsertRoleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertRoleRequest, Types_RoleV6> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertRoleV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertRoleV2Interceptors() ?? []
    )
  }

  /// UpsertRole upserts a role in a backend.
  ///
  /// Deprecated: use UpsertRoleV2 instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertRole.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertRole(
    _ request: Types_RoleV6,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_RoleV6, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertRoleInterceptors() ?? []
    )
  }

  /// DeleteRole deletes an existing role in a backend described by the given request.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteRole.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteRole(
    _ request: Proto_DeleteRoleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteRoleRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteRoleInterceptors() ?? []
    )
  }

  /// AddMFADevice adds an MFA device for the user calling this RPC.
  ///
  /// The RPC is streaming both ways and the message sequence is:
  /// (-> means client-to-server, <- means server-to-client)
  /// -> Init
  /// <- ExistingMFAChallenge
  /// -> ExistingMFAResponse
  /// <- NewMFARegisterChallenge
  /// -> NewMFARegisterResponse
  /// <- Ack
  ///
  /// Deprecated: Use [AddMFADeviceSync] instead.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func addMFADevice(
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_AddMFADeviceResponse) -> Void
  ) -> BidirectionalStreamingCall<Proto_AddMFADeviceRequest, Proto_AddMFADeviceResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADevice.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceInterceptors() ?? [],
      handler: handler
    )
  }

  /// DeleteMFADevice deletes an MFA device for the user calling this RPC.
  ///
  /// The RPC is streaming both ways and the message sequence is:
  /// (-> means client-to-server, <- means server-to-client)
  /// -> Init
  /// <- MFAChallenge
  /// -> MFAResponse
  /// <- Ack
  ///
  /// Deprecated: Use [DeleteMFADeviceSync] instead.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func deleteMFADevice(
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_DeleteMFADeviceResponse) -> Void
  ) -> BidirectionalStreamingCall<Proto_DeleteMFADeviceRequest, Proto_DeleteMFADeviceResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADevice.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceInterceptors() ?? [],
      handler: handler
    )
  }

  /// AddMFADeviceSync adds a new MFA device.
  ///
  /// A typical MFA registration sequence calls the following RPCs:
  ///
  /// 1. CreateAuthenticateChallenge (necessary for registration challenge)
  /// 2. (optional) CreatePrivilegeToken
  /// 3. CreateRegisterChallenge (uses authn challenge and optionally a token)
  /// 4. AddMFADeviceSync
  ///
  /// - Parameters:
  ///   - request: Request to send to AddMFADeviceSync.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addMFADeviceSync(
    _ request: Proto_AddMFADeviceSyncRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_AddMFADeviceSyncRequest, Proto_AddMFADeviceSyncResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADeviceSync.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceSyncInterceptors() ?? []
    )
  }

  /// DeleteMFADeviceSync deletes a users MFA device (nonstream).
  ///
  /// A typical MFA deletion sequence calls the following RPCs:
  ///
  /// 1. (optional) CreateAuthenticateChallenge
  ///    (may be skipped depending on the token used, but is usually called
  ///    regardless)
  /// 2. (optional) CreatePrivilegeToken
  /// 3. DeleteMFADeviceSync (using either authn challenge or token)
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteMFADeviceSync.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteMFADeviceSync(
    _ request: Proto_DeleteMFADeviceSyncRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteMFADeviceSyncRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADeviceSync.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceSyncInterceptors() ?? []
    )
  }

  /// GetMFADevices returns all MFA devices registered for the user calling
  /// this RPC.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetMFADevices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getMFADevices(
    _ request: Proto_GetMFADevicesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetMFADevicesRequest, Proto_GetMFADevicesResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getMFADevices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMFADevicesInterceptors() ?? []
    )
  }

  /// CreateAuthenticateChallenge creates and returns MFA challenges for a users registered MFA
  /// devices.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAuthenticateChallenge.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAuthenticateChallenge(
    _ request: Proto_CreateAuthenticateChallengeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateAuthenticateChallengeRequest, Proto_MFAAuthenticateChallenge> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuthenticateChallenge.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuthenticateChallengeInterceptors() ?? []
    )
  }

  /// CreateRegisterChallenge creates and returns MFA register challenge for a new MFA device.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRegisterChallenge.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createRegisterChallenge(
    _ request: Proto_CreateRegisterChallengeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateRegisterChallengeRequest, Proto_MFARegisterChallenge> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createRegisterChallenge.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRegisterChallengeInterceptors() ?? []
    )
  }

  /// GetOIDCConnector gets an OIDC connector resource by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOIDCConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getOIDCConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceWithSecretsRequest, Types_OIDCConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCConnectorInterceptors() ?? []
    )
  }

  /// GetOIDCConnectors gets all current OIDC connector resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOIDCConnectors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getOIDCConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourcesWithSecretsRequest, Types_OIDCConnectorV3List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCConnectorsInterceptors() ?? []
    )
  }

  /// UpsertOIDCConnector creates a new OIDC connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateOIDCConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createOIDCConnector(
    _ request: Proto_CreateOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateOIDCConnectorRequest, Types_OIDCConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOIDCConnectorInterceptors() ?? []
    )
  }

  /// UpsertOIDCConnector updates an existing OIDC connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateOIDCConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateOIDCConnector(
    _ request: Proto_UpdateOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpdateOIDCConnectorRequest, Types_OIDCConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateOIDCConnectorInterceptors() ?? []
    )
  }

  /// UpsertOIDCConnector upserts an OIDC connector in a backend.
  ///
  /// Deprecated: Use UpsertOIDCConnectorV2 instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertOIDCConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertOIDCConnector(
    _ request: Types_OIDCConnectorV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_OIDCConnectorV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertOIDCConnectorInterceptors() ?? []
    )
  }

  /// UpsertOIDCConnectorV2 upserts an OIDC connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertOIDCConnectorV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertOIDCConnectorV2(
    _ request: Proto_UpsertOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertOIDCConnectorRequest, Types_OIDCConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertOIDCConnectorV2Interceptors() ?? []
    )
  }

  /// DeleteOIDCConnector deletes an existing OIDC connector in a backend by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteOIDCConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteOIDCConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteOIDCConnectorInterceptors() ?? []
    )
  }

  /// CreateOIDCAuthRequest creates OIDCAuthRequest.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateOIDCAuthRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createOIDCAuthRequest(
    _ request: Types_OIDCAuthRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_OIDCAuthRequest, Types_OIDCAuthRequest> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createOIDCAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOIDCAuthRequestInterceptors() ?? []
    )
  }

  /// GetOIDCAuthRequest returns OIDC auth request if found.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOIDCAuthRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getOIDCAuthRequest(
    _ request: Proto_GetOIDCAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetOIDCAuthRequestRequest, Types_OIDCAuthRequest> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCAuthRequestInterceptors() ?? []
    )
  }

  /// GetSAMLConnector gets a SAML connector resource by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSAMLConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSAMLConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceWithSecretsRequest, Types_SAMLConnectorV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLConnectorInterceptors() ?? []
    )
  }

  /// GetSAMLConnectors gets all current SAML connector resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSAMLConnectors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSAMLConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourcesWithSecretsRequest, Types_SAMLConnectorV2List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLConnectorsInterceptors() ?? []
    )
  }

  /// CreateSAMLConnector creates a new SAML connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSAMLConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSAMLConnector(
    _ request: Proto_CreateSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateSAMLConnectorRequest, Types_SAMLConnectorV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLConnectorInterceptors() ?? []
    )
  }

  /// UpdateSAMLConnector updates an existing SAML connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSAMLConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateSAMLConnector(
    _ request: Proto_UpdateSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpdateSAMLConnectorRequest, Types_SAMLConnectorV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSAMLConnectorInterceptors() ?? []
    )
  }

  /// UpsertSAMLConnector upserts a SAML connector in a backend.
  ///
  /// Deprecated: Use UpsertSAMLConnectorV2 instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertSAMLConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertSAMLConnector(
    _ request: Types_SAMLConnectorV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SAMLConnectorV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertSAMLConnectorInterceptors() ?? []
    )
  }

  /// UpsertSAMLConnectorV2 upserts a SAML connector in a backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertSAMLConnectorV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertSAMLConnectorV2(
    _ request: Proto_UpsertSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertSAMLConnectorRequest, Types_SAMLConnectorV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertSAMLConnectorV2Interceptors() ?? []
    )
  }

  /// DeleteSAMLConnector deletes an existing SAML connector in a backend by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSAMLConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteSAMLConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLConnectorInterceptors() ?? []
    )
  }

  /// CreateSAMLAuthRequest creates SAMLAuthRequest.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSAMLAuthRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSAMLAuthRequest(
    _ request: Types_SAMLAuthRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SAMLAuthRequest, Types_SAMLAuthRequest> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLAuthRequestInterceptors() ?? []
    )
  }

  /// GetSAMLAuthRequest returns SAML auth request if found.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSAMLAuthRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSAMLAuthRequest(
    _ request: Proto_GetSAMLAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSAMLAuthRequestRequest, Types_SAMLAuthRequest> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLAuthRequestInterceptors() ?? []
    )
  }

  /// GetGithubConnector gets a Github connector resource by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetGithubConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getGithubConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceWithSecretsRequest, Types_GithubConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubConnectorInterceptors() ?? []
    )
  }

  /// GetGithubConnectors gets all current Github connector resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetGithubConnectors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getGithubConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourcesWithSecretsRequest, Types_GithubConnectorV3List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubConnectorsInterceptors() ?? []
    )
  }

  /// CreateGithubConnector creates a new Github connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateGithubConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createGithubConnector(
    _ request: Proto_CreateGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateGithubConnectorRequest, Types_GithubConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateGithubConnectorInterceptors() ?? []
    )
  }

  /// UpdateGithubConnector updates an existing Github connector in the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateGithubConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateGithubConnector(
    _ request: Proto_UpdateGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpdateGithubConnectorRequest, Types_GithubConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateGithubConnectorInterceptors() ?? []
    )
  }

  /// UpsertGithubConnector upserts a Github connector in a backend.
  ///
  /// Deprecated: Use UpsertGithubConnectorV2 instead.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertGithubConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertGithubConnector(
    _ request: Types_GithubConnectorV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_GithubConnectorV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertGithubConnectorInterceptors() ?? []
    )
  }

  /// UpsertGithubConnectorV2 upserts a Github connector in a backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertGithubConnectorV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertGithubConnectorV2(
    _ request: Proto_UpsertGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertGithubConnectorRequest, Types_GithubConnectorV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertGithubConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertGithubConnectorV2Interceptors() ?? []
    )
  }

  /// DeleteGithubConnector deletes an existing Github connector in a backend by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteGithubConnector.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteGithubConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteGithubConnectorInterceptors() ?? []
    )
  }

  /// CreateGithubAuthRequest creates GithubAuthRequest.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateGithubAuthRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createGithubAuthRequest(
    _ request: Types_GithubAuthRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_GithubAuthRequest, Types_GithubAuthRequest> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createGithubAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateGithubAuthRequestInterceptors() ?? []
    )
  }

  /// GetGithubAuthRequest returns Github auth request if found.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetGithubAuthRequest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getGithubAuthRequest(
    _ request: Proto_GetGithubAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetGithubAuthRequestRequest, Types_GithubAuthRequest> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubAuthRequestInterceptors() ?? []
    )
  }

  /// GetSSODiagnosticInfo returns SSO diagnostic info records.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSSODiagnosticInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSSODiagnosticInfo(
    _ request: Proto_GetSSODiagnosticInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSSODiagnosticInfoRequest, Types_SSODiagnosticInfo> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSSODiagnosticInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSSODiagnosticInfoInterceptors() ?? []
    )
  }

  /// GetServerInfos returns a stream of ServerInfos.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetServerInfos.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func getServerInfos(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil,
    handler: @escaping (Types_ServerInfoV1) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ServerInfoV1> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getServerInfos.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetServerInfosInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetServerInfo returns a ServerInfo by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetServerInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getServerInfo(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_ServerInfoV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetServerInfoInterceptors() ?? []
    )
  }

  /// UpsertServerInfo upserts a ServerInfo.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertServerInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertServerInfo(
    _ request: Types_ServerInfoV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ServerInfoV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertServerInfoInterceptors() ?? []
    )
  }

  /// DeleteServerInfo deletes a ServerInfo by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteServerInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteServerInfo(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteServerInfoInterceptors() ?? []
    )
  }

  /// DeleteAllServerInfos deletes all ServerInfos.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllServerInfos.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllServerInfos(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllServerInfos.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllServerInfosInterceptors() ?? []
    )
  }

  /// GetTrustedCluster gets a Trusted Cluster resource by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTrustedCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getTrustedCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_TrustedClusterV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrustedClusterInterceptors() ?? []
    )
  }

  /// GetTrustedClusters gets all current Trusted Cluster resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTrustedClusters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getTrustedClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_TrustedClusterV2List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTrustedClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrustedClustersInterceptors() ?? []
    )
  }

  /// UpsertTrustedCluster upserts a Trusted Cluster in a backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertTrustedCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertTrustedCluster(
    _ request: Types_TrustedClusterV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_TrustedClusterV2, Types_TrustedClusterV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertTrustedClusterInterceptors() ?? []
    )
  }

  /// DeleteTrustedCluster deletes an existing Trusted Cluster in a backend by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTrustedCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteTrustedCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTrustedClusterInterceptors() ?? []
    )
  }

  /// GetToken retrieves a token described by the given request.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getToken(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_ProvisionTokenV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTokenInterceptors() ?? []
    )
  }

  /// GetToken retrieves all tokens.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTokens.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ProvisionTokenV2List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTokensInterceptors() ?? []
    )
  }

  /// CreateTokenV2 creates a token in a backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTokenV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createTokenV2(
    _ request: Proto_CreateTokenV2Request,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createTokenV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTokenV2Interceptors() ?? []
    )
  }

  /// UpsertTokenV2 upserts a token in a backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertTokenV2.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertTokenV2(
    _ request: Proto_UpsertTokenV2Request,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpsertTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertTokenV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertTokenV2Interceptors() ?? []
    )
  }

  /// DeleteToken deletes an existing token in a backend described by the given request.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteToken(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTokenInterceptors() ?? []
    )
  }

  /// GetClusterAuditConfig gets cluster audit configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetClusterAuditConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getClusterAuditConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterAuditConfigV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterAuditConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterAuditConfigInterceptors() ?? []
    )
  }

  /// GetClusterNetworkingConfig gets cluster networking configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetClusterNetworkingConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getClusterNetworkingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterNetworkingConfigV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  /// SetClusterNetworkingConfig sets cluster networking configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetClusterNetworkingConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setClusterNetworkingConfig(
    _ request: Types_ClusterNetworkingConfigV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ClusterNetworkingConfigV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  /// ResetClusterNetworkingConfig resets cluster networking configuration to defaults.
  ///
  /// - Parameters:
  ///   - request: Request to send to ResetClusterNetworkingConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func resetClusterNetworkingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  /// GetSessionRecordingConfig gets session recording configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSessionRecordingConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSessionRecordingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionRecordingConfigV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionRecordingConfigInterceptors() ?? []
    )
  }

  /// SetSessionRecordingConfig sets session recording configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetSessionRecordingConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setSessionRecordingConfig(
    _ request: Types_SessionRecordingConfigV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SessionRecordingConfigV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetSessionRecordingConfigInterceptors() ?? []
    )
  }

  /// ResetSessionRecordingConfig resets session recording configuration to defaults.
  ///
  /// - Parameters:
  ///   - request: Request to send to ResetSessionRecordingConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func resetSessionRecordingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetSessionRecordingConfigInterceptors() ?? []
    )
  }

  /// GetAuthPreference gets cluster auth preference.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAuthPreference.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAuthPreference(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AuthPreferenceV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAuthPreferenceInterceptors() ?? []
    )
  }

  /// SetAuthPreference sets cluster auth preference.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetAuthPreference.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setAuthPreference(
    _ request: Types_AuthPreferenceV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AuthPreferenceV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAuthPreferenceInterceptors() ?? []
    )
  }

  /// ResetAuthPreference resets cluster auth preference to defaults.
  ///
  /// - Parameters:
  ///   - request: Request to send to ResetAuthPreference.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func resetAuthPreference(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetAuthPreferenceInterceptors() ?? []
    )
  }

  /// GetUIConfig gets the configuration for the UI served by the proxy service
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUIConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUIConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UIConfigV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUIConfigInterceptors() ?? []
    )
  }

  /// SetUIConfig sets the configuration for the UI served by the proxy service
  ///
  /// - Parameters:
  ///   - request: Request to send to SetUIConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setUIConfig(
    _ request: Types_UIConfigV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_UIConfigV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetUIConfigInterceptors() ?? []
    )
  }

  /// DeleteUIConfig deletes the custom configuration for the UI served by the proxy service
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUIConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteUIConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUIConfigInterceptors() ?? []
    )
  }

  /// GetEvents gets events from the audit log.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEvents.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getEvents(
    _ request: Proto_GetEventsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetEventsRequest, Proto_Events> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsInterceptors() ?? []
    )
  }

  /// GetSessionEvents gets completed session events from the audit log.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSessionEvents.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSessionEvents(
    _ request: Proto_GetSessionEventsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSessionEventsRequest, Proto_Events> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionEventsInterceptors() ?? []
    )
  }

  /// GetLock gets a lock by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getLock(
    _ request: Proto_GetLockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetLockRequest, Types_LockV2> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLockInterceptors() ?? []
    )
  }

  /// GetLocks gets all/in-force locks that match at least one of the targets when specified.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLocks.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getLocks(
    _ request: Proto_GetLocksRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetLocksRequest, Proto_GetLocksResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLocks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLocksInterceptors() ?? []
    )
  }

  /// UpsertLock upserts a lock.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertLock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertLock(
    _ request: Types_LockV2,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_LockV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertLockInterceptors() ?? []
    )
  }

  /// DeleteLock deletes a lock.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteLock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteLock(
    _ request: Proto_DeleteLockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteLockRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLockInterceptors() ?? []
    )
  }

  /// ReplaceRemoteLocks replaces the set of locks associated with a remote cluster.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReplaceRemoteLocks.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func replaceRemoteLocks(
    _ request: Proto_ReplaceRemoteLocksRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ReplaceRemoteLocksRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.replaceRemoteLocks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceRemoteLocksInterceptors() ?? []
    )
  }

  /// StreamSessionEvents streams audit events from a given session recording.
  ///
  /// - Parameters:
  ///   - request: Request to send to StreamSessionEvents.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func streamSessionEvents(
    _ request: Proto_StreamSessionEventsRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Events_OneOf) -> Void
  ) -> ServerStreamingCall<Proto_StreamSessionEventsRequest, Events_OneOf> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.streamSessionEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamSessionEventsInterceptors() ?? [],
      handler: handler
    )
  }

  /// GetNetworkRestrictions retrieves all the network restrictions (allow/deny lists).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNetworkRestrictions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getNetworkRestrictions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_NetworkRestrictionsV4> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkRestrictionsInterceptors() ?? []
    )
  }

  /// SetNetworkRestrictions updates the network restrictions.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetNetworkRestrictions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setNetworkRestrictions(
    _ request: Types_NetworkRestrictionsV4,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_NetworkRestrictionsV4, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNetworkRestrictionsInterceptors() ?? []
    )
  }

  /// DeleteNetworkRestrictions delete the network restrictions.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteNetworkRestrictions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteNetworkRestrictions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNetworkRestrictionsInterceptors() ?? []
    )
  }

  /// GetApps returns all registered applications.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetApps.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getApps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AppV3List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppsInterceptors() ?? []
    )
  }

  /// GetApp returns an application by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getApp(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_AppV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppInterceptors() ?? []
    )
  }

  /// CreateApp creates a new application resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createApp(
    _ request: Types_AppV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAppInterceptors() ?? []
    )
  }

  /// UpdateApp updates existing application resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateApp(
    _ request: Types_AppV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAppInterceptors() ?? []
    )
  }

  /// DeleteApp removes specified application resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteApp.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteApp(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAppInterceptors() ?? []
    )
  }

  /// DeleteAllApps removes all application resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllApps.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllApps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllAppsInterceptors() ?? []
    )
  }

  /// GetDatabases returns all registered databases.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDatabases.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDatabases(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_DatabaseV3List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDatabases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDatabasesInterceptors() ?? []
    )
  }

  /// GetDatabase returns a database by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDatabase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDatabase(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_DatabaseV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDatabaseInterceptors() ?? []
    )
  }

  /// CreateDatabase creates a new database resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDatabase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDatabase(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDatabaseInterceptors() ?? []
    )
  }

  /// UpdateDatabase updates existing database resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateDatabase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateDatabase(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDatabaseInterceptors() ?? []
    )
  }

  /// DeleteDatabase removes specified database resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDatabase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteDatabase(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseInterceptors() ?? []
    )
  }

  /// DeleteAllDatabases removes all database resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllDatabases.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllDatabases(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabasesInterceptors() ?? []
    )
  }

  /// GetKubernetesClusters returns all registered kubernetes clusters.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetKubernetesClusters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getKubernetesClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_KubernetesClusterV3List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getKubernetesClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKubernetesClustersInterceptors() ?? []
    )
  }

  /// GetKubernetesCluster returns a kubernetes cluster by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetKubernetesCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getKubernetesCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_KubernetesClusterV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKubernetesClusterInterceptors() ?? []
    )
  }

  /// CreateKubernetesCluster creates a new kubernetes cluster resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateKubernetesCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createKubernetesCluster(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateKubernetesClusterInterceptors() ?? []
    )
  }

  /// UpdateKubernetesCluster updates existing kubernetes cluster resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateKubernetesCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateKubernetesCluster(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateKubernetesClusterInterceptors() ?? []
    )
  }

  /// DeleteKubernetesCluster removes specified kubernetes cluster resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteKubernetesCluster.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteKubernetesCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKubernetesClusterInterceptors() ?? []
    )
  }

  /// DeleteAllKubernetesClusters removes all kubernetes cluster resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllKubernetesClusters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllKubernetesClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllKubernetesClustersInterceptors() ?? []
    )
  }

  /// GetWindowsDesktopServices returns all registered Windows desktop services.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWindowsDesktopServices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWindowsDesktopServices(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWindowsDesktopServicesResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopServicesInterceptors() ?? []
    )
  }

  /// GetWindowsDesktopService gets a Windows desktop service by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWindowsDesktopService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWindowsDesktopService(
    _ request: Proto_GetWindowsDesktopServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetWindowsDesktopServiceRequest, Proto_GetWindowsDesktopServiceResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopServiceInterceptors() ?? []
    )
  }

  /// UpsertWindowsDesktopService registers a new Windows desktop service.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertWindowsDesktopService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertWindowsDesktopService(
    _ request: Types_WindowsDesktopServiceV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_WindowsDesktopServiceV3, Types_KeepAlive> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertWindowsDesktopServiceInterceptors() ?? []
    )
  }

  /// DeleteWindowsDesktopService removes the specified Windows desktop service.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWindowsDesktopService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteWindowsDesktopService(
    _ request: Proto_DeleteWindowsDesktopServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteWindowsDesktopServiceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWindowsDesktopServiceInterceptors() ?? []
    )
  }

  /// DeleteAllWindowsDesktopServices removes all registered Windows desktop services.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllWindowsDesktopServices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllWindowsDesktopServices(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktopServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWindowsDesktopServicesInterceptors() ?? []
    )
  }

  /// GetWindowsDesktops returns all registered Windows desktop hosts matching the supplied filter.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWindowsDesktops.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWindowsDesktops(
    _ request: Types_WindowsDesktopFilter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_WindowsDesktopFilter, Proto_GetWindowsDesktopsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopsInterceptors() ?? []
    )
  }

  /// CreateWindowsDesktop registers a new Windows desktop host.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateWindowsDesktop.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateWindowsDesktopInterceptors() ?? []
    )
  }

  /// UpdateWindowsDesktop updates an existing Windows desktop host.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateWindowsDesktop.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateWindowsDesktopInterceptors() ?? []
    )
  }

  /// UpsertWindowsDesktop updates a Windows desktop host, creating it if it doesn't exist.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertWindowsDesktop.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertWindowsDesktopInterceptors() ?? []
    )
  }

  /// DeleteWindowsDesktop removes the specified Windows desktop host.
  /// Unlike GetWindowsDesktops, this call will delete at-most 1 desktop.
  /// To delete all desktops, use DeleteAllWindowsDesktops.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWindowsDesktop.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteWindowsDesktop(
    _ request: Proto_DeleteWindowsDesktopRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteWindowsDesktopRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWindowsDesktopInterceptors() ?? []
    )
  }

  /// DeleteAllWindowsDesktops removes all registered Windows desktop hosts.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllWindowsDesktops.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllWindowsDesktops(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWindowsDesktopsInterceptors() ?? []
    )
  }

  /// GenerateWindowsDesktopCert generates client smartcard certificate used
  /// by an RDP client to authenticate with Windows.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateWindowsDesktopCert.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateWindowsDesktopCert(
    _ request: Proto_WindowsDesktopCertRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_WindowsDesktopCertRequest, Proto_WindowsDesktopCertResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateWindowsDesktopCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateWindowsDesktopCertInterceptors() ?? []
    )
  }

  /// GenerateCertAuthorityCRL creates an empty CRL for the specified CA.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateCertAuthorityCRL.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateCertAuthorityCRL(
    _ request: Proto_CertAuthorityRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CertAuthorityRequest, Proto_CRL> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateCertAuthorityCRL.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateCertAuthorityCRLInterceptors() ?? []
    )
  }

  /// CreateConnectionDiagnostic creates a new connection diagnostic.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateConnectionDiagnostic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createConnectionDiagnostic(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateConnectionDiagnosticInterceptors() ?? []
    )
  }

  /// UpdateConnectionDiagnostic updates a connection diagnostic.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateConnectionDiagnostic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateConnectionDiagnostic(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateConnectionDiagnosticInterceptors() ?? []
    )
  }

  /// GetConnectionDiagnostic reads a connection diagnostic.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConnectionDiagnostic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getConnectionDiagnostic(
    _ request: Proto_GetConnectionDiagnosticRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetConnectionDiagnosticRequest, Types_ConnectionDiagnosticV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConnectionDiagnosticInterceptors() ?? []
    )
  }

  /// AppendDiagnosticTrace appends a Trace to the ConnectionDiagnostic.
  ///
  /// - Parameters:
  ///   - request: Request to send to AppendDiagnosticTrace.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func appendDiagnosticTrace(
    _ request: Proto_AppendDiagnosticTraceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_AppendDiagnosticTraceRequest, Types_ConnectionDiagnosticV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.appendDiagnosticTrace.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAppendDiagnosticTraceInterceptors() ?? []
    )
  }

  /// ChangeUserAuthentication allows a user to change their password and if enabled,
  /// also adds a new MFA device. After successful invocation, a new web session is created as well
  /// as a new set of recovery codes (if user meets the requirements to receive them), invalidating
  /// any existing codes the user previously had.
  ///
  /// - Parameters:
  ///   - request: Request to send to ChangeUserAuthentication.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func changeUserAuthentication(
    _ request: Proto_ChangeUserAuthenticationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ChangeUserAuthenticationRequest, Proto_ChangeUserAuthenticationResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.changeUserAuthentication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangeUserAuthenticationInterceptors() ?? []
    )
  }

  /// StartAccountRecovery (exclusive to cloud users) is the first out of two step user
  /// verification needed to allow a user to recover their account. The first form of verification
  /// is a user's username and a recovery code. After successful verification, a recovery start
  /// token is created for the user which its ID will be used as part of a URL that will be emailed
  /// to the user (not done in this request). The user will be able to finish their second form of
  /// verification by clicking on this URL and following the prompts.
  ///
  /// If a valid user fails to provide correct recovery code for MaxAccountRecoveryAttempts,
  /// user account gets temporarily locked from further recovery attempts and from logging in.
  ///
  /// Start tokens last RecoveryStartTokenTTL.
  ///
  /// - Parameters:
  ///   - request: Request to send to StartAccountRecovery.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func startAccountRecovery(
    _ request: Proto_StartAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_StartAccountRecoveryRequest, Types_UserTokenV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.startAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartAccountRecoveryInterceptors() ?? []
    )
  }

  /// VerifyAccountRecovery (exclusive to cloud users) is the second step of the two step
  /// verification needed to allow a user to recover their account, after RPC StartAccountRecovery.
  /// The second form of verification is a user's password or their second factor (depending on
  /// what authentication they needed to recover). After successful verification, a recovery
  /// approved token is created which allows a user to request protected actions while not logged
  /// in e.g: setting a new password or a mfa device, viewing their MFA devices, deleting their MFA
  /// devices, and generating new recovery codes.
  ///
  /// The recovery start token to verify this request becomes deleted before
  /// creating a recovery approved token, which invalidates the recovery link users received
  /// to finish their verification.
  ///
  /// If user fails to verify themselves for MaxAccountRecoveryAttempts
  /// (combined attempts with RPC StartAccountRecovery), users account will be temporarily locked
  /// from logging in. If users still have unused recovery codes left, they still have
  /// opportunities to recover their account. To allow this, users recovery attempts are also
  /// deleted along with all user tokens which will force the user to restart the recovery process
  /// from step 1 (RPC StartAccountRecovery).
  ///
  /// Recovery approved tokens last RecoveryApprovedTokenTTL.
  ///
  /// - Parameters:
  ///   - request: Request to send to VerifyAccountRecovery.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func verifyAccountRecovery(
    _ request: Proto_VerifyAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_VerifyAccountRecoveryRequest, Types_UserTokenV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.verifyAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyAccountRecoveryInterceptors() ?? []
    )
  }

  /// CompleteAccountRecovery (exclusive to cloud users) is the last step in account
  /// recovery, after RPC's StartAccountRecovery and VerifyAccountRecovery. This step sets a new
  /// password or adds a new mfa device, allowing the user to regain access to their account with
  /// the new credentials. When the new authentication is successfully set, any user lock is
  /// removed so the user can login immediately afterwards.
  ///
  /// - Parameters:
  ///   - request: Request to send to CompleteAccountRecovery.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func completeAccountRecovery(
    _ request: Proto_CompleteAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CompleteAccountRecoveryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.completeAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompleteAccountRecoveryInterceptors() ?? []
    )
  }

  /// CreateAccountRecoveryCodes (exclusive to cloud users) creates new set of recovery codes for a
  /// user, replacing and invalidating any previously owned codes. Users can only get recovery
  /// codes if their username is in a valid email format.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAccountRecoveryCodes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAccountRecoveryCodes(
    _ request: Proto_CreateAccountRecoveryCodesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreateAccountRecoveryCodesRequest, Proto_RecoveryCodes> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccountRecoveryCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccountRecoveryCodesInterceptors() ?? []
    )
  }

  /// GetAccountRecoveryToken (exclusive to cloud users) returns a user token resource after
  /// verifying that the token requested has not expired and is of the correct recovery kind.
  /// Besides checking for validity of a token ID, it is also used to get basic information from
  /// the token e.g: username, state of recovery (started or approved) and the type of recovery
  /// requested (password or second factor).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountRecoveryToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAccountRecoveryToken(
    _ request: Proto_GetAccountRecoveryTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetAccountRecoveryTokenRequest, Types_UserTokenV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountRecoveryTokenInterceptors() ?? []
    )
  }

  /// GetAccountRecoveryCodes (exclusive to cloud users) is a request to return the user in context
  /// their recovery codes. This request will not return any secrets (the values of recovery
  /// codes), but instead returns non-sensitive data eg. when the recovery codes were created.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountRecoveryCodes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getAccountRecoveryCodes(
    _ request: Proto_GetAccountRecoveryCodesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetAccountRecoveryCodesRequest, Proto_RecoveryCodes> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountRecoveryCodesInterceptors() ?? []
    )
  }

  /// CreatePrivilegeToken returns a new privilege token after a logged in user successfully
  /// re-authenticates with their second factor device. Privilege token lasts PrivilegeTokenTTL and
  /// is used to gain access to privileged actions eg: deleting/adding a MFA device.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreatePrivilegeToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createPrivilegeToken(
    _ request: Proto_CreatePrivilegeTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_CreatePrivilegeTokenRequest, Types_UserTokenV3> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createPrivilegeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePrivilegeTokenInterceptors() ?? []
    )
  }

  /// GetInstaller retrieves the installer script resource
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInstaller.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getInstaller(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, Types_InstallerV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstallerInterceptors() ?? []
    )
  }

  /// GetInstallers retrieves all of installer script resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInstallers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getInstallers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_InstallerV1List> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstallers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstallersInterceptors() ?? []
    )
  }

  /// SetInstaller sets the installer script resource
  ///
  /// - Parameters:
  ///   - request: Request to send to SetInstaller.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setInstaller(
    _ request: Types_InstallerV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_InstallerV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInstallerInterceptors() ?? []
    )
  }

  /// DeleteInstaller removes the specified installer script resource
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteInstaller.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteInstaller(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteInstallerInterceptors() ?? []
    )
  }

  /// DeleteAllInstallers removes all installer script resources
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllInstallers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllInstallers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllInstallers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllInstallersInterceptors() ?? []
    )
  }

  /// ListResources retrieves a paginated list of resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListResources.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listResources(
    _ request: Proto_ListResourcesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListResourcesRequest, Proto_ListResourcesResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListResourcesInterceptors() ?? []
    )
  }

  /// ListUnifiedResources retrieves a paginated list of all resource types displayable in the UI.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListUnifiedResources.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listUnifiedResources(
    _ request: Proto_ListUnifiedResourcesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListUnifiedResourcesRequest, Proto_ListUnifiedResourcesResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listUnifiedResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListUnifiedResourcesInterceptors() ?? []
    )
  }

  /// GetSSHTargets gets all servers that would match an equivalent ssh dial request. Note that this method
  /// returns all resources directly accessible to the user *and* all resources available via 'SearchAsRoles',
  /// which is what we want when handling things like ambiguous host errors and resource-based access requests,
  /// but may result in confusing behavior if it is used outside of those contexts.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSSHTargets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSSHTargets(
    _ request: Proto_GetSSHTargetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSSHTargetsRequest, Proto_GetSSHTargetsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSSHTargets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSSHTargetsInterceptors() ?? []
    )
  }

  /// GetDomainName returns local auth domain of the current auth server
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDomainName.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDomainName(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetDomainNameResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDomainName.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDomainNameInterceptors() ?? []
    )
  }

  /// GetClusterCACert returns the PEM-encoded TLS certs for the local cluster
  /// without signing keys. If the cluster has multiple TLS certs, they will
  /// all be appended.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetClusterCACert.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getClusterCACert(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetClusterCACertResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterCACert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterCACertInterceptors() ?? []
    )
  }

  /// SubmitUsageEvent submits an external usage event.
  ///
  /// - Parameters:
  ///   - request: Request to send to SubmitUsageEvent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func submitUsageEvent(
    _ request: Proto_SubmitUsageEventRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_SubmitUsageEventRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.submitUsageEvent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitUsageEventInterceptors() ?? []
    )
  }

  /// GetLicense returns the license used to start the auth server.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLicense.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getLicense(
    _ request: Proto_GetLicenseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetLicenseRequest, Proto_GetLicenseResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLicense.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLicenseInterceptors() ?? []
    )
  }

  /// ListReleases returns a list of Teleport Enterprise releases.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListReleases.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listReleases(
    _ request: Proto_ListReleasesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListReleasesRequest, Proto_ListReleasesResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listReleases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListReleasesInterceptors() ?? []
    )
  }

  /// ListSAMLIdPServiceProviders returns a paginated list of SAML IdP service provider resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListSAMLIdPServiceProviders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listSAMLIdPServiceProviders(
    _ request: Proto_ListSAMLIdPServiceProvidersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListSAMLIdPServiceProvidersRequest, Proto_ListSAMLIdPServiceProvidersResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listSAMLIdPServiceProviders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListSAMLIdPServiceProvidersInterceptors() ?? []
    )
  }

  /// GetSAMLIdPServiceProvider returns the specified SAML IdP service provider resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSAMLIdPServiceProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSAMLIdPServiceProvider(
    _ request: Proto_GetSAMLIdPServiceProviderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetSAMLIdPServiceProviderRequest, Types_SAMLIdPServiceProviderV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  /// CreateSAMLIdPServiceProvider creates a new SAML IdP service provider resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSAMLIdPServiceProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSAMLIdPServiceProvider(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  /// UpdateSAMLIdPServiceProvider updates an existing SAML IdP service provider resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSAMLIdPServiceProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateSAMLIdPServiceProvider(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  /// DeleteSAMLIdPServiceProvider removes the specified SAML IdP service provider resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSAMLIdPServiceProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteSAMLIdPServiceProvider(
    _ request: Proto_DeleteSAMLIdPServiceProviderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteSAMLIdPServiceProviderRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  /// DeleteAllSAMLIdPServiceProviders removes all SAML IdP service providers.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllSAMLIdPServiceProviders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllSAMLIdPServiceProviders(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPServiceProviders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSAMLIdPServiceProvidersInterceptors() ?? []
    )
  }

  /// ListUserGroups returns a paginated list of user group resources.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListUserGroups.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listUserGroups(
    _ request: Proto_ListUserGroupsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ListUserGroupsRequest, Proto_ListUserGroupsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listUserGroups.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListUserGroupsInterceptors() ?? []
    )
  }

  /// GetUserGroup returns the specified user group resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserGroup(
    _ request: Proto_GetUserGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetUserGroupRequest, Types_UserGroupV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserGroupInterceptors() ?? []
    )
  }

  /// CreateUserGroup creates a new user group resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateUserGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createUserGroup(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserGroupInterceptors() ?? []
    )
  }

  /// UpdateUserGroup updates an existing user group resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateUserGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateUserGroup(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUserGroupInterceptors() ?? []
    )
  }

  /// DeleteUserGroup removes the specified user group resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUserGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteUserGroup(
    _ request: Proto_DeleteUserGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_DeleteUserGroupRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserGroupInterceptors() ?? []
    )
  }

  /// DeleteAllUserGroups removes all user groups.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllUserGroups.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAllUserGroups(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllUserGroups.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllUserGroupsInterceptors() ?? []
    )
  }

  /// GetHeadlessAuthentication is a request to retrieve a headless authentication from the backend.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetHeadlessAuthentication.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getHeadlessAuthentication(
    _ request: Proto_GetHeadlessAuthenticationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_GetHeadlessAuthenticationRequest, Types_HeadlessAuthentication> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getHeadlessAuthentication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetHeadlessAuthenticationInterceptors() ?? []
    )
  }

  /// WatchPendingHeadlessAuthentications watches the backend for pending headless authentication requests for the user.
  ///
  /// - Parameters:
  ///   - request: Request to send to WatchPendingHeadlessAuthentications.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func watchPendingHeadlessAuthentications(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil,
    handler: @escaping (Proto_Event) -> Void
  ) -> ServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_Event> {
    return self.makeServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.watchPendingHeadlessAuthentications.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWatchPendingHeadlessAuthenticationsInterceptors() ?? [],
      handler: handler
    )
  }

  /// UpdateHeadlessAuthenticationState is a request to update a headless authentication's state.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateHeadlessAuthenticationState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateHeadlessAuthenticationState(
    _ request: Proto_UpdateHeadlessAuthenticationStateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_UpdateHeadlessAuthenticationStateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateHeadlessAuthenticationState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateHeadlessAuthenticationStateInterceptors() ?? []
    )
  }

  /// ExportUpgradeWindows is used to load derived maintenance window values for agents that
  /// need to export schedules to external upgraders.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportUpgradeWindows.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func exportUpgradeWindows(
    _ request: Proto_ExportUpgradeWindowsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_ExportUpgradeWindowsRequest, Proto_ExportUpgradeWindowsResponse> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.exportUpgradeWindows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportUpgradeWindowsInterceptors() ?? []
    )
  }

  /// GetClusterMaintenanceConfig gets the current maintenance window config singleton.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetClusterMaintenanceConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getClusterMaintenanceConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterMaintenanceConfigV1> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterMaintenanceConfigInterceptors() ?? []
    )
  }

  /// UpdateClusterMaintenanceConfig updates the current maintenance window config singleton.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateClusterMaintenanceConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateClusterMaintenanceConfig(
    _ request: Types_ClusterMaintenanceConfigV1,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Types_ClusterMaintenanceConfigV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClusterMaintenanceConfigInterceptors() ?? []
    )
  }

  /// DeleteClusterMaintenanceConfig deletes the current maintenance window config singleton.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteClusterMaintenanceConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteClusterMaintenanceConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteClusterMaintenanceConfigInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Proto_AuthServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Proto_AuthServiceNIOClient")
internal final class Proto_AuthServiceClient: Proto_AuthServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the proto.AuthService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Proto_AuthServiceNIOClient: Proto_AuthServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the proto.AuthService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// AuthService is authentication/authorization service implementation
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Proto_AuthServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? { get }

  func makeInventoryControlStreamCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_UpstreamInventoryOneOf, Proto_DownstreamInventoryOneOf>

  func makeGetInventoryStatusCall(
    _ request: Proto_InventoryStatusRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_InventoryStatusRequest, Proto_InventoryStatusSummary>

  func makeGetInventoryConnectedServiceCountsCall(
    _ request: Proto_InventoryConnectedServiceCountsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_InventoryConnectedServiceCountsRequest, Proto_InventoryConnectedServiceCounts>

  func makePingInventoryCall(
    _ request: Proto_InventoryPingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_InventoryPingRequest, Proto_InventoryPingResponse>

  func makeGetInstancesCall(
    _ request: Types_InstanceFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Types_InstanceFilter, Types_InstanceV1>

  func makeGetClusterAlertsCall(
    _ request: Types_GetClusterAlertsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_GetClusterAlertsRequest, Proto_GetClusterAlertsResponse>

  func makeUpsertClusterAlertCall(
    _ request: Proto_UpsertClusterAlertRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertClusterAlertRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateAlertAckCall(
    _ request: Types_AlertAcknowledgement,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AlertAcknowledgement, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetAlertAcksCall(
    _ request: Proto_GetAlertAcksRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetAlertAcksRequest, Proto_GetAlertAcksResponse>

  func makeClearAlertAcksCall(
    _ request: Proto_ClearAlertAcksRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ClearAlertAcksRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeMaintainSessionPresenceCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_PresenceMFAChallengeSend, Proto_MFAAuthenticateChallenge>

  func makeCreateSessionTrackerCall(
    _ request: Proto_CreateSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateSessionTrackerRequest, Types_SessionTrackerV1>

  func makeGetSessionTrackerCall(
    _ request: Proto_GetSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSessionTrackerRequest, Types_SessionTrackerV1>

  func makeGetActiveSessionTrackersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionTrackerV1>

  func makeGetActiveSessionTrackersWithFilterCall(
    _ request: Types_SessionTrackerFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Types_SessionTrackerFilter, Types_SessionTrackerV1>

  func makeRemoveSessionTrackerCall(
    _ request: Proto_RemoveSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_RemoveSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateSessionTrackerCall(
    _ request: Proto_UpdateSessionTrackerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpdateSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeSendKeepAlivesCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncClientStreamingCall<Types_KeepAlive, SwiftProtobuf.Google_Protobuf_Empty>

  func makeWatchEventsCall(
    _ request: Proto_Watch,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Proto_Watch, Proto_Event>

  func makeGetNodeCall(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceInNamespaceRequest, Types_ServerV2>

  func makeUpsertNodeCall(
    _ request: Types_ServerV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ServerV2, Types_KeepAlive>

  func makeDeleteNodeCall(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllNodesCall(
    _ request: Types_ResourcesInNamespaceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourcesInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGenerateUserCertsCall(
    _ request: Proto_UserCertsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UserCertsRequest, Proto_Certs>

  func makeGenerateHostCertsCall(
    _ request: Proto_HostCertsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_HostCertsRequest, Proto_Certs>

  func makeGenerateUserSingleUseCertsCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_UserSingleUseCertsRequest, Proto_UserSingleUseCertsResponse>

  func makeGenerateOpenSshcertCall(
    _ request: Proto_OpenSSHCertRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_OpenSSHCertRequest, Proto_OpenSSHCert>

  func makeIsMfarequiredCall(
    _ request: Proto_IsMFARequiredRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_IsMFARequiredRequest, Proto_IsMFARequiredResponse>

  func makeGetAccessRequestsV2Call(
    _ request: Types_AccessRequestFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Types_AccessRequestFilter, Types_AccessRequestV3>

  func makeCreateAccessRequestCall(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AccessRequestV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateAccessRequestV2Call(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AccessRequestV3, Types_AccessRequestV3>

  func makeDeleteAccessRequestCall(
    _ request: Proto_RequestID,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_RequestID, SwiftProtobuf.Google_Protobuf_Empty>

  func makeSetAccessRequestStateCall(
    _ request: Proto_RequestStateSetter,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_RequestStateSetter, SwiftProtobuf.Google_Protobuf_Empty>

  func makeSubmitAccessReviewCall(
    _ request: Types_AccessReviewSubmission,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AccessReviewSubmission, Types_AccessRequestV3>

  func makeGetAccessCapabilitiesCall(
    _ request: Types_AccessCapabilitiesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AccessCapabilitiesRequest, Types_AccessCapabilities>

  func makeGetAccessRequestAllowedPromotionsCall(
    _ request: Proto_AccessRequestAllowedPromotionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_AccessRequestAllowedPromotionRequest, Proto_AccessRequestAllowedPromotionResponse>

  func makeGetPluginDataCall(
    _ request: Types_PluginDataFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_PluginDataFilter, Proto_PluginDataSeq>

  func makeUpdatePluginDataCall(
    _ request: Types_PluginDataUpdateParams,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_PluginDataUpdateParams, SwiftProtobuf.Google_Protobuf_Empty>

  func makePingCall(
    _ request: Proto_PingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_PingRequest, Proto_PingResponse>

  func makeGetResetPasswordTokenCall(
    _ request: Proto_GetResetPasswordTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetResetPasswordTokenRequest, Types_UserTokenV3>

  func makeCreateResetPasswordTokenCall(
    _ request: Proto_CreateResetPasswordTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateResetPasswordTokenRequest, Types_UserTokenV3>

  func makeCreateBotCall(
    _ request: Proto_CreateBotRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateBotRequest, Proto_CreateBotResponse>

  func makeDeleteBotCall(
    _ request: Proto_DeleteBotRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteBotRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetBotUsersCall(
    _ request: Proto_GetBotUsersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Proto_GetBotUsersRequest, Types_UserV2>

  func makeGetUserCall(
    _ request: Proto_GetUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetUserRequest, Types_UserV2>

  func makeGetCurrentUserCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UserV2>

  func makeGetCurrentUserRolesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_RoleV6>

  func makeGetUsersCall(
    _ request: Proto_GetUsersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Proto_GetUsersRequest, Types_UserV2>

  func makeCreateUserCall(
    _ request: Types_UserV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateUserCall(
    _ request: Types_UserV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteUserCall(
    _ request: Proto_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeChangePasswordCall(
    _ request: Proto_ChangePasswordRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ChangePasswordRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeAcquireSemaphoreCall(
    _ request: Types_AcquireSemaphoreRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AcquireSemaphoreRequest, Types_SemaphoreLease>

  func makeKeepAliveSemaphoreLeaseCall(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCancelSemaphoreLeaseCall(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetSemaphoresCall(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreFilter, Proto_Semaphores>

  func makeDeleteSemaphoreCall(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreFilter, SwiftProtobuf.Google_Protobuf_Empty>

  func makeEmitAuditEventCall(
    _ request: Events_OneOf,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Events_OneOf, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateAuditStreamCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_AuditStreamRequest, Events_StreamStatus>

  func makeUpsertApplicationServerCall(
    _ request: Proto_UpsertApplicationServerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertApplicationServerRequest, Types_KeepAlive>

  func makeDeleteApplicationServerCall(
    _ request: Proto_DeleteApplicationServerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteApplicationServerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllApplicationServersCall(
    _ request: Proto_DeleteAllApplicationServersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllApplicationServersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGenerateAppTokenCall(
    _ request: Proto_GenerateAppTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GenerateAppTokenRequest, Proto_GenerateAppTokenResponse>

  func makeGetAppSessionCall(
    _ request: Proto_GetAppSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetAppSessionRequest, Proto_GetAppSessionResponse>

  func makeListAppSessionsCall(
    _ request: Proto_ListAppSessionsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListAppSessionsRequest, Proto_ListAppSessionsResponse>

  func makeCreateAppSessionCall(
    _ request: Proto_CreateAppSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateAppSessionRequest, Proto_CreateAppSessionResponse>

  func makeDeleteAppSessionCall(
    _ request: Proto_DeleteAppSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAppSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllAppSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteUserAppSessionsCall(
    _ request: Proto_DeleteUserAppSessionsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserAppSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateSnowflakeSessionCall(
    _ request: Proto_CreateSnowflakeSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateSnowflakeSessionRequest, Proto_CreateSnowflakeSessionResponse>

  func makeGetSnowflakeSessionCall(
    _ request: Proto_GetSnowflakeSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSnowflakeSessionRequest, Proto_GetSnowflakeSessionResponse>

  func makeGetSnowflakeSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetSnowflakeSessionsResponse>

  func makeDeleteSnowflakeSessionCall(
    _ request: Proto_DeleteSnowflakeSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteSnowflakeSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllSnowflakeSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateSamlidPsessionCall(
    _ request: Proto_CreateSAMLIdPSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateSAMLIdPSessionRequest, Proto_CreateSAMLIdPSessionResponse>

  func makeGetSamlidPsessionCall(
    _ request: Proto_GetSAMLIdPSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSAMLIdPSessionRequest, Proto_GetSAMLIdPSessionResponse>

  func makeListSamlidPsessionsCall(
    _ request: Proto_ListSAMLIdPSessionsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListSAMLIdPSessionsRequest, Proto_ListSAMLIdPSessionsResponse>

  func makeDeleteSamlidPsessionCall(
    _ request: Proto_DeleteSAMLIdPSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteSAMLIdPSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllSamlidPsessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteUserSamlidPsessionsCall(
    _ request: Proto_DeleteUserSAMLIdPSessionsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserSAMLIdPSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetWebSessionCall(
    _ request: Types_GetWebSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_GetWebSessionRequest, Proto_GetWebSessionResponse>

  func makeGetWebSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebSessionsResponse>

  func makeDeleteWebSessionCall(
    _ request: Types_DeleteWebSessionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_DeleteWebSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllWebSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetWebTokenCall(
    _ request: Types_GetWebTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_GetWebTokenRequest, Proto_GetWebTokenResponse>

  func makeGetWebTokensCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebTokensResponse>

  func makeDeleteWebTokenCall(
    _ request: Types_DeleteWebTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_DeleteWebTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllWebTokensCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateRemoteClusterCall(
    _ request: Types_RemoteClusterV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_RemoteClusterV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertKubernetesServerCall(
    _ request: Proto_UpsertKubernetesServerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertKubernetesServerRequest, Types_KeepAlive>

  func makeDeleteKubernetesServerCall(
    _ request: Proto_DeleteKubernetesServerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteKubernetesServerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllKubernetesServersCall(
    _ request: Proto_DeleteAllKubernetesServersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllKubernetesServersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertDatabaseServerCall(
    _ request: Proto_UpsertDatabaseServerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertDatabaseServerRequest, Types_KeepAlive>

  func makeDeleteDatabaseServerCall(
    _ request: Proto_DeleteDatabaseServerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteDatabaseServerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllDatabaseServersCall(
    _ request: Proto_DeleteAllDatabaseServersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllDatabaseServersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertDatabaseServiceCall(
    _ request: Proto_UpsertDatabaseServiceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertDatabaseServiceRequest, Types_KeepAlive>

  func makeDeleteDatabaseServiceCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllDatabaseServicesCall(
    _ request: Proto_DeleteAllDatabaseServicesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllDatabaseServicesRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeSignDatabaseCsrCall(
    _ request: Proto_DatabaseCSRRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DatabaseCSRRequest, Proto_DatabaseCSRResponse>

  func makeGenerateDatabaseCertCall(
    _ request: Proto_DatabaseCertRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DatabaseCertRequest, Proto_DatabaseCertResponse>

  func makeGenerateSnowflakeJwtCall(
    _ request: Proto_SnowflakeJWTRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_SnowflakeJWTRequest, Proto_SnowflakeJWTResponse>

  func makeGetRoleCall(
    _ request: Proto_GetRoleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetRoleRequest, Types_RoleV6>

  func makeGetRolesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetRolesResponse>

  func makeCreateRoleCall(
    _ request: Proto_CreateRoleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateRoleRequest, Types_RoleV6>

  func makeUpdateRoleCall(
    _ request: Proto_UpdateRoleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpdateRoleRequest, Types_RoleV6>

  func makeUpsertRoleV2Call(
    _ request: Proto_UpsertRoleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertRoleRequest, Types_RoleV6>

  func makeUpsertRoleCall(
    _ request: Types_RoleV6,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_RoleV6, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteRoleCall(
    _ request: Proto_DeleteRoleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteRoleRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeAddMfadeviceCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_AddMFADeviceRequest, Proto_AddMFADeviceResponse>

  func makeDeleteMfadeviceCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_DeleteMFADeviceRequest, Proto_DeleteMFADeviceResponse>

  func makeAddMfadeviceSyncCall(
    _ request: Proto_AddMFADeviceSyncRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_AddMFADeviceSyncRequest, Proto_AddMFADeviceSyncResponse>

  func makeDeleteMfadeviceSyncCall(
    _ request: Proto_DeleteMFADeviceSyncRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteMFADeviceSyncRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetMfadevicesCall(
    _ request: Proto_GetMFADevicesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetMFADevicesRequest, Proto_GetMFADevicesResponse>

  func makeCreateAuthenticateChallengeCall(
    _ request: Proto_CreateAuthenticateChallengeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateAuthenticateChallengeRequest, Proto_MFAAuthenticateChallenge>

  func makeCreateRegisterChallengeCall(
    _ request: Proto_CreateRegisterChallengeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateRegisterChallengeRequest, Proto_MFARegisterChallenge>

  func makeGetOidcconnectorCall(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceWithSecretsRequest, Types_OIDCConnectorV3>

  func makeGetOidcconnectorsCall(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourcesWithSecretsRequest, Types_OIDCConnectorV3List>

  func makeCreateOidcconnectorCall(
    _ request: Proto_CreateOIDCConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateOIDCConnectorRequest, Types_OIDCConnectorV3>

  func makeUpdateOidcconnectorCall(
    _ request: Proto_UpdateOIDCConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpdateOIDCConnectorRequest, Types_OIDCConnectorV3>

  func makeUpsertOidcconnectorCall(
    _ request: Types_OIDCConnectorV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_OIDCConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertOidcconnectorV2Call(
    _ request: Proto_UpsertOIDCConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertOIDCConnectorRequest, Types_OIDCConnectorV3>

  func makeDeleteOidcconnectorCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateOidcauthRequestCall(
    _ request: Types_OIDCAuthRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_OIDCAuthRequest, Types_OIDCAuthRequest>

  func makeGetOidcauthRequestCall(
    _ request: Proto_GetOIDCAuthRequestRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetOIDCAuthRequestRequest, Types_OIDCAuthRequest>

  func makeGetSamlconnectorCall(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceWithSecretsRequest, Types_SAMLConnectorV2>

  func makeGetSamlconnectorsCall(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourcesWithSecretsRequest, Types_SAMLConnectorV2List>

  func makeCreateSamlconnectorCall(
    _ request: Proto_CreateSAMLConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateSAMLConnectorRequest, Types_SAMLConnectorV2>

  func makeUpdateSamlconnectorCall(
    _ request: Proto_UpdateSAMLConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpdateSAMLConnectorRequest, Types_SAMLConnectorV2>

  func makeUpsertSamlconnectorCall(
    _ request: Types_SAMLConnectorV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SAMLConnectorV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertSamlconnectorV2Call(
    _ request: Proto_UpsertSAMLConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertSAMLConnectorRequest, Types_SAMLConnectorV2>

  func makeDeleteSamlconnectorCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateSamlauthRequestCall(
    _ request: Types_SAMLAuthRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SAMLAuthRequest, Types_SAMLAuthRequest>

  func makeGetSamlauthRequestCall(
    _ request: Proto_GetSAMLAuthRequestRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSAMLAuthRequestRequest, Types_SAMLAuthRequest>

  func makeGetGithubConnectorCall(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceWithSecretsRequest, Types_GithubConnectorV3>

  func makeGetGithubConnectorsCall(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourcesWithSecretsRequest, Types_GithubConnectorV3List>

  func makeCreateGithubConnectorCall(
    _ request: Proto_CreateGithubConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateGithubConnectorRequest, Types_GithubConnectorV3>

  func makeUpdateGithubConnectorCall(
    _ request: Proto_UpdateGithubConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpdateGithubConnectorRequest, Types_GithubConnectorV3>

  func makeUpsertGithubConnectorCall(
    _ request: Types_GithubConnectorV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_GithubConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertGithubConnectorV2Call(
    _ request: Proto_UpsertGithubConnectorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertGithubConnectorRequest, Types_GithubConnectorV3>

  func makeDeleteGithubConnectorCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateGithubAuthRequestCall(
    _ request: Types_GithubAuthRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_GithubAuthRequest, Types_GithubAuthRequest>

  func makeGetGithubAuthRequestCall(
    _ request: Proto_GetGithubAuthRequestRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetGithubAuthRequestRequest, Types_GithubAuthRequest>

  func makeGetSsodiagnosticInfoCall(
    _ request: Proto_GetSSODiagnosticInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSSODiagnosticInfoRequest, Types_SSODiagnosticInfo>

  func makeGetServerInfosCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ServerInfoV1>

  func makeGetServerInfoCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_ServerInfoV1>

  func makeUpsertServerInfoCall(
    _ request: Types_ServerInfoV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ServerInfoV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteServerInfoCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllServerInfosCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetTrustedClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_TrustedClusterV2>

  func makeGetTrustedClustersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_TrustedClusterV2List>

  func makeUpsertTrustedClusterCall(
    _ request: Types_TrustedClusterV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_TrustedClusterV2, Types_TrustedClusterV2>

  func makeDeleteTrustedClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetTokenCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_ProvisionTokenV2>

  func makeGetTokensCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ProvisionTokenV2List>

  func makeCreateTokenV2Call(
    _ request: Proto_CreateTokenV2Request,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertTokenV2Call(
    _ request: Proto_UpsertTokenV2Request,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpsertTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteTokenCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetClusterAuditConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterAuditConfigV2>

  func makeGetClusterNetworkingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterNetworkingConfigV2>

  func makeSetClusterNetworkingConfigCall(
    _ request: Types_ClusterNetworkingConfigV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ClusterNetworkingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeResetClusterNetworkingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetSessionRecordingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionRecordingConfigV2>

  func makeSetSessionRecordingConfigCall(
    _ request: Types_SessionRecordingConfigV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SessionRecordingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeResetSessionRecordingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetAuthPreferenceCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AuthPreferenceV2>

  func makeSetAuthPreferenceCall(
    _ request: Types_AuthPreferenceV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AuthPreferenceV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeResetAuthPreferenceCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetUiconfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UIConfigV1>

  func makeSetUiconfigCall(
    _ request: Types_UIConfigV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_UIConfigV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteUiconfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetEventsCall(
    _ request: Proto_GetEventsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetEventsRequest, Proto_Events>

  func makeGetSessionEventsCall(
    _ request: Proto_GetSessionEventsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSessionEventsRequest, Proto_Events>

  func makeGetLockCall(
    _ request: Proto_GetLockRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetLockRequest, Types_LockV2>

  func makeGetLocksCall(
    _ request: Proto_GetLocksRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetLocksRequest, Proto_GetLocksResponse>

  func makeUpsertLockCall(
    _ request: Types_LockV2,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_LockV2, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteLockCall(
    _ request: Proto_DeleteLockRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteLockRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeReplaceRemoteLocksCall(
    _ request: Proto_ReplaceRemoteLocksRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ReplaceRemoteLocksRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeStreamSessionEventsCall(
    _ request: Proto_StreamSessionEventsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Proto_StreamSessionEventsRequest, Events_OneOf>

  func makeGetNetworkRestrictionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_NetworkRestrictionsV4>

  func makeSetNetworkRestrictionsCall(
    _ request: Types_NetworkRestrictionsV4,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_NetworkRestrictionsV4, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteNetworkRestrictionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetAppsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AppV3List>

  func makeGetAppCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_AppV3>

  func makeCreateAppCall(
    _ request: Types_AppV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateAppCall(
    _ request: Types_AppV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAppCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllAppsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetDatabasesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_DatabaseV3List>

  func makeGetDatabaseCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_DatabaseV3>

  func makeCreateDatabaseCall(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateDatabaseCall(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteDatabaseCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllDatabasesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetKubernetesClustersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_KubernetesClusterV3List>

  func makeGetKubernetesClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_KubernetesClusterV3>

  func makeCreateKubernetesClusterCall(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateKubernetesClusterCall(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteKubernetesClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllKubernetesClustersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetWindowsDesktopServicesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWindowsDesktopServicesResponse>

  func makeGetWindowsDesktopServiceCall(
    _ request: Proto_GetWindowsDesktopServiceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetWindowsDesktopServiceRequest, Proto_GetWindowsDesktopServiceResponse>

  func makeUpsertWindowsDesktopServiceCall(
    _ request: Types_WindowsDesktopServiceV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopServiceV3, Types_KeepAlive>

  func makeDeleteWindowsDesktopServiceCall(
    _ request: Proto_DeleteWindowsDesktopServiceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteWindowsDesktopServiceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllWindowsDesktopServicesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetWindowsDesktopsCall(
    _ request: Types_WindowsDesktopFilter,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopFilter, Proto_GetWindowsDesktopsResponse>

  func makeCreateWindowsDesktopCall(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateWindowsDesktopCall(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertWindowsDesktopCall(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteWindowsDesktopCall(
    _ request: Proto_DeleteWindowsDesktopRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteWindowsDesktopRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllWindowsDesktopsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGenerateWindowsDesktopCertCall(
    _ request: Proto_WindowsDesktopCertRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_WindowsDesktopCertRequest, Proto_WindowsDesktopCertResponse>

  func makeGenerateCertAuthorityCrlCall(
    _ request: Proto_CertAuthorityRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CertAuthorityRequest, Proto_CRL>

  func makeCreateConnectionDiagnosticCall(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateConnectionDiagnosticCall(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetConnectionDiagnosticCall(
    _ request: Proto_GetConnectionDiagnosticRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetConnectionDiagnosticRequest, Types_ConnectionDiagnosticV1>

  func makeAppendDiagnosticTraceCall(
    _ request: Proto_AppendDiagnosticTraceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_AppendDiagnosticTraceRequest, Types_ConnectionDiagnosticV1>

  func makeChangeUserAuthenticationCall(
    _ request: Proto_ChangeUserAuthenticationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ChangeUserAuthenticationRequest, Proto_ChangeUserAuthenticationResponse>

  func makeStartAccountRecoveryCall(
    _ request: Proto_StartAccountRecoveryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_StartAccountRecoveryRequest, Types_UserTokenV3>

  func makeVerifyAccountRecoveryCall(
    _ request: Proto_VerifyAccountRecoveryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_VerifyAccountRecoveryRequest, Types_UserTokenV3>

  func makeCompleteAccountRecoveryCall(
    _ request: Proto_CompleteAccountRecoveryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CompleteAccountRecoveryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateAccountRecoveryCodesCall(
    _ request: Proto_CreateAccountRecoveryCodesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreateAccountRecoveryCodesRequest, Proto_RecoveryCodes>

  func makeGetAccountRecoveryTokenCall(
    _ request: Proto_GetAccountRecoveryTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetAccountRecoveryTokenRequest, Types_UserTokenV3>

  func makeGetAccountRecoveryCodesCall(
    _ request: Proto_GetAccountRecoveryCodesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetAccountRecoveryCodesRequest, Proto_RecoveryCodes>

  func makeCreatePrivilegeTokenCall(
    _ request: Proto_CreatePrivilegeTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_CreatePrivilegeTokenRequest, Types_UserTokenV3>

  func makeGetInstallerCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_InstallerV1>

  func makeGetInstallersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_InstallerV1List>

  func makeSetInstallerCall(
    _ request: Types_InstallerV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_InstallerV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteInstallerCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllInstallersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeListResourcesCall(
    _ request: Proto_ListResourcesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListResourcesRequest, Proto_ListResourcesResponse>

  func makeListUnifiedResourcesCall(
    _ request: Proto_ListUnifiedResourcesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListUnifiedResourcesRequest, Proto_ListUnifiedResourcesResponse>

  func makeGetSshtargetsCall(
    _ request: Proto_GetSSHTargetsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSSHTargetsRequest, Proto_GetSSHTargetsResponse>

  func makeGetDomainNameCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetDomainNameResponse>

  func makeGetClusterCacertCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetClusterCACertResponse>

  func makeSubmitUsageEventCall(
    _ request: Proto_SubmitUsageEventRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_SubmitUsageEventRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetLicenseCall(
    _ request: Proto_GetLicenseRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetLicenseRequest, Proto_GetLicenseResponse>

  func makeListReleasesCall(
    _ request: Proto_ListReleasesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListReleasesRequest, Proto_ListReleasesResponse>

  func makeListSamlidPserviceProvidersCall(
    _ request: Proto_ListSAMLIdPServiceProvidersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListSAMLIdPServiceProvidersRequest, Proto_ListSAMLIdPServiceProvidersResponse>

  func makeGetSamlidPserviceProviderCall(
    _ request: Proto_GetSAMLIdPServiceProviderRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetSAMLIdPServiceProviderRequest, Types_SAMLIdPServiceProviderV1>

  func makeCreateSamlidPserviceProviderCall(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateSamlidPserviceProviderCall(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteSamlidPserviceProviderCall(
    _ request: Proto_DeleteSAMLIdPServiceProviderRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteSAMLIdPServiceProviderRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllSamlidPserviceProvidersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeListUserGroupsCall(
    _ request: Proto_ListUserGroupsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ListUserGroupsRequest, Proto_ListUserGroupsResponse>

  func makeGetUserGroupCall(
    _ request: Proto_GetUserGroupRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetUserGroupRequest, Types_UserGroupV1>

  func makeCreateUserGroupCall(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateUserGroupCall(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteUserGroupCall(
    _ request: Proto_DeleteUserGroupRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserGroupRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteAllUserGroupsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetHeadlessAuthenticationCall(
    _ request: Proto_GetHeadlessAuthenticationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_GetHeadlessAuthenticationRequest, Types_HeadlessAuthentication>

  func makeWatchPendingHeadlessAuthenticationsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_Event>

  func makeUpdateHeadlessAuthenticationStateCall(
    _ request: Proto_UpdateHeadlessAuthenticationStateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_UpdateHeadlessAuthenticationStateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeExportUpgradeWindowsCall(
    _ request: Proto_ExportUpgradeWindowsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_ExportUpgradeWindowsRequest, Proto_ExportUpgradeWindowsResponse>

  func makeGetClusterMaintenanceConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterMaintenanceConfigV1>

  func makeUpdateClusterMaintenanceConfigCall(
    _ request: Types_ClusterMaintenanceConfigV1,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Types_ClusterMaintenanceConfigV1, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteClusterMaintenanceConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Proto_AuthServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Proto_AuthServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeInventoryControlStreamCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_UpstreamInventoryOneOf, Proto_DownstreamInventoryOneOf> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.inventoryControlStream.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInventoryControlStreamInterceptors() ?? []
    )
  }

  internal func makeGetInventoryStatusCall(
    _ request: Proto_InventoryStatusRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_InventoryStatusRequest, Proto_InventoryStatusSummary> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInventoryStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInventoryStatusInterceptors() ?? []
    )
  }

  internal func makeGetInventoryConnectedServiceCountsCall(
    _ request: Proto_InventoryConnectedServiceCountsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_InventoryConnectedServiceCountsRequest, Proto_InventoryConnectedServiceCounts> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInventoryConnectedServiceCounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInventoryConnectedServiceCountsInterceptors() ?? []
    )
  }

  internal func makePingInventoryCall(
    _ request: Proto_InventoryPingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_InventoryPingRequest, Proto_InventoryPingResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.pingInventory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInventoryInterceptors() ?? []
    )
  }

  internal func makeGetInstancesCall(
    _ request: Types_InstanceFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Types_InstanceFilter, Types_InstanceV1> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstances.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstancesInterceptors() ?? []
    )
  }

  internal func makeGetClusterAlertsCall(
    _ request: Types_GetClusterAlertsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_GetClusterAlertsRequest, Proto_GetClusterAlertsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterAlerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterAlertsInterceptors() ?? []
    )
  }

  internal func makeUpsertClusterAlertCall(
    _ request: Proto_UpsertClusterAlertRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertClusterAlertRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertClusterAlert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertClusterAlertInterceptors() ?? []
    )
  }

  internal func makeCreateAlertAckCall(
    _ request: Types_AlertAcknowledgement,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AlertAcknowledgement, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAlertAck.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAlertAckInterceptors() ?? []
    )
  }

  internal func makeGetAlertAcksCall(
    _ request: Proto_GetAlertAcksRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetAlertAcksRequest, Proto_GetAlertAcksResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAlertAcks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAlertAcksInterceptors() ?? []
    )
  }

  internal func makeClearAlertAcksCall(
    _ request: Proto_ClearAlertAcksRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ClearAlertAcksRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.clearAlertAcks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearAlertAcksInterceptors() ?? []
    )
  }

  internal func makeMaintainSessionPresenceCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_PresenceMFAChallengeSend, Proto_MFAAuthenticateChallenge> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.maintainSessionPresence.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMaintainSessionPresenceInterceptors() ?? []
    )
  }

  internal func makeCreateSessionTrackerCall(
    _ request: Proto_CreateSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateSessionTrackerRequest, Types_SessionTrackerV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSessionTrackerInterceptors() ?? []
    )
  }

  internal func makeGetSessionTrackerCall(
    _ request: Proto_GetSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSessionTrackerRequest, Types_SessionTrackerV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionTrackerInterceptors() ?? []
    )
  }

  internal func makeGetActiveSessionTrackersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionTrackerV1> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveSessionTrackersInterceptors() ?? []
    )
  }

  internal func makeGetActiveSessionTrackersWithFilterCall(
    _ request: Types_SessionTrackerFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Types_SessionTrackerFilter, Types_SessionTrackerV1> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackersWithFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveSessionTrackersWithFilterInterceptors() ?? []
    )
  }

  internal func makeRemoveSessionTrackerCall(
    _ request: Proto_RemoveSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_RemoveSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.removeSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSessionTrackerInterceptors() ?? []
    )
  }

  internal func makeUpdateSessionTrackerCall(
    _ request: Proto_UpdateSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpdateSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSessionTrackerInterceptors() ?? []
    )
  }

  internal func makeSendKeepAlivesCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncClientStreamingCall<Types_KeepAlive, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncClientStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.sendKeepAlives.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendKeepAlivesInterceptors() ?? []
    )
  }

  internal func makeWatchEventsCall(
    _ request: Proto_Watch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Proto_Watch, Proto_Event> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.watchEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWatchEventsInterceptors() ?? []
    )
  }

  internal func makeGetNodeCall(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceInNamespaceRequest, Types_ServerV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNodeInterceptors() ?? []
    )
  }

  internal func makeUpsertNodeCall(
    _ request: Types_ServerV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ServerV2, Types_KeepAlive> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertNodeInterceptors() ?? []
    )
  }

  internal func makeDeleteNodeCall(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNodeInterceptors() ?? []
    )
  }

  internal func makeDeleteAllNodesCall(
    _ request: Types_ResourcesInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourcesInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllNodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllNodesInterceptors() ?? []
    )
  }

  internal func makeGenerateUserCertsCall(
    _ request: Proto_UserCertsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UserCertsRequest, Proto_Certs> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserCerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserCertsInterceptors() ?? []
    )
  }

  internal func makeGenerateHostCertsCall(
    _ request: Proto_HostCertsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_HostCertsRequest, Proto_Certs> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateHostCerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateHostCertsInterceptors() ?? []
    )
  }

  internal func makeGenerateUserSingleUseCertsCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_UserSingleUseCertsRequest, Proto_UserSingleUseCertsResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserSingleUseCerts.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserSingleUseCertsInterceptors() ?? []
    )
  }

  internal func makeGenerateOpenSshcertCall(
    _ request: Proto_OpenSSHCertRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_OpenSSHCertRequest, Proto_OpenSSHCert> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateOpenSSHCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateOpenSSHCertInterceptors() ?? []
    )
  }

  internal func makeIsMfarequiredCall(
    _ request: Proto_IsMFARequiredRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_IsMFARequiredRequest, Proto_IsMFARequiredResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.isMFARequired.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIsMFARequiredInterceptors() ?? []
    )
  }

  internal func makeGetAccessRequestsV2Call(
    _ request: Types_AccessRequestFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Types_AccessRequestFilter, Types_AccessRequestV3> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessRequestsV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessRequestsV2Interceptors() ?? []
    )
  }

  internal func makeCreateAccessRequestCall(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AccessRequestV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccessRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccessRequestInterceptors() ?? []
    )
  }

  internal func makeCreateAccessRequestV2Call(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AccessRequestV3, Types_AccessRequestV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccessRequestV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccessRequestV2Interceptors() ?? []
    )
  }

  internal func makeDeleteAccessRequestCall(
    _ request: Proto_RequestID,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_RequestID, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAccessRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccessRequestInterceptors() ?? []
    )
  }

  internal func makeSetAccessRequestStateCall(
    _ request: Proto_RequestStateSetter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_RequestStateSetter, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setAccessRequestState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAccessRequestStateInterceptors() ?? []
    )
  }

  internal func makeSubmitAccessReviewCall(
    _ request: Types_AccessReviewSubmission,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AccessReviewSubmission, Types_AccessRequestV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.submitAccessReview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitAccessReviewInterceptors() ?? []
    )
  }

  internal func makeGetAccessCapabilitiesCall(
    _ request: Types_AccessCapabilitiesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AccessCapabilitiesRequest, Types_AccessCapabilities> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessCapabilities.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessCapabilitiesInterceptors() ?? []
    )
  }

  internal func makeGetAccessRequestAllowedPromotionsCall(
    _ request: Proto_AccessRequestAllowedPromotionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_AccessRequestAllowedPromotionRequest, Proto_AccessRequestAllowedPromotionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessRequestAllowedPromotions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessRequestAllowedPromotionsInterceptors() ?? []
    )
  }

  internal func makeGetPluginDataCall(
    _ request: Types_PluginDataFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_PluginDataFilter, Proto_PluginDataSeq> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getPluginData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPluginDataInterceptors() ?? []
    )
  }

  internal func makeUpdatePluginDataCall(
    _ request: Types_PluginDataUpdateParams,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_PluginDataUpdateParams, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updatePluginData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePluginDataInterceptors() ?? []
    )
  }

  internal func makePingCall(
    _ request: Proto_PingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_PingRequest, Proto_PingResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  internal func makeGetResetPasswordTokenCall(
    _ request: Proto_GetResetPasswordTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetResetPasswordTokenRequest, Types_UserTokenV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getResetPasswordToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetResetPasswordTokenInterceptors() ?? []
    )
  }

  internal func makeCreateResetPasswordTokenCall(
    _ request: Proto_CreateResetPasswordTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateResetPasswordTokenRequest, Types_UserTokenV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createResetPasswordToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateResetPasswordTokenInterceptors() ?? []
    )
  }

  internal func makeCreateBotCall(
    _ request: Proto_CreateBotRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateBotRequest, Proto_CreateBotResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createBot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBotInterceptors() ?? []
    )
  }

  internal func makeDeleteBotCall(
    _ request: Proto_DeleteBotRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteBotRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteBot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteBotInterceptors() ?? []
    )
  }

  internal func makeGetBotUsersCall(
    _ request: Proto_GetBotUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Proto_GetBotUsersRequest, Types_UserV2> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getBotUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBotUsersInterceptors() ?? []
    )
  }

  internal func makeGetUserCall(
    _ request: Proto_GetUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetUserRequest, Types_UserV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserInterceptors() ?? []
    )
  }

  internal func makeGetCurrentUserCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UserV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getCurrentUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCurrentUserInterceptors() ?? []
    )
  }

  internal func makeGetCurrentUserRolesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_RoleV6> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getCurrentUserRoles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCurrentUserRolesInterceptors() ?? []
    )
  }

  internal func makeGetUsersCall(
    _ request: Proto_GetUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Proto_GetUsersRequest, Types_UserV2> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersInterceptors() ?? []
    )
  }

  internal func makeCreateUserCall(
    _ request: Types_UserV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserInterceptors() ?? []
    )
  }

  internal func makeUpdateUserCall(
    _ request: Types_UserV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUserInterceptors() ?? []
    )
  }

  internal func makeDeleteUserCall(
    _ request: Proto_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  internal func makeChangePasswordCall(
    _ request: Proto_ChangePasswordRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ChangePasswordRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.changePassword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangePasswordInterceptors() ?? []
    )
  }

  internal func makeAcquireSemaphoreCall(
    _ request: Types_AcquireSemaphoreRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AcquireSemaphoreRequest, Types_SemaphoreLease> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.acquireSemaphore.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAcquireSemaphoreInterceptors() ?? []
    )
  }

  internal func makeKeepAliveSemaphoreLeaseCall(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.keepAliveSemaphoreLease.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeKeepAliveSemaphoreLeaseInterceptors() ?? []
    )
  }

  internal func makeCancelSemaphoreLeaseCall(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.cancelSemaphoreLease.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSemaphoreLeaseInterceptors() ?? []
    )
  }

  internal func makeGetSemaphoresCall(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreFilter, Proto_Semaphores> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSemaphores.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSemaphoresInterceptors() ?? []
    )
  }

  internal func makeDeleteSemaphoreCall(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SemaphoreFilter, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSemaphore.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSemaphoreInterceptors() ?? []
    )
  }

  internal func makeEmitAuditEventCall(
    _ request: Events_OneOf,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Events_OneOf, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.emitAuditEvent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEmitAuditEventInterceptors() ?? []
    )
  }

  internal func makeCreateAuditStreamCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_AuditStreamRequest, Events_StreamStatus> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuditStream.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuditStreamInterceptors() ?? []
    )
  }

  internal func makeUpsertApplicationServerCall(
    _ request: Proto_UpsertApplicationServerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertApplicationServerRequest, Types_KeepAlive> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertApplicationServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertApplicationServerInterceptors() ?? []
    )
  }

  internal func makeDeleteApplicationServerCall(
    _ request: Proto_DeleteApplicationServerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteApplicationServerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteApplicationServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteApplicationServerInterceptors() ?? []
    )
  }

  internal func makeDeleteAllApplicationServersCall(
    _ request: Proto_DeleteAllApplicationServersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllApplicationServersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllApplicationServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllApplicationServersInterceptors() ?? []
    )
  }

  internal func makeGenerateAppTokenCall(
    _ request: Proto_GenerateAppTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GenerateAppTokenRequest, Proto_GenerateAppTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateAppToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateAppTokenInterceptors() ?? []
    )
  }

  internal func makeGetAppSessionCall(
    _ request: Proto_GetAppSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetAppSessionRequest, Proto_GetAppSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppSessionInterceptors() ?? []
    )
  }

  internal func makeListAppSessionsCall(
    _ request: Proto_ListAppSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListAppSessionsRequest, Proto_ListAppSessionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListAppSessionsInterceptors() ?? []
    )
  }

  internal func makeCreateAppSessionCall(
    _ request: Proto_CreateAppSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateAppSessionRequest, Proto_CreateAppSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAppSessionInterceptors() ?? []
    )
  }

  internal func makeDeleteAppSessionCall(
    _ request: Proto_DeleteAppSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAppSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAppSessionInterceptors() ?? []
    )
  }

  internal func makeDeleteAllAppSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllAppSessionsInterceptors() ?? []
    )
  }

  internal func makeDeleteUserAppSessionsCall(
    _ request: Proto_DeleteUserAppSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserAppSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserAppSessionsInterceptors() ?? []
    )
  }

  internal func makeCreateSnowflakeSessionCall(
    _ request: Proto_CreateSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateSnowflakeSessionRequest, Proto_CreateSnowflakeSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSnowflakeSessionInterceptors() ?? []
    )
  }

  internal func makeGetSnowflakeSessionCall(
    _ request: Proto_GetSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSnowflakeSessionRequest, Proto_GetSnowflakeSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSnowflakeSessionInterceptors() ?? []
    )
  }

  internal func makeGetSnowflakeSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetSnowflakeSessionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSnowflakeSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSnowflakeSessionsInterceptors() ?? []
    )
  }

  internal func makeDeleteSnowflakeSessionCall(
    _ request: Proto_DeleteSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteSnowflakeSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSnowflakeSessionInterceptors() ?? []
    )
  }

  internal func makeDeleteAllSnowflakeSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSnowflakeSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSnowflakeSessionsInterceptors() ?? []
    )
  }

  internal func makeCreateSamlidPsessionCall(
    _ request: Proto_CreateSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateSAMLIdPSessionRequest, Proto_CreateSAMLIdPSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLIdPSessionInterceptors() ?? []
    )
  }

  internal func makeGetSamlidPsessionCall(
    _ request: Proto_GetSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSAMLIdPSessionRequest, Proto_GetSAMLIdPSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLIdPSessionInterceptors() ?? []
    )
  }

  internal func makeListSamlidPsessionsCall(
    _ request: Proto_ListSAMLIdPSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListSAMLIdPSessionsRequest, Proto_ListSAMLIdPSessionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListSAMLIdPSessionsInterceptors() ?? []
    )
  }

  internal func makeDeleteSamlidPsessionCall(
    _ request: Proto_DeleteSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteSAMLIdPSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLIdPSessionInterceptors() ?? []
    )
  }

  internal func makeDeleteAllSamlidPsessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSAMLIdPSessionsInterceptors() ?? []
    )
  }

  internal func makeDeleteUserSamlidPsessionsCall(
    _ request: Proto_DeleteUserSAMLIdPSessionsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserSAMLIdPSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserSAMLIdPSessionsInterceptors() ?? []
    )
  }

  internal func makeGetWebSessionCall(
    _ request: Types_GetWebSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_GetWebSessionRequest, Proto_GetWebSessionResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebSessionInterceptors() ?? []
    )
  }

  internal func makeGetWebSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebSessionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebSessionsInterceptors() ?? []
    )
  }

  internal func makeDeleteWebSessionCall(
    _ request: Types_DeleteWebSessionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_DeleteWebSessionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWebSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWebSessionInterceptors() ?? []
    )
  }

  internal func makeDeleteAllWebSessionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWebSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWebSessionsInterceptors() ?? []
    )
  }

  internal func makeGetWebTokenCall(
    _ request: Types_GetWebTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_GetWebTokenRequest, Proto_GetWebTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebTokenInterceptors() ?? []
    )
  }

  internal func makeGetWebTokensCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebTokensResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebTokensInterceptors() ?? []
    )
  }

  internal func makeDeleteWebTokenCall(
    _ request: Types_DeleteWebTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_DeleteWebTokenRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWebToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWebTokenInterceptors() ?? []
    )
  }

  internal func makeDeleteAllWebTokensCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWebTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWebTokensInterceptors() ?? []
    )
  }

  internal func makeUpdateRemoteClusterCall(
    _ request: Types_RemoteClusterV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_RemoteClusterV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateRemoteCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRemoteClusterInterceptors() ?? []
    )
  }

  internal func makeUpsertKubernetesServerCall(
    _ request: Proto_UpsertKubernetesServerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertKubernetesServerRequest, Types_KeepAlive> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertKubernetesServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertKubernetesServerInterceptors() ?? []
    )
  }

  internal func makeDeleteKubernetesServerCall(
    _ request: Proto_DeleteKubernetesServerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteKubernetesServerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteKubernetesServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKubernetesServerInterceptors() ?? []
    )
  }

  internal func makeDeleteAllKubernetesServersCall(
    _ request: Proto_DeleteAllKubernetesServersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllKubernetesServersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllKubernetesServersInterceptors() ?? []
    )
  }

  internal func makeUpsertDatabaseServerCall(
    _ request: Proto_UpsertDatabaseServerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertDatabaseServerRequest, Types_KeepAlive> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertDatabaseServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDatabaseServerInterceptors() ?? []
    )
  }

  internal func makeDeleteDatabaseServerCall(
    _ request: Proto_DeleteDatabaseServerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteDatabaseServerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabaseServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseServerInterceptors() ?? []
    )
  }

  internal func makeDeleteAllDatabaseServersCall(
    _ request: Proto_DeleteAllDatabaseServersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllDatabaseServersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabaseServersInterceptors() ?? []
    )
  }

  internal func makeUpsertDatabaseServiceCall(
    _ request: Proto_UpsertDatabaseServiceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertDatabaseServiceRequest, Types_KeepAlive> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertDatabaseService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDatabaseServiceInterceptors() ?? []
    )
  }

  internal func makeDeleteDatabaseServiceCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabaseService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseServiceInterceptors() ?? []
    )
  }

  internal func makeDeleteAllDatabaseServicesCall(
    _ request: Proto_DeleteAllDatabaseServicesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteAllDatabaseServicesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabaseServicesInterceptors() ?? []
    )
  }

  internal func makeSignDatabaseCsrCall(
    _ request: Proto_DatabaseCSRRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DatabaseCSRRequest, Proto_DatabaseCSRResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.signDatabaseCSR.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSignDatabaseCSRInterceptors() ?? []
    )
  }

  internal func makeGenerateDatabaseCertCall(
    _ request: Proto_DatabaseCertRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DatabaseCertRequest, Proto_DatabaseCertResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateDatabaseCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateDatabaseCertInterceptors() ?? []
    )
  }

  internal func makeGenerateSnowflakeJwtCall(
    _ request: Proto_SnowflakeJWTRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_SnowflakeJWTRequest, Proto_SnowflakeJWTResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateSnowflakeJWT.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateSnowflakeJWTInterceptors() ?? []
    )
  }

  internal func makeGetRoleCall(
    _ request: Proto_GetRoleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetRoleRequest, Types_RoleV6> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoleInterceptors() ?? []
    )
  }

  internal func makeGetRolesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetRolesResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getRoles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRolesInterceptors() ?? []
    )
  }

  internal func makeCreateRoleCall(
    _ request: Proto_CreateRoleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateRoleRequest, Types_RoleV6> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRoleInterceptors() ?? []
    )
  }

  internal func makeUpdateRoleCall(
    _ request: Proto_UpdateRoleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpdateRoleRequest, Types_RoleV6> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRoleInterceptors() ?? []
    )
  }

  internal func makeUpsertRoleV2Call(
    _ request: Proto_UpsertRoleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertRoleRequest, Types_RoleV6> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertRoleV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertRoleV2Interceptors() ?? []
    )
  }

  internal func makeUpsertRoleCall(
    _ request: Types_RoleV6,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_RoleV6, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertRoleInterceptors() ?? []
    )
  }

  internal func makeDeleteRoleCall(
    _ request: Proto_DeleteRoleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteRoleRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteRoleInterceptors() ?? []
    )
  }

  internal func makeAddMfadeviceCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_AddMFADeviceRequest, Proto_AddMFADeviceResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADevice.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceInterceptors() ?? []
    )
  }

  internal func makeDeleteMfadeviceCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Proto_DeleteMFADeviceRequest, Proto_DeleteMFADeviceResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADevice.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceInterceptors() ?? []
    )
  }

  internal func makeAddMfadeviceSyncCall(
    _ request: Proto_AddMFADeviceSyncRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_AddMFADeviceSyncRequest, Proto_AddMFADeviceSyncResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADeviceSync.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceSyncInterceptors() ?? []
    )
  }

  internal func makeDeleteMfadeviceSyncCall(
    _ request: Proto_DeleteMFADeviceSyncRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteMFADeviceSyncRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADeviceSync.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceSyncInterceptors() ?? []
    )
  }

  internal func makeGetMfadevicesCall(
    _ request: Proto_GetMFADevicesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetMFADevicesRequest, Proto_GetMFADevicesResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getMFADevices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMFADevicesInterceptors() ?? []
    )
  }

  internal func makeCreateAuthenticateChallengeCall(
    _ request: Proto_CreateAuthenticateChallengeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateAuthenticateChallengeRequest, Proto_MFAAuthenticateChallenge> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuthenticateChallenge.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuthenticateChallengeInterceptors() ?? []
    )
  }

  internal func makeCreateRegisterChallengeCall(
    _ request: Proto_CreateRegisterChallengeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateRegisterChallengeRequest, Proto_MFARegisterChallenge> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createRegisterChallenge.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRegisterChallengeInterceptors() ?? []
    )
  }

  internal func makeGetOidcconnectorCall(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceWithSecretsRequest, Types_OIDCConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCConnectorInterceptors() ?? []
    )
  }

  internal func makeGetOidcconnectorsCall(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourcesWithSecretsRequest, Types_OIDCConnectorV3List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCConnectorsInterceptors() ?? []
    )
  }

  internal func makeCreateOidcconnectorCall(
    _ request: Proto_CreateOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateOIDCConnectorRequest, Types_OIDCConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOIDCConnectorInterceptors() ?? []
    )
  }

  internal func makeUpdateOidcconnectorCall(
    _ request: Proto_UpdateOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpdateOIDCConnectorRequest, Types_OIDCConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateOIDCConnectorInterceptors() ?? []
    )
  }

  internal func makeUpsertOidcconnectorCall(
    _ request: Types_OIDCConnectorV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_OIDCConnectorV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertOIDCConnectorInterceptors() ?? []
    )
  }

  internal func makeUpsertOidcconnectorV2Call(
    _ request: Proto_UpsertOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertOIDCConnectorRequest, Types_OIDCConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertOIDCConnectorV2Interceptors() ?? []
    )
  }

  internal func makeDeleteOidcconnectorCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteOIDCConnectorInterceptors() ?? []
    )
  }

  internal func makeCreateOidcauthRequestCall(
    _ request: Types_OIDCAuthRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_OIDCAuthRequest, Types_OIDCAuthRequest> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createOIDCAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOIDCAuthRequestInterceptors() ?? []
    )
  }

  internal func makeGetOidcauthRequestCall(
    _ request: Proto_GetOIDCAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetOIDCAuthRequestRequest, Types_OIDCAuthRequest> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCAuthRequestInterceptors() ?? []
    )
  }

  internal func makeGetSamlconnectorCall(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceWithSecretsRequest, Types_SAMLConnectorV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLConnectorInterceptors() ?? []
    )
  }

  internal func makeGetSamlconnectorsCall(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourcesWithSecretsRequest, Types_SAMLConnectorV2List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLConnectorsInterceptors() ?? []
    )
  }

  internal func makeCreateSamlconnectorCall(
    _ request: Proto_CreateSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateSAMLConnectorRequest, Types_SAMLConnectorV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLConnectorInterceptors() ?? []
    )
  }

  internal func makeUpdateSamlconnectorCall(
    _ request: Proto_UpdateSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpdateSAMLConnectorRequest, Types_SAMLConnectorV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSAMLConnectorInterceptors() ?? []
    )
  }

  internal func makeUpsertSamlconnectorCall(
    _ request: Types_SAMLConnectorV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SAMLConnectorV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertSAMLConnectorInterceptors() ?? []
    )
  }

  internal func makeUpsertSamlconnectorV2Call(
    _ request: Proto_UpsertSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertSAMLConnectorRequest, Types_SAMLConnectorV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertSAMLConnectorV2Interceptors() ?? []
    )
  }

  internal func makeDeleteSamlconnectorCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLConnectorInterceptors() ?? []
    )
  }

  internal func makeCreateSamlauthRequestCall(
    _ request: Types_SAMLAuthRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SAMLAuthRequest, Types_SAMLAuthRequest> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLAuthRequestInterceptors() ?? []
    )
  }

  internal func makeGetSamlauthRequestCall(
    _ request: Proto_GetSAMLAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSAMLAuthRequestRequest, Types_SAMLAuthRequest> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLAuthRequestInterceptors() ?? []
    )
  }

  internal func makeGetGithubConnectorCall(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceWithSecretsRequest, Types_GithubConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubConnectorInterceptors() ?? []
    )
  }

  internal func makeGetGithubConnectorsCall(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourcesWithSecretsRequest, Types_GithubConnectorV3List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubConnectorsInterceptors() ?? []
    )
  }

  internal func makeCreateGithubConnectorCall(
    _ request: Proto_CreateGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateGithubConnectorRequest, Types_GithubConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateGithubConnectorInterceptors() ?? []
    )
  }

  internal func makeUpdateGithubConnectorCall(
    _ request: Proto_UpdateGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpdateGithubConnectorRequest, Types_GithubConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateGithubConnectorInterceptors() ?? []
    )
  }

  internal func makeUpsertGithubConnectorCall(
    _ request: Types_GithubConnectorV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_GithubConnectorV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertGithubConnectorInterceptors() ?? []
    )
  }

  internal func makeUpsertGithubConnectorV2Call(
    _ request: Proto_UpsertGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertGithubConnectorRequest, Types_GithubConnectorV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertGithubConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertGithubConnectorV2Interceptors() ?? []
    )
  }

  internal func makeDeleteGithubConnectorCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteGithubConnectorInterceptors() ?? []
    )
  }

  internal func makeCreateGithubAuthRequestCall(
    _ request: Types_GithubAuthRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_GithubAuthRequest, Types_GithubAuthRequest> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createGithubAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateGithubAuthRequestInterceptors() ?? []
    )
  }

  internal func makeGetGithubAuthRequestCall(
    _ request: Proto_GetGithubAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetGithubAuthRequestRequest, Types_GithubAuthRequest> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubAuthRequestInterceptors() ?? []
    )
  }

  internal func makeGetSsodiagnosticInfoCall(
    _ request: Proto_GetSSODiagnosticInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSSODiagnosticInfoRequest, Types_SSODiagnosticInfo> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSSODiagnosticInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSSODiagnosticInfoInterceptors() ?? []
    )
  }

  internal func makeGetServerInfosCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ServerInfoV1> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getServerInfos.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetServerInfosInterceptors() ?? []
    )
  }

  internal func makeGetServerInfoCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_ServerInfoV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetServerInfoInterceptors() ?? []
    )
  }

  internal func makeUpsertServerInfoCall(
    _ request: Types_ServerInfoV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ServerInfoV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertServerInfoInterceptors() ?? []
    )
  }

  internal func makeDeleteServerInfoCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteServerInfoInterceptors() ?? []
    )
  }

  internal func makeDeleteAllServerInfosCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllServerInfos.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllServerInfosInterceptors() ?? []
    )
  }

  internal func makeGetTrustedClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_TrustedClusterV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrustedClusterInterceptors() ?? []
    )
  }

  internal func makeGetTrustedClustersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_TrustedClusterV2List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTrustedClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrustedClustersInterceptors() ?? []
    )
  }

  internal func makeUpsertTrustedClusterCall(
    _ request: Types_TrustedClusterV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_TrustedClusterV2, Types_TrustedClusterV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertTrustedClusterInterceptors() ?? []
    )
  }

  internal func makeDeleteTrustedClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTrustedClusterInterceptors() ?? []
    )
  }

  internal func makeGetTokenCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_ProvisionTokenV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTokenInterceptors() ?? []
    )
  }

  internal func makeGetTokensCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ProvisionTokenV2List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTokensInterceptors() ?? []
    )
  }

  internal func makeCreateTokenV2Call(
    _ request: Proto_CreateTokenV2Request,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createTokenV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTokenV2Interceptors() ?? []
    )
  }

  internal func makeUpsertTokenV2Call(
    _ request: Proto_UpsertTokenV2Request,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpsertTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertTokenV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertTokenV2Interceptors() ?? []
    )
  }

  internal func makeDeleteTokenCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTokenInterceptors() ?? []
    )
  }

  internal func makeGetClusterAuditConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterAuditConfigV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterAuditConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterAuditConfigInterceptors() ?? []
    )
  }

  internal func makeGetClusterNetworkingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterNetworkingConfigV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  internal func makeSetClusterNetworkingConfigCall(
    _ request: Types_ClusterNetworkingConfigV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ClusterNetworkingConfigV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  internal func makeResetClusterNetworkingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  internal func makeGetSessionRecordingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionRecordingConfigV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionRecordingConfigInterceptors() ?? []
    )
  }

  internal func makeSetSessionRecordingConfigCall(
    _ request: Types_SessionRecordingConfigV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SessionRecordingConfigV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetSessionRecordingConfigInterceptors() ?? []
    )
  }

  internal func makeResetSessionRecordingConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetSessionRecordingConfigInterceptors() ?? []
    )
  }

  internal func makeGetAuthPreferenceCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AuthPreferenceV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAuthPreferenceInterceptors() ?? []
    )
  }

  internal func makeSetAuthPreferenceCall(
    _ request: Types_AuthPreferenceV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AuthPreferenceV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAuthPreferenceInterceptors() ?? []
    )
  }

  internal func makeResetAuthPreferenceCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetAuthPreferenceInterceptors() ?? []
    )
  }

  internal func makeGetUiconfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_UIConfigV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUIConfigInterceptors() ?? []
    )
  }

  internal func makeSetUiconfigCall(
    _ request: Types_UIConfigV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_UIConfigV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetUIConfigInterceptors() ?? []
    )
  }

  internal func makeDeleteUiconfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUIConfigInterceptors() ?? []
    )
  }

  internal func makeGetEventsCall(
    _ request: Proto_GetEventsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetEventsRequest, Proto_Events> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsInterceptors() ?? []
    )
  }

  internal func makeGetSessionEventsCall(
    _ request: Proto_GetSessionEventsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSessionEventsRequest, Proto_Events> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionEventsInterceptors() ?? []
    )
  }

  internal func makeGetLockCall(
    _ request: Proto_GetLockRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetLockRequest, Types_LockV2> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLockInterceptors() ?? []
    )
  }

  internal func makeGetLocksCall(
    _ request: Proto_GetLocksRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetLocksRequest, Proto_GetLocksResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLocks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLocksInterceptors() ?? []
    )
  }

  internal func makeUpsertLockCall(
    _ request: Types_LockV2,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_LockV2, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertLockInterceptors() ?? []
    )
  }

  internal func makeDeleteLockCall(
    _ request: Proto_DeleteLockRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteLockRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLockInterceptors() ?? []
    )
  }

  internal func makeReplaceRemoteLocksCall(
    _ request: Proto_ReplaceRemoteLocksRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ReplaceRemoteLocksRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.replaceRemoteLocks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceRemoteLocksInterceptors() ?? []
    )
  }

  internal func makeStreamSessionEventsCall(
    _ request: Proto_StreamSessionEventsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Proto_StreamSessionEventsRequest, Events_OneOf> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.streamSessionEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamSessionEventsInterceptors() ?? []
    )
  }

  internal func makeGetNetworkRestrictionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_NetworkRestrictionsV4> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkRestrictionsInterceptors() ?? []
    )
  }

  internal func makeSetNetworkRestrictionsCall(
    _ request: Types_NetworkRestrictionsV4,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_NetworkRestrictionsV4, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNetworkRestrictionsInterceptors() ?? []
    )
  }

  internal func makeDeleteNetworkRestrictionsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNetworkRestrictionsInterceptors() ?? []
    )
  }

  internal func makeGetAppsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_AppV3List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppsInterceptors() ?? []
    )
  }

  internal func makeGetAppCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_AppV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppInterceptors() ?? []
    )
  }

  internal func makeCreateAppCall(
    _ request: Types_AppV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAppInterceptors() ?? []
    )
  }

  internal func makeUpdateAppCall(
    _ request: Types_AppV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAppInterceptors() ?? []
    )
  }

  internal func makeDeleteAppCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAppInterceptors() ?? []
    )
  }

  internal func makeDeleteAllAppsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllAppsInterceptors() ?? []
    )
  }

  internal func makeGetDatabasesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_DatabaseV3List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDatabases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDatabasesInterceptors() ?? []
    )
  }

  internal func makeGetDatabaseCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_DatabaseV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDatabaseInterceptors() ?? []
    )
  }

  internal func makeCreateDatabaseCall(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDatabaseInterceptors() ?? []
    )
  }

  internal func makeUpdateDatabaseCall(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDatabaseInterceptors() ?? []
    )
  }

  internal func makeDeleteDatabaseCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseInterceptors() ?? []
    )
  }

  internal func makeDeleteAllDatabasesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabasesInterceptors() ?? []
    )
  }

  internal func makeGetKubernetesClustersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_KubernetesClusterV3List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getKubernetesClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKubernetesClustersInterceptors() ?? []
    )
  }

  internal func makeGetKubernetesClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_KubernetesClusterV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKubernetesClusterInterceptors() ?? []
    )
  }

  internal func makeCreateKubernetesClusterCall(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateKubernetesClusterInterceptors() ?? []
    )
  }

  internal func makeUpdateKubernetesClusterCall(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateKubernetesClusterInterceptors() ?? []
    )
  }

  internal func makeDeleteKubernetesClusterCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKubernetesClusterInterceptors() ?? []
    )
  }

  internal func makeDeleteAllKubernetesClustersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllKubernetesClustersInterceptors() ?? []
    )
  }

  internal func makeGetWindowsDesktopServicesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWindowsDesktopServicesResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopServicesInterceptors() ?? []
    )
  }

  internal func makeGetWindowsDesktopServiceCall(
    _ request: Proto_GetWindowsDesktopServiceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetWindowsDesktopServiceRequest, Proto_GetWindowsDesktopServiceResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopServiceInterceptors() ?? []
    )
  }

  internal func makeUpsertWindowsDesktopServiceCall(
    _ request: Types_WindowsDesktopServiceV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopServiceV3, Types_KeepAlive> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertWindowsDesktopServiceInterceptors() ?? []
    )
  }

  internal func makeDeleteWindowsDesktopServiceCall(
    _ request: Proto_DeleteWindowsDesktopServiceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteWindowsDesktopServiceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWindowsDesktopServiceInterceptors() ?? []
    )
  }

  internal func makeDeleteAllWindowsDesktopServicesCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktopServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWindowsDesktopServicesInterceptors() ?? []
    )
  }

  internal func makeGetWindowsDesktopsCall(
    _ request: Types_WindowsDesktopFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopFilter, Proto_GetWindowsDesktopsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopsInterceptors() ?? []
    )
  }

  internal func makeCreateWindowsDesktopCall(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateWindowsDesktopInterceptors() ?? []
    )
  }

  internal func makeUpdateWindowsDesktopCall(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateWindowsDesktopInterceptors() ?? []
    )
  }

  internal func makeUpsertWindowsDesktopCall(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertWindowsDesktopInterceptors() ?? []
    )
  }

  internal func makeDeleteWindowsDesktopCall(
    _ request: Proto_DeleteWindowsDesktopRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteWindowsDesktopRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWindowsDesktopInterceptors() ?? []
    )
  }

  internal func makeDeleteAllWindowsDesktopsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWindowsDesktopsInterceptors() ?? []
    )
  }

  internal func makeGenerateWindowsDesktopCertCall(
    _ request: Proto_WindowsDesktopCertRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_WindowsDesktopCertRequest, Proto_WindowsDesktopCertResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateWindowsDesktopCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateWindowsDesktopCertInterceptors() ?? []
    )
  }

  internal func makeGenerateCertAuthorityCrlCall(
    _ request: Proto_CertAuthorityRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CertAuthorityRequest, Proto_CRL> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateCertAuthorityCRL.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateCertAuthorityCRLInterceptors() ?? []
    )
  }

  internal func makeCreateConnectionDiagnosticCall(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateConnectionDiagnosticInterceptors() ?? []
    )
  }

  internal func makeUpdateConnectionDiagnosticCall(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateConnectionDiagnosticInterceptors() ?? []
    )
  }

  internal func makeGetConnectionDiagnosticCall(
    _ request: Proto_GetConnectionDiagnosticRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetConnectionDiagnosticRequest, Types_ConnectionDiagnosticV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConnectionDiagnosticInterceptors() ?? []
    )
  }

  internal func makeAppendDiagnosticTraceCall(
    _ request: Proto_AppendDiagnosticTraceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_AppendDiagnosticTraceRequest, Types_ConnectionDiagnosticV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.appendDiagnosticTrace.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAppendDiagnosticTraceInterceptors() ?? []
    )
  }

  internal func makeChangeUserAuthenticationCall(
    _ request: Proto_ChangeUserAuthenticationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ChangeUserAuthenticationRequest, Proto_ChangeUserAuthenticationResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.changeUserAuthentication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangeUserAuthenticationInterceptors() ?? []
    )
  }

  internal func makeStartAccountRecoveryCall(
    _ request: Proto_StartAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_StartAccountRecoveryRequest, Types_UserTokenV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.startAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartAccountRecoveryInterceptors() ?? []
    )
  }

  internal func makeVerifyAccountRecoveryCall(
    _ request: Proto_VerifyAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_VerifyAccountRecoveryRequest, Types_UserTokenV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.verifyAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyAccountRecoveryInterceptors() ?? []
    )
  }

  internal func makeCompleteAccountRecoveryCall(
    _ request: Proto_CompleteAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CompleteAccountRecoveryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.completeAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompleteAccountRecoveryInterceptors() ?? []
    )
  }

  internal func makeCreateAccountRecoveryCodesCall(
    _ request: Proto_CreateAccountRecoveryCodesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreateAccountRecoveryCodesRequest, Proto_RecoveryCodes> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccountRecoveryCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccountRecoveryCodesInterceptors() ?? []
    )
  }

  internal func makeGetAccountRecoveryTokenCall(
    _ request: Proto_GetAccountRecoveryTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetAccountRecoveryTokenRequest, Types_UserTokenV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountRecoveryTokenInterceptors() ?? []
    )
  }

  internal func makeGetAccountRecoveryCodesCall(
    _ request: Proto_GetAccountRecoveryCodesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetAccountRecoveryCodesRequest, Proto_RecoveryCodes> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountRecoveryCodesInterceptors() ?? []
    )
  }

  internal func makeCreatePrivilegeTokenCall(
    _ request: Proto_CreatePrivilegeTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_CreatePrivilegeTokenRequest, Types_UserTokenV3> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createPrivilegeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePrivilegeTokenInterceptors() ?? []
    )
  }

  internal func makeGetInstallerCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, Types_InstallerV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstallerInterceptors() ?? []
    )
  }

  internal func makeGetInstallersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_InstallerV1List> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstallers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstallersInterceptors() ?? []
    )
  }

  internal func makeSetInstallerCall(
    _ request: Types_InstallerV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_InstallerV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInstallerInterceptors() ?? []
    )
  }

  internal func makeDeleteInstallerCall(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteInstallerInterceptors() ?? []
    )
  }

  internal func makeDeleteAllInstallersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllInstallers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllInstallersInterceptors() ?? []
    )
  }

  internal func makeListResourcesCall(
    _ request: Proto_ListResourcesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListResourcesRequest, Proto_ListResourcesResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListResourcesInterceptors() ?? []
    )
  }

  internal func makeListUnifiedResourcesCall(
    _ request: Proto_ListUnifiedResourcesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListUnifiedResourcesRequest, Proto_ListUnifiedResourcesResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listUnifiedResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListUnifiedResourcesInterceptors() ?? []
    )
  }

  internal func makeGetSshtargetsCall(
    _ request: Proto_GetSSHTargetsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSSHTargetsRequest, Proto_GetSSHTargetsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSSHTargets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSSHTargetsInterceptors() ?? []
    )
  }

  internal func makeGetDomainNameCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetDomainNameResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDomainName.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDomainNameInterceptors() ?? []
    )
  }

  internal func makeGetClusterCacertCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetClusterCACertResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterCACert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterCACertInterceptors() ?? []
    )
  }

  internal func makeSubmitUsageEventCall(
    _ request: Proto_SubmitUsageEventRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_SubmitUsageEventRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.submitUsageEvent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitUsageEventInterceptors() ?? []
    )
  }

  internal func makeGetLicenseCall(
    _ request: Proto_GetLicenseRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetLicenseRequest, Proto_GetLicenseResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLicense.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLicenseInterceptors() ?? []
    )
  }

  internal func makeListReleasesCall(
    _ request: Proto_ListReleasesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListReleasesRequest, Proto_ListReleasesResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listReleases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListReleasesInterceptors() ?? []
    )
  }

  internal func makeListSamlidPserviceProvidersCall(
    _ request: Proto_ListSAMLIdPServiceProvidersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListSAMLIdPServiceProvidersRequest, Proto_ListSAMLIdPServiceProvidersResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listSAMLIdPServiceProviders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListSAMLIdPServiceProvidersInterceptors() ?? []
    )
  }

  internal func makeGetSamlidPserviceProviderCall(
    _ request: Proto_GetSAMLIdPServiceProviderRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetSAMLIdPServiceProviderRequest, Types_SAMLIdPServiceProviderV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func makeCreateSamlidPserviceProviderCall(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func makeUpdateSamlidPserviceProviderCall(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func makeDeleteSamlidPserviceProviderCall(
    _ request: Proto_DeleteSAMLIdPServiceProviderRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteSAMLIdPServiceProviderRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func makeDeleteAllSamlidPserviceProvidersCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPServiceProviders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSAMLIdPServiceProvidersInterceptors() ?? []
    )
  }

  internal func makeListUserGroupsCall(
    _ request: Proto_ListUserGroupsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ListUserGroupsRequest, Proto_ListUserGroupsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listUserGroups.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListUserGroupsInterceptors() ?? []
    )
  }

  internal func makeGetUserGroupCall(
    _ request: Proto_GetUserGroupRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetUserGroupRequest, Types_UserGroupV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserGroupInterceptors() ?? []
    )
  }

  internal func makeCreateUserGroupCall(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserGroupInterceptors() ?? []
    )
  }

  internal func makeUpdateUserGroupCall(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUserGroupInterceptors() ?? []
    )
  }

  internal func makeDeleteUserGroupCall(
    _ request: Proto_DeleteUserGroupRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_DeleteUserGroupRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserGroupInterceptors() ?? []
    )
  }

  internal func makeDeleteAllUserGroupsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllUserGroups.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllUserGroupsInterceptors() ?? []
    )
  }

  internal func makeGetHeadlessAuthenticationCall(
    _ request: Proto_GetHeadlessAuthenticationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_GetHeadlessAuthenticationRequest, Types_HeadlessAuthentication> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getHeadlessAuthentication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetHeadlessAuthenticationInterceptors() ?? []
    )
  }

  internal func makeWatchPendingHeadlessAuthenticationsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<SwiftProtobuf.Google_Protobuf_Empty, Proto_Event> {
    return self.makeAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.watchPendingHeadlessAuthentications.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWatchPendingHeadlessAuthenticationsInterceptors() ?? []
    )
  }

  internal func makeUpdateHeadlessAuthenticationStateCall(
    _ request: Proto_UpdateHeadlessAuthenticationStateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_UpdateHeadlessAuthenticationStateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateHeadlessAuthenticationState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateHeadlessAuthenticationStateInterceptors() ?? []
    )
  }

  internal func makeExportUpgradeWindowsCall(
    _ request: Proto_ExportUpgradeWindowsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_ExportUpgradeWindowsRequest, Proto_ExportUpgradeWindowsResponse> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.exportUpgradeWindows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportUpgradeWindowsInterceptors() ?? []
    )
  }

  internal func makeGetClusterMaintenanceConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterMaintenanceConfigV1> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterMaintenanceConfigInterceptors() ?? []
    )
  }

  internal func makeUpdateClusterMaintenanceConfigCall(
    _ request: Types_ClusterMaintenanceConfigV1,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Types_ClusterMaintenanceConfigV1, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClusterMaintenanceConfigInterceptors() ?? []
    )
  }

  internal func makeDeleteClusterMaintenanceConfigCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteClusterMaintenanceConfigInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Proto_AuthServiceAsyncClientProtocol {
  internal func inventoryControlStream<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_DownstreamInventoryOneOf> where RequestStream: Sequence, RequestStream.Element == Proto_UpstreamInventoryOneOf {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.inventoryControlStream.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInventoryControlStreamInterceptors() ?? []
    )
  }

  internal func inventoryControlStream<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_DownstreamInventoryOneOf> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Proto_UpstreamInventoryOneOf {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.inventoryControlStream.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInventoryControlStreamInterceptors() ?? []
    )
  }

  internal func getInventoryStatus(
    _ request: Proto_InventoryStatusRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_InventoryStatusSummary {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInventoryStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInventoryStatusInterceptors() ?? []
    )
  }

  internal func getInventoryConnectedServiceCounts(
    _ request: Proto_InventoryConnectedServiceCountsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_InventoryConnectedServiceCounts {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInventoryConnectedServiceCounts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInventoryConnectedServiceCountsInterceptors() ?? []
    )
  }

  internal func pingInventory(
    _ request: Proto_InventoryPingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_InventoryPingResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.pingInventory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInventoryInterceptors() ?? []
    )
  }

  internal func getInstances(
    _ request: Types_InstanceFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_InstanceV1> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstances.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstancesInterceptors() ?? []
    )
  }

  internal func getClusterAlerts(
    _ request: Types_GetClusterAlertsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetClusterAlertsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterAlerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterAlertsInterceptors() ?? []
    )
  }

  internal func upsertClusterAlert(
    _ request: Proto_UpsertClusterAlertRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertClusterAlert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertClusterAlertInterceptors() ?? []
    )
  }

  internal func createAlertAck(
    _ request: Types_AlertAcknowledgement,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAlertAck.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAlertAckInterceptors() ?? []
    )
  }

  internal func getAlertAcks(
    _ request: Proto_GetAlertAcksRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetAlertAcksResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAlertAcks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAlertAcksInterceptors() ?? []
    )
  }

  internal func clearAlertAcks(
    _ request: Proto_ClearAlertAcksRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.clearAlertAcks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearAlertAcksInterceptors() ?? []
    )
  }

  internal func maintainSessionPresence<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_MFAAuthenticateChallenge> where RequestStream: Sequence, RequestStream.Element == Proto_PresenceMFAChallengeSend {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.maintainSessionPresence.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMaintainSessionPresenceInterceptors() ?? []
    )
  }

  internal func maintainSessionPresence<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_MFAAuthenticateChallenge> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Proto_PresenceMFAChallengeSend {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.maintainSessionPresence.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMaintainSessionPresenceInterceptors() ?? []
    )
  }

  internal func createSessionTracker(
    _ request: Proto_CreateSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SessionTrackerV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSessionTrackerInterceptors() ?? []
    )
  }

  internal func getSessionTracker(
    _ request: Proto_GetSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SessionTrackerV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionTrackerInterceptors() ?? []
    )
  }

  internal func getActiveSessionTrackers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_SessionTrackerV1> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveSessionTrackersInterceptors() ?? []
    )
  }

  internal func getActiveSessionTrackersWithFilter(
    _ request: Types_SessionTrackerFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_SessionTrackerV1> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackersWithFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveSessionTrackersWithFilterInterceptors() ?? []
    )
  }

  internal func removeSessionTracker(
    _ request: Proto_RemoveSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.removeSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveSessionTrackerInterceptors() ?? []
    )
  }

  internal func updateSessionTracker(
    _ request: Proto_UpdateSessionTrackerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSessionTracker.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSessionTrackerInterceptors() ?? []
    )
  }

  internal func sendKeepAlives<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty where RequestStream: Sequence, RequestStream.Element == Types_KeepAlive {
    return try await self.performAsyncClientStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.sendKeepAlives.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendKeepAlivesInterceptors() ?? []
    )
  }

  internal func sendKeepAlives<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Types_KeepAlive {
    return try await self.performAsyncClientStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.sendKeepAlives.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendKeepAlivesInterceptors() ?? []
    )
  }

  internal func watchEvents(
    _ request: Proto_Watch,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_Event> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.watchEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWatchEventsInterceptors() ?? []
    )
  }

  internal func getNode(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ServerV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNodeInterceptors() ?? []
    )
  }

  internal func upsertNode(
    _ request: Types_ServerV2,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KeepAlive {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertNodeInterceptors() ?? []
    )
  }

  internal func deleteNode(
    _ request: Types_ResourceInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteNode.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNodeInterceptors() ?? []
    )
  }

  internal func deleteAllNodes(
    _ request: Types_ResourcesInNamespaceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllNodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllNodesInterceptors() ?? []
    )
  }

  internal func generateUserCerts(
    _ request: Proto_UserCertsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Certs {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserCerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserCertsInterceptors() ?? []
    )
  }

  internal func generateHostCerts(
    _ request: Proto_HostCertsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Certs {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateHostCerts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateHostCertsInterceptors() ?? []
    )
  }

  internal func generateUserSingleUseCerts<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_UserSingleUseCertsResponse> where RequestStream: Sequence, RequestStream.Element == Proto_UserSingleUseCertsRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserSingleUseCerts.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserSingleUseCertsInterceptors() ?? []
    )
  }

  internal func generateUserSingleUseCerts<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_UserSingleUseCertsResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Proto_UserSingleUseCertsRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateUserSingleUseCerts.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateUserSingleUseCertsInterceptors() ?? []
    )
  }

  internal func generateOpenSSHCert(
    _ request: Proto_OpenSSHCertRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_OpenSSHCert {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateOpenSSHCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateOpenSSHCertInterceptors() ?? []
    )
  }

  internal func isMFARequired(
    _ request: Proto_IsMFARequiredRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_IsMFARequiredResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.isMFARequired.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIsMFARequiredInterceptors() ?? []
    )
  }

  internal func getAccessRequestsV2(
    _ request: Types_AccessRequestFilter,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_AccessRequestV3> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessRequestsV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessRequestsV2Interceptors() ?? []
    )
  }

  internal func createAccessRequest(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccessRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccessRequestInterceptors() ?? []
    )
  }

  internal func createAccessRequestV2(
    _ request: Types_AccessRequestV3,
    callOptions: CallOptions? = nil
  ) async throws -> Types_AccessRequestV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccessRequestV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccessRequestV2Interceptors() ?? []
    )
  }

  internal func deleteAccessRequest(
    _ request: Proto_RequestID,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAccessRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccessRequestInterceptors() ?? []
    )
  }

  internal func setAccessRequestState(
    _ request: Proto_RequestStateSetter,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setAccessRequestState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAccessRequestStateInterceptors() ?? []
    )
  }

  internal func submitAccessReview(
    _ request: Types_AccessReviewSubmission,
    callOptions: CallOptions? = nil
  ) async throws -> Types_AccessRequestV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.submitAccessReview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitAccessReviewInterceptors() ?? []
    )
  }

  internal func getAccessCapabilities(
    _ request: Types_AccessCapabilitiesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_AccessCapabilities {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessCapabilities.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessCapabilitiesInterceptors() ?? []
    )
  }

  internal func getAccessRequestAllowedPromotions(
    _ request: Proto_AccessRequestAllowedPromotionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_AccessRequestAllowedPromotionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccessRequestAllowedPromotions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccessRequestAllowedPromotionsInterceptors() ?? []
    )
  }

  internal func getPluginData(
    _ request: Types_PluginDataFilter,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_PluginDataSeq {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getPluginData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPluginDataInterceptors() ?? []
    )
  }

  internal func updatePluginData(
    _ request: Types_PluginDataUpdateParams,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updatePluginData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePluginDataInterceptors() ?? []
    )
  }

  internal func ping(
    _ request: Proto_PingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_PingResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  internal func getResetPasswordToken(
    _ request: Proto_GetResetPasswordTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserTokenV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getResetPasswordToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetResetPasswordTokenInterceptors() ?? []
    )
  }

  internal func createResetPasswordToken(
    _ request: Proto_CreateResetPasswordTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserTokenV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createResetPasswordToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateResetPasswordTokenInterceptors() ?? []
    )
  }

  internal func createBot(
    _ request: Proto_CreateBotRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_CreateBotResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createBot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateBotInterceptors() ?? []
    )
  }

  internal func deleteBot(
    _ request: Proto_DeleteBotRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteBot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteBotInterceptors() ?? []
    )
  }

  internal func getBotUsers(
    _ request: Proto_GetBotUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_UserV2> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getBotUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBotUsersInterceptors() ?? []
    )
  }

  internal func getUser(
    _ request: Proto_GetUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserInterceptors() ?? []
    )
  }

  internal func getCurrentUser(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getCurrentUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCurrentUserInterceptors() ?? []
    )
  }

  internal func getCurrentUserRoles(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_RoleV6> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getCurrentUserRoles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCurrentUserRolesInterceptors() ?? []
    )
  }

  internal func getUsers(
    _ request: Proto_GetUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_UserV2> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersInterceptors() ?? []
    )
  }

  internal func createUser(
    _ request: Types_UserV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserInterceptors() ?? []
    )
  }

  internal func updateUser(
    _ request: Types_UserV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUserInterceptors() ?? []
    )
  }

  internal func deleteUser(
    _ request: Proto_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  internal func changePassword(
    _ request: Proto_ChangePasswordRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.changePassword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangePasswordInterceptors() ?? []
    )
  }

  internal func acquireSemaphore(
    _ request: Types_AcquireSemaphoreRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SemaphoreLease {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.acquireSemaphore.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAcquireSemaphoreInterceptors() ?? []
    )
  }

  internal func keepAliveSemaphoreLease(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.keepAliveSemaphoreLease.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeKeepAliveSemaphoreLeaseInterceptors() ?? []
    )
  }

  internal func cancelSemaphoreLease(
    _ request: Types_SemaphoreLease,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.cancelSemaphoreLease.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSemaphoreLeaseInterceptors() ?? []
    )
  }

  internal func getSemaphores(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Semaphores {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSemaphores.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSemaphoresInterceptors() ?? []
    )
  }

  internal func deleteSemaphore(
    _ request: Types_SemaphoreFilter,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSemaphore.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSemaphoreInterceptors() ?? []
    )
  }

  internal func emitAuditEvent(
    _ request: Events_OneOf,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.emitAuditEvent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEmitAuditEventInterceptors() ?? []
    )
  }

  internal func createAuditStream<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Events_StreamStatus> where RequestStream: Sequence, RequestStream.Element == Proto_AuditStreamRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuditStream.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuditStreamInterceptors() ?? []
    )
  }

  internal func createAuditStream<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Events_StreamStatus> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Proto_AuditStreamRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuditStream.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuditStreamInterceptors() ?? []
    )
  }

  internal func upsertApplicationServer(
    _ request: Proto_UpsertApplicationServerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KeepAlive {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertApplicationServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertApplicationServerInterceptors() ?? []
    )
  }

  internal func deleteApplicationServer(
    _ request: Proto_DeleteApplicationServerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteApplicationServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteApplicationServerInterceptors() ?? []
    )
  }

  internal func deleteAllApplicationServers(
    _ request: Proto_DeleteAllApplicationServersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllApplicationServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllApplicationServersInterceptors() ?? []
    )
  }

  internal func generateAppToken(
    _ request: Proto_GenerateAppTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GenerateAppTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateAppToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateAppTokenInterceptors() ?? []
    )
  }

  internal func getAppSession(
    _ request: Proto_GetAppSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetAppSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppSessionInterceptors() ?? []
    )
  }

  internal func listAppSessions(
    _ request: Proto_ListAppSessionsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListAppSessionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListAppSessionsInterceptors() ?? []
    )
  }

  internal func createAppSession(
    _ request: Proto_CreateAppSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_CreateAppSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAppSessionInterceptors() ?? []
    )
  }

  internal func deleteAppSession(
    _ request: Proto_DeleteAppSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAppSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAppSessionInterceptors() ?? []
    )
  }

  internal func deleteAllAppSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllAppSessionsInterceptors() ?? []
    )
  }

  internal func deleteUserAppSessions(
    _ request: Proto_DeleteUserAppSessionsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserAppSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserAppSessionsInterceptors() ?? []
    )
  }

  internal func createSnowflakeSession(
    _ request: Proto_CreateSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_CreateSnowflakeSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSnowflakeSessionInterceptors() ?? []
    )
  }

  internal func getSnowflakeSession(
    _ request: Proto_GetSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetSnowflakeSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSnowflakeSessionInterceptors() ?? []
    )
  }

  internal func getSnowflakeSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetSnowflakeSessionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSnowflakeSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSnowflakeSessionsInterceptors() ?? []
    )
  }

  internal func deleteSnowflakeSession(
    _ request: Proto_DeleteSnowflakeSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSnowflakeSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSnowflakeSessionInterceptors() ?? []
    )
  }

  internal func deleteAllSnowflakeSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSnowflakeSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSnowflakeSessionsInterceptors() ?? []
    )
  }

  internal func createSAMLIdPSession(
    _ request: Proto_CreateSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_CreateSAMLIdPSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLIdPSessionInterceptors() ?? []
    )
  }

  internal func getSAMLIdPSession(
    _ request: Proto_GetSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetSAMLIdPSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLIdPSessionInterceptors() ?? []
    )
  }

  internal func listSAMLIdPSessions(
    _ request: Proto_ListSAMLIdPSessionsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListSAMLIdPSessionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListSAMLIdPSessionsInterceptors() ?? []
    )
  }

  internal func deleteSAMLIdPSession(
    _ request: Proto_DeleteSAMLIdPSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLIdPSessionInterceptors() ?? []
    )
  }

  internal func deleteAllSAMLIdPSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSAMLIdPSessionsInterceptors() ?? []
    )
  }

  internal func deleteUserSAMLIdPSessions(
    _ request: Proto_DeleteUserSAMLIdPSessionsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserSAMLIdPSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserSAMLIdPSessionsInterceptors() ?? []
    )
  }

  internal func getWebSession(
    _ request: Types_GetWebSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWebSessionResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebSessionInterceptors() ?? []
    )
  }

  internal func getWebSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWebSessionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebSessionsInterceptors() ?? []
    )
  }

  internal func deleteWebSession(
    _ request: Types_DeleteWebSessionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWebSession.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWebSessionInterceptors() ?? []
    )
  }

  internal func deleteAllWebSessions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWebSessions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWebSessionsInterceptors() ?? []
    )
  }

  internal func getWebToken(
    _ request: Types_GetWebTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWebTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebTokenInterceptors() ?? []
    )
  }

  internal func getWebTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWebTokensResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWebTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWebTokensInterceptors() ?? []
    )
  }

  internal func deleteWebToken(
    _ request: Types_DeleteWebTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWebToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWebTokenInterceptors() ?? []
    )
  }

  internal func deleteAllWebTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWebTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWebTokensInterceptors() ?? []
    )
  }

  internal func updateRemoteCluster(
    _ request: Types_RemoteClusterV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateRemoteCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRemoteClusterInterceptors() ?? []
    )
  }

  internal func upsertKubernetesServer(
    _ request: Proto_UpsertKubernetesServerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KeepAlive {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertKubernetesServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertKubernetesServerInterceptors() ?? []
    )
  }

  internal func deleteKubernetesServer(
    _ request: Proto_DeleteKubernetesServerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteKubernetesServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKubernetesServerInterceptors() ?? []
    )
  }

  internal func deleteAllKubernetesServers(
    _ request: Proto_DeleteAllKubernetesServersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllKubernetesServersInterceptors() ?? []
    )
  }

  internal func upsertDatabaseServer(
    _ request: Proto_UpsertDatabaseServerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KeepAlive {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertDatabaseServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDatabaseServerInterceptors() ?? []
    )
  }

  internal func deleteDatabaseServer(
    _ request: Proto_DeleteDatabaseServerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabaseServer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseServerInterceptors() ?? []
    )
  }

  internal func deleteAllDatabaseServers(
    _ request: Proto_DeleteAllDatabaseServersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabaseServersInterceptors() ?? []
    )
  }

  internal func upsertDatabaseService(
    _ request: Proto_UpsertDatabaseServiceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KeepAlive {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertDatabaseService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDatabaseServiceInterceptors() ?? []
    )
  }

  internal func deleteDatabaseService(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabaseService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseServiceInterceptors() ?? []
    )
  }

  internal func deleteAllDatabaseServices(
    _ request: Proto_DeleteAllDatabaseServicesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabaseServicesInterceptors() ?? []
    )
  }

  internal func signDatabaseCSR(
    _ request: Proto_DatabaseCSRRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_DatabaseCSRResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.signDatabaseCSR.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSignDatabaseCSRInterceptors() ?? []
    )
  }

  internal func generateDatabaseCert(
    _ request: Proto_DatabaseCertRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_DatabaseCertResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateDatabaseCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateDatabaseCertInterceptors() ?? []
    )
  }

  internal func generateSnowflakeJWT(
    _ request: Proto_SnowflakeJWTRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_SnowflakeJWTResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateSnowflakeJWT.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateSnowflakeJWTInterceptors() ?? []
    )
  }

  internal func getRole(
    _ request: Proto_GetRoleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_RoleV6 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRoleInterceptors() ?? []
    )
  }

  internal func getRoles(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetRolesResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getRoles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRolesInterceptors() ?? []
    )
  }

  internal func createRole(
    _ request: Proto_CreateRoleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_RoleV6 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRoleInterceptors() ?? []
    )
  }

  internal func updateRole(
    _ request: Proto_UpdateRoleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_RoleV6 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRoleInterceptors() ?? []
    )
  }

  internal func upsertRoleV2(
    _ request: Proto_UpsertRoleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_RoleV6 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertRoleV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertRoleV2Interceptors() ?? []
    )
  }

  internal func upsertRole(
    _ request: Types_RoleV6,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertRoleInterceptors() ?? []
    )
  }

  internal func deleteRole(
    _ request: Proto_DeleteRoleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteRole.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteRoleInterceptors() ?? []
    )
  }

  internal func addMFADevice<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_AddMFADeviceResponse> where RequestStream: Sequence, RequestStream.Element == Proto_AddMFADeviceRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADevice.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceInterceptors() ?? []
    )
  }

  internal func addMFADevice<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_AddMFADeviceResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Proto_AddMFADeviceRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADevice.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceInterceptors() ?? []
    )
  }

  internal func deleteMFADevice<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_DeleteMFADeviceResponse> where RequestStream: Sequence, RequestStream.Element == Proto_DeleteMFADeviceRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADevice.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceInterceptors() ?? []
    )
  }

  internal func deleteMFADevice<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_DeleteMFADeviceResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Proto_DeleteMFADeviceRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADevice.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceInterceptors() ?? []
    )
  }

  internal func addMFADeviceSync(
    _ request: Proto_AddMFADeviceSyncRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_AddMFADeviceSyncResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.addMFADeviceSync.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddMFADeviceSyncInterceptors() ?? []
    )
  }

  internal func deleteMFADeviceSync(
    _ request: Proto_DeleteMFADeviceSyncRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteMFADeviceSync.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMFADeviceSyncInterceptors() ?? []
    )
  }

  internal func getMFADevices(
    _ request: Proto_GetMFADevicesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetMFADevicesResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getMFADevices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMFADevicesInterceptors() ?? []
    )
  }

  internal func createAuthenticateChallenge(
    _ request: Proto_CreateAuthenticateChallengeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_MFAAuthenticateChallenge {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAuthenticateChallenge.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAuthenticateChallengeInterceptors() ?? []
    )
  }

  internal func createRegisterChallenge(
    _ request: Proto_CreateRegisterChallengeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_MFARegisterChallenge {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createRegisterChallenge.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRegisterChallengeInterceptors() ?? []
    )
  }

  internal func getOIDCConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCConnectorInterceptors() ?? []
    )
  }

  internal func getOIDCConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCConnectorV3List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCConnectorsInterceptors() ?? []
    )
  }

  internal func createOIDCConnector(
    _ request: Proto_CreateOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOIDCConnectorInterceptors() ?? []
    )
  }

  internal func updateOIDCConnector(
    _ request: Proto_UpdateOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateOIDCConnectorInterceptors() ?? []
    )
  }

  internal func upsertOIDCConnector(
    _ request: Types_OIDCConnectorV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertOIDCConnectorInterceptors() ?? []
    )
  }

  internal func upsertOIDCConnectorV2(
    _ request: Proto_UpsertOIDCConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertOIDCConnectorV2Interceptors() ?? []
    )
  }

  internal func deleteOIDCConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteOIDCConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteOIDCConnectorInterceptors() ?? []
    )
  }

  internal func createOIDCAuthRequest(
    _ request: Types_OIDCAuthRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCAuthRequest {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createOIDCAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOIDCAuthRequestInterceptors() ?? []
    )
  }

  internal func getOIDCAuthRequest(
    _ request: Proto_GetOIDCAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_OIDCAuthRequest {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getOIDCAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOIDCAuthRequestInterceptors() ?? []
    )
  }

  internal func getSAMLConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLConnectorV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLConnectorInterceptors() ?? []
    )
  }

  internal func getSAMLConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLConnectorV2List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLConnectorsInterceptors() ?? []
    )
  }

  internal func createSAMLConnector(
    _ request: Proto_CreateSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLConnectorV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLConnectorInterceptors() ?? []
    )
  }

  internal func updateSAMLConnector(
    _ request: Proto_UpdateSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLConnectorV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSAMLConnectorInterceptors() ?? []
    )
  }

  internal func upsertSAMLConnector(
    _ request: Types_SAMLConnectorV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertSAMLConnectorInterceptors() ?? []
    )
  }

  internal func upsertSAMLConnectorV2(
    _ request: Proto_UpsertSAMLConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLConnectorV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertSAMLConnectorV2Interceptors() ?? []
    )
  }

  internal func deleteSAMLConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLConnectorInterceptors() ?? []
    )
  }

  internal func createSAMLAuthRequest(
    _ request: Types_SAMLAuthRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLAuthRequest {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLAuthRequestInterceptors() ?? []
    )
  }

  internal func getSAMLAuthRequest(
    _ request: Proto_GetSAMLAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLAuthRequest {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLAuthRequestInterceptors() ?? []
    )
  }

  internal func getGithubConnector(
    _ request: Types_ResourceWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubConnectorInterceptors() ?? []
    )
  }

  internal func getGithubConnectors(
    _ request: Types_ResourcesWithSecretsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubConnectorV3List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubConnectors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubConnectorsInterceptors() ?? []
    )
  }

  internal func createGithubConnector(
    _ request: Proto_CreateGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateGithubConnectorInterceptors() ?? []
    )
  }

  internal func updateGithubConnector(
    _ request: Proto_UpdateGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateGithubConnectorInterceptors() ?? []
    )
  }

  internal func upsertGithubConnector(
    _ request: Types_GithubConnectorV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertGithubConnectorInterceptors() ?? []
    )
  }

  internal func upsertGithubConnectorV2(
    _ request: Proto_UpsertGithubConnectorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubConnectorV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertGithubConnectorV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertGithubConnectorV2Interceptors() ?? []
    )
  }

  internal func deleteGithubConnector(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteGithubConnector.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteGithubConnectorInterceptors() ?? []
    )
  }

  internal func createGithubAuthRequest(
    _ request: Types_GithubAuthRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubAuthRequest {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createGithubAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateGithubAuthRequestInterceptors() ?? []
    )
  }

  internal func getGithubAuthRequest(
    _ request: Proto_GetGithubAuthRequestRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_GithubAuthRequest {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getGithubAuthRequest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGithubAuthRequestInterceptors() ?? []
    )
  }

  internal func getSSODiagnosticInfo(
    _ request: Proto_GetSSODiagnosticInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SSODiagnosticInfo {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSSODiagnosticInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSSODiagnosticInfoInterceptors() ?? []
    )
  }

  internal func getServerInfos(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Types_ServerInfoV1> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.getServerInfos.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetServerInfosInterceptors() ?? []
    )
  }

  internal func getServerInfo(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ServerInfoV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetServerInfoInterceptors() ?? []
    )
  }

  internal func upsertServerInfo(
    _ request: Types_ServerInfoV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertServerInfoInterceptors() ?? []
    )
  }

  internal func deleteServerInfo(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteServerInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteServerInfoInterceptors() ?? []
    )
  }

  internal func deleteAllServerInfos(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllServerInfos.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllServerInfosInterceptors() ?? []
    )
  }

  internal func getTrustedCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_TrustedClusterV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrustedClusterInterceptors() ?? []
    )
  }

  internal func getTrustedClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_TrustedClusterV2List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTrustedClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrustedClustersInterceptors() ?? []
    )
  }

  internal func upsertTrustedCluster(
    _ request: Types_TrustedClusterV2,
    callOptions: CallOptions? = nil
  ) async throws -> Types_TrustedClusterV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertTrustedClusterInterceptors() ?? []
    )
  }

  internal func deleteTrustedCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteTrustedCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTrustedClusterInterceptors() ?? []
    )
  }

  internal func getToken(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ProvisionTokenV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTokenInterceptors() ?? []
    )
  }

  internal func getTokens(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ProvisionTokenV2List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTokensInterceptors() ?? []
    )
  }

  internal func createTokenV2(
    _ request: Proto_CreateTokenV2Request,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createTokenV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTokenV2Interceptors() ?? []
    )
  }

  internal func upsertTokenV2(
    _ request: Proto_UpsertTokenV2Request,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertTokenV2.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertTokenV2Interceptors() ?? []
    )
  }

  internal func deleteToken(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTokenInterceptors() ?? []
    )
  }

  internal func getClusterAuditConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ClusterAuditConfigV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterAuditConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterAuditConfigInterceptors() ?? []
    )
  }

  internal func getClusterNetworkingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ClusterNetworkingConfigV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  internal func setClusterNetworkingConfig(
    _ request: Types_ClusterNetworkingConfigV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  internal func resetClusterNetworkingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetClusterNetworkingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetClusterNetworkingConfigInterceptors() ?? []
    )
  }

  internal func getSessionRecordingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SessionRecordingConfigV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionRecordingConfigInterceptors() ?? []
    )
  }

  internal func setSessionRecordingConfig(
    _ request: Types_SessionRecordingConfigV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetSessionRecordingConfigInterceptors() ?? []
    )
  }

  internal func resetSessionRecordingConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetSessionRecordingConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetSessionRecordingConfigInterceptors() ?? []
    )
  }

  internal func getAuthPreference(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_AuthPreferenceV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAuthPreferenceInterceptors() ?? []
    )
  }

  internal func setAuthPreference(
    _ request: Types_AuthPreferenceV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetAuthPreferenceInterceptors() ?? []
    )
  }

  internal func resetAuthPreference(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.resetAuthPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetAuthPreferenceInterceptors() ?? []
    )
  }

  internal func getUIConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UIConfigV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUIConfigInterceptors() ?? []
    )
  }

  internal func setUIConfig(
    _ request: Types_UIConfigV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetUIConfigInterceptors() ?? []
    )
  }

  internal func deleteUIConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUIConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUIConfigInterceptors() ?? []
    )
  }

  internal func getEvents(
    _ request: Proto_GetEventsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Events {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsInterceptors() ?? []
    )
  }

  internal func getSessionEvents(
    _ request: Proto_GetSessionEventsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Events {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSessionEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSessionEventsInterceptors() ?? []
    )
  }

  internal func getLock(
    _ request: Proto_GetLockRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_LockV2 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLockInterceptors() ?? []
    )
  }

  internal func getLocks(
    _ request: Proto_GetLocksRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetLocksResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLocks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLocksInterceptors() ?? []
    )
  }

  internal func upsertLock(
    _ request: Types_LockV2,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertLockInterceptors() ?? []
    )
  }

  internal func deleteLock(
    _ request: Proto_DeleteLockRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteLock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLockInterceptors() ?? []
    )
  }

  internal func replaceRemoteLocks(
    _ request: Proto_ReplaceRemoteLocksRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.replaceRemoteLocks.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReplaceRemoteLocksInterceptors() ?? []
    )
  }

  internal func streamSessionEvents(
    _ request: Proto_StreamSessionEventsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Events_OneOf> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.streamSessionEvents.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamSessionEventsInterceptors() ?? []
    )
  }

  internal func getNetworkRestrictions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_NetworkRestrictionsV4 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkRestrictionsInterceptors() ?? []
    )
  }

  internal func setNetworkRestrictions(
    _ request: Types_NetworkRestrictionsV4,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNetworkRestrictionsInterceptors() ?? []
    )
  }

  internal func deleteNetworkRestrictions(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteNetworkRestrictions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNetworkRestrictionsInterceptors() ?? []
    )
  }

  internal func getApps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_AppV3List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppsInterceptors() ?? []
    )
  }

  internal func getApp(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_AppV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAppInterceptors() ?? []
    )
  }

  internal func createApp(
    _ request: Types_AppV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAppInterceptors() ?? []
    )
  }

  internal func updateApp(
    _ request: Types_AppV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAppInterceptors() ?? []
    )
  }

  internal func deleteApp(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteApp.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAppInterceptors() ?? []
    )
  }

  internal func deleteAllApps(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllApps.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllAppsInterceptors() ?? []
    )
  }

  internal func getDatabases(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_DatabaseV3List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDatabases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDatabasesInterceptors() ?? []
    )
  }

  internal func getDatabase(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_DatabaseV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDatabaseInterceptors() ?? []
    )
  }

  internal func createDatabase(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDatabaseInterceptors() ?? []
    )
  }

  internal func updateDatabase(
    _ request: Types_DatabaseV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDatabaseInterceptors() ?? []
    )
  }

  internal func deleteDatabase(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteDatabase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDatabaseInterceptors() ?? []
    )
  }

  internal func deleteAllDatabases(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllDatabases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllDatabasesInterceptors() ?? []
    )
  }

  internal func getKubernetesClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KubernetesClusterV3List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getKubernetesClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKubernetesClustersInterceptors() ?? []
    )
  }

  internal func getKubernetesCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KubernetesClusterV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKubernetesClusterInterceptors() ?? []
    )
  }

  internal func createKubernetesCluster(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateKubernetesClusterInterceptors() ?? []
    )
  }

  internal func updateKubernetesCluster(
    _ request: Types_KubernetesClusterV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateKubernetesClusterInterceptors() ?? []
    )
  }

  internal func deleteKubernetesCluster(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteKubernetesCluster.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKubernetesClusterInterceptors() ?? []
    )
  }

  internal func deleteAllKubernetesClusters(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesClusters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllKubernetesClustersInterceptors() ?? []
    )
  }

  internal func getWindowsDesktopServices(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWindowsDesktopServicesResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopServicesInterceptors() ?? []
    )
  }

  internal func getWindowsDesktopService(
    _ request: Proto_GetWindowsDesktopServiceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWindowsDesktopServiceResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopServiceInterceptors() ?? []
    )
  }

  internal func upsertWindowsDesktopService(
    _ request: Types_WindowsDesktopServiceV3,
    callOptions: CallOptions? = nil
  ) async throws -> Types_KeepAlive {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertWindowsDesktopServiceInterceptors() ?? []
    )
  }

  internal func deleteWindowsDesktopService(
    _ request: Proto_DeleteWindowsDesktopServiceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktopService.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWindowsDesktopServiceInterceptors() ?? []
    )
  }

  internal func deleteAllWindowsDesktopServices(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktopServices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWindowsDesktopServicesInterceptors() ?? []
    )
  }

  internal func getWindowsDesktops(
    _ request: Types_WindowsDesktopFilter,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetWindowsDesktopsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getWindowsDesktops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWindowsDesktopsInterceptors() ?? []
    )
  }

  internal func createWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateWindowsDesktopInterceptors() ?? []
    )
  }

  internal func updateWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateWindowsDesktopInterceptors() ?? []
    )
  }

  internal func upsertWindowsDesktop(
    _ request: Types_WindowsDesktopV3,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertWindowsDesktopInterceptors() ?? []
    )
  }

  internal func deleteWindowsDesktop(
    _ request: Proto_DeleteWindowsDesktopRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWindowsDesktopInterceptors() ?? []
    )
  }

  internal func deleteAllWindowsDesktops(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllWindowsDesktopsInterceptors() ?? []
    )
  }

  internal func generateWindowsDesktopCert(
    _ request: Proto_WindowsDesktopCertRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_WindowsDesktopCertResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateWindowsDesktopCert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateWindowsDesktopCertInterceptors() ?? []
    )
  }

  internal func generateCertAuthorityCRL(
    _ request: Proto_CertAuthorityRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_CRL {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.generateCertAuthorityCRL.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateCertAuthorityCRLInterceptors() ?? []
    )
  }

  internal func createConnectionDiagnostic(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateConnectionDiagnosticInterceptors() ?? []
    )
  }

  internal func updateConnectionDiagnostic(
    _ request: Types_ConnectionDiagnosticV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateConnectionDiagnosticInterceptors() ?? []
    )
  }

  internal func getConnectionDiagnostic(
    _ request: Proto_GetConnectionDiagnosticRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ConnectionDiagnosticV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getConnectionDiagnostic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConnectionDiagnosticInterceptors() ?? []
    )
  }

  internal func appendDiagnosticTrace(
    _ request: Proto_AppendDiagnosticTraceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ConnectionDiagnosticV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.appendDiagnosticTrace.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAppendDiagnosticTraceInterceptors() ?? []
    )
  }

  internal func changeUserAuthentication(
    _ request: Proto_ChangeUserAuthenticationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ChangeUserAuthenticationResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.changeUserAuthentication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangeUserAuthenticationInterceptors() ?? []
    )
  }

  internal func startAccountRecovery(
    _ request: Proto_StartAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserTokenV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.startAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartAccountRecoveryInterceptors() ?? []
    )
  }

  internal func verifyAccountRecovery(
    _ request: Proto_VerifyAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserTokenV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.verifyAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyAccountRecoveryInterceptors() ?? []
    )
  }

  internal func completeAccountRecovery(
    _ request: Proto_CompleteAccountRecoveryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.completeAccountRecovery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompleteAccountRecoveryInterceptors() ?? []
    )
  }

  internal func createAccountRecoveryCodes(
    _ request: Proto_CreateAccountRecoveryCodesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_RecoveryCodes {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createAccountRecoveryCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccountRecoveryCodesInterceptors() ?? []
    )
  }

  internal func getAccountRecoveryToken(
    _ request: Proto_GetAccountRecoveryTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserTokenV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountRecoveryTokenInterceptors() ?? []
    )
  }

  internal func getAccountRecoveryCodes(
    _ request: Proto_GetAccountRecoveryCodesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_RecoveryCodes {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountRecoveryCodesInterceptors() ?? []
    )
  }

  internal func createPrivilegeToken(
    _ request: Proto_CreatePrivilegeTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserTokenV3 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createPrivilegeToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePrivilegeTokenInterceptors() ?? []
    )
  }

  internal func getInstaller(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_InstallerV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstallerInterceptors() ?? []
    )
  }

  internal func getInstallers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_InstallerV1List {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getInstallers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstallersInterceptors() ?? []
    )
  }

  internal func setInstaller(
    _ request: Types_InstallerV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.setInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInstallerInterceptors() ?? []
    )
  }

  internal func deleteInstaller(
    _ request: Types_ResourceRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteInstaller.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteInstallerInterceptors() ?? []
    )
  }

  internal func deleteAllInstallers(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllInstallers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllInstallersInterceptors() ?? []
    )
  }

  internal func listResources(
    _ request: Proto_ListResourcesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListResourcesResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListResourcesInterceptors() ?? []
    )
  }

  internal func listUnifiedResources(
    _ request: Proto_ListUnifiedResourcesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListUnifiedResourcesResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listUnifiedResources.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListUnifiedResourcesInterceptors() ?? []
    )
  }

  internal func getSSHTargets(
    _ request: Proto_GetSSHTargetsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetSSHTargetsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSSHTargets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSSHTargetsInterceptors() ?? []
    )
  }

  internal func getDomainName(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetDomainNameResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getDomainName.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDomainNameInterceptors() ?? []
    )
  }

  internal func getClusterCACert(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetClusterCACertResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterCACert.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterCACertInterceptors() ?? []
    )
  }

  internal func submitUsageEvent(
    _ request: Proto_SubmitUsageEventRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.submitUsageEvent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubmitUsageEventInterceptors() ?? []
    )
  }

  internal func getLicense(
    _ request: Proto_GetLicenseRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_GetLicenseResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getLicense.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLicenseInterceptors() ?? []
    )
  }

  internal func listReleases(
    _ request: Proto_ListReleasesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListReleasesResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listReleases.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListReleasesInterceptors() ?? []
    )
  }

  internal func listSAMLIdPServiceProviders(
    _ request: Proto_ListSAMLIdPServiceProvidersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListSAMLIdPServiceProvidersResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listSAMLIdPServiceProviders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListSAMLIdPServiceProvidersInterceptors() ?? []
    )
  }

  internal func getSAMLIdPServiceProvider(
    _ request: Proto_GetSAMLIdPServiceProviderRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_SAMLIdPServiceProviderV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func createSAMLIdPServiceProvider(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func updateSAMLIdPServiceProvider(
    _ request: Types_SAMLIdPServiceProviderV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func deleteSAMLIdPServiceProvider(
    _ request: Proto_DeleteSAMLIdPServiceProviderRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPServiceProvider.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteSAMLIdPServiceProviderInterceptors() ?? []
    )
  }

  internal func deleteAllSAMLIdPServiceProviders(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPServiceProviders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllSAMLIdPServiceProvidersInterceptors() ?? []
    )
  }

  internal func listUserGroups(
    _ request: Proto_ListUserGroupsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ListUserGroupsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.listUserGroups.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListUserGroupsInterceptors() ?? []
    )
  }

  internal func getUserGroup(
    _ request: Proto_GetUserGroupRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_UserGroupV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserGroupInterceptors() ?? []
    )
  }

  internal func createUserGroup(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.createUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserGroupInterceptors() ?? []
    )
  }

  internal func updateUserGroup(
    _ request: Types_UserGroupV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUserGroupInterceptors() ?? []
    )
  }

  internal func deleteUserGroup(
    _ request: Proto_DeleteUserGroupRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteUserGroup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserGroupInterceptors() ?? []
    )
  }

  internal func deleteAllUserGroups(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteAllUserGroups.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAllUserGroupsInterceptors() ?? []
    )
  }

  internal func getHeadlessAuthentication(
    _ request: Proto_GetHeadlessAuthenticationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Types_HeadlessAuthentication {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getHeadlessAuthentication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetHeadlessAuthenticationInterceptors() ?? []
    )
  }

  internal func watchPendingHeadlessAuthentications(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Proto_Event> {
    return self.performAsyncServerStreamingCall(
      path: Proto_AuthServiceClientMetadata.Methods.watchPendingHeadlessAuthentications.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWatchPendingHeadlessAuthenticationsInterceptors() ?? []
    )
  }

  internal func updateHeadlessAuthenticationState(
    _ request: Proto_UpdateHeadlessAuthenticationStateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateHeadlessAuthenticationState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateHeadlessAuthenticationStateInterceptors() ?? []
    )
  }

  internal func exportUpgradeWindows(
    _ request: Proto_ExportUpgradeWindowsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_ExportUpgradeWindowsResponse {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.exportUpgradeWindows.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportUpgradeWindowsInterceptors() ?? []
    )
  }

  internal func getClusterMaintenanceConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Types_ClusterMaintenanceConfigV1 {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.getClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClusterMaintenanceConfigInterceptors() ?? []
    )
  }

  internal func updateClusterMaintenanceConfig(
    _ request: Types_ClusterMaintenanceConfigV1,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.updateClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateClusterMaintenanceConfigInterceptors() ?? []
    )
  }

  internal func deleteClusterMaintenanceConfig(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Proto_AuthServiceClientMetadata.Methods.deleteClusterMaintenanceConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteClusterMaintenanceConfigInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Proto_AuthServiceAsyncClient: Proto_AuthServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Proto_AuthServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Proto_AuthServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'inventoryControlStream'.
  func makeInventoryControlStreamInterceptors() -> [ClientInterceptor<Proto_UpstreamInventoryOneOf, Proto_DownstreamInventoryOneOf>]

  /// - Returns: Interceptors to use when invoking 'getInventoryStatus'.
  func makeGetInventoryStatusInterceptors() -> [ClientInterceptor<Proto_InventoryStatusRequest, Proto_InventoryStatusSummary>]

  /// - Returns: Interceptors to use when invoking 'getInventoryConnectedServiceCounts'.
  func makeGetInventoryConnectedServiceCountsInterceptors() -> [ClientInterceptor<Proto_InventoryConnectedServiceCountsRequest, Proto_InventoryConnectedServiceCounts>]

  /// - Returns: Interceptors to use when invoking 'pingInventory'.
  func makePingInventoryInterceptors() -> [ClientInterceptor<Proto_InventoryPingRequest, Proto_InventoryPingResponse>]

  /// - Returns: Interceptors to use when invoking 'getInstances'.
  func makeGetInstancesInterceptors() -> [ClientInterceptor<Types_InstanceFilter, Types_InstanceV1>]

  /// - Returns: Interceptors to use when invoking 'getClusterAlerts'.
  func makeGetClusterAlertsInterceptors() -> [ClientInterceptor<Types_GetClusterAlertsRequest, Proto_GetClusterAlertsResponse>]

  /// - Returns: Interceptors to use when invoking 'upsertClusterAlert'.
  func makeUpsertClusterAlertInterceptors() -> [ClientInterceptor<Proto_UpsertClusterAlertRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createAlertAck'.
  func makeCreateAlertAckInterceptors() -> [ClientInterceptor<Types_AlertAcknowledgement, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getAlertAcks'.
  func makeGetAlertAcksInterceptors() -> [ClientInterceptor<Proto_GetAlertAcksRequest, Proto_GetAlertAcksResponse>]

  /// - Returns: Interceptors to use when invoking 'clearAlertAcks'.
  func makeClearAlertAcksInterceptors() -> [ClientInterceptor<Proto_ClearAlertAcksRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'maintainSessionPresence'.
  func makeMaintainSessionPresenceInterceptors() -> [ClientInterceptor<Proto_PresenceMFAChallengeSend, Proto_MFAAuthenticateChallenge>]

  /// - Returns: Interceptors to use when invoking 'createSessionTracker'.
  func makeCreateSessionTrackerInterceptors() -> [ClientInterceptor<Proto_CreateSessionTrackerRequest, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when invoking 'getSessionTracker'.
  func makeGetSessionTrackerInterceptors() -> [ClientInterceptor<Proto_GetSessionTrackerRequest, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when invoking 'getActiveSessionTrackers'.
  func makeGetActiveSessionTrackersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when invoking 'getActiveSessionTrackersWithFilter'.
  func makeGetActiveSessionTrackersWithFilterInterceptors() -> [ClientInterceptor<Types_SessionTrackerFilter, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when invoking 'removeSessionTracker'.
  func makeRemoveSessionTrackerInterceptors() -> [ClientInterceptor<Proto_RemoveSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateSessionTracker'.
  func makeUpdateSessionTrackerInterceptors() -> [ClientInterceptor<Proto_UpdateSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'sendKeepAlives'.
  func makeSendKeepAlivesInterceptors() -> [ClientInterceptor<Types_KeepAlive, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'watchEvents'.
  func makeWatchEventsInterceptors() -> [ClientInterceptor<Proto_Watch, Proto_Event>]

  /// - Returns: Interceptors to use when invoking 'getNode'.
  func makeGetNodeInterceptors() -> [ClientInterceptor<Types_ResourceInNamespaceRequest, Types_ServerV2>]

  /// - Returns: Interceptors to use when invoking 'upsertNode'.
  func makeUpsertNodeInterceptors() -> [ClientInterceptor<Types_ServerV2, Types_KeepAlive>]

  /// - Returns: Interceptors to use when invoking 'deleteNode'.
  func makeDeleteNodeInterceptors() -> [ClientInterceptor<Types_ResourceInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllNodes'.
  func makeDeleteAllNodesInterceptors() -> [ClientInterceptor<Types_ResourcesInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'generateUserCerts'.
  func makeGenerateUserCertsInterceptors() -> [ClientInterceptor<Proto_UserCertsRequest, Proto_Certs>]

  /// - Returns: Interceptors to use when invoking 'generateHostCerts'.
  func makeGenerateHostCertsInterceptors() -> [ClientInterceptor<Proto_HostCertsRequest, Proto_Certs>]

  /// - Returns: Interceptors to use when invoking 'generateUserSingleUseCerts'.
  func makeGenerateUserSingleUseCertsInterceptors() -> [ClientInterceptor<Proto_UserSingleUseCertsRequest, Proto_UserSingleUseCertsResponse>]

  /// - Returns: Interceptors to use when invoking 'generateOpenSSHCert'.
  func makeGenerateOpenSSHCertInterceptors() -> [ClientInterceptor<Proto_OpenSSHCertRequest, Proto_OpenSSHCert>]

  /// - Returns: Interceptors to use when invoking 'isMFARequired'.
  func makeIsMFARequiredInterceptors() -> [ClientInterceptor<Proto_IsMFARequiredRequest, Proto_IsMFARequiredResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccessRequestsV2'.
  func makeGetAccessRequestsV2Interceptors() -> [ClientInterceptor<Types_AccessRequestFilter, Types_AccessRequestV3>]

  /// - Returns: Interceptors to use when invoking 'createAccessRequest'.
  func makeCreateAccessRequestInterceptors() -> [ClientInterceptor<Types_AccessRequestV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createAccessRequestV2'.
  func makeCreateAccessRequestV2Interceptors() -> [ClientInterceptor<Types_AccessRequestV3, Types_AccessRequestV3>]

  /// - Returns: Interceptors to use when invoking 'deleteAccessRequest'.
  func makeDeleteAccessRequestInterceptors() -> [ClientInterceptor<Proto_RequestID, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'setAccessRequestState'.
  func makeSetAccessRequestStateInterceptors() -> [ClientInterceptor<Proto_RequestStateSetter, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'submitAccessReview'.
  func makeSubmitAccessReviewInterceptors() -> [ClientInterceptor<Types_AccessReviewSubmission, Types_AccessRequestV3>]

  /// - Returns: Interceptors to use when invoking 'getAccessCapabilities'.
  func makeGetAccessCapabilitiesInterceptors() -> [ClientInterceptor<Types_AccessCapabilitiesRequest, Types_AccessCapabilities>]

  /// - Returns: Interceptors to use when invoking 'getAccessRequestAllowedPromotions'.
  func makeGetAccessRequestAllowedPromotionsInterceptors() -> [ClientInterceptor<Proto_AccessRequestAllowedPromotionRequest, Proto_AccessRequestAllowedPromotionResponse>]

  /// - Returns: Interceptors to use when invoking 'getPluginData'.
  func makeGetPluginDataInterceptors() -> [ClientInterceptor<Types_PluginDataFilter, Proto_PluginDataSeq>]

  /// - Returns: Interceptors to use when invoking 'updatePluginData'.
  func makeUpdatePluginDataInterceptors() -> [ClientInterceptor<Types_PluginDataUpdateParams, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'ping'.
  func makePingInterceptors() -> [ClientInterceptor<Proto_PingRequest, Proto_PingResponse>]

  /// - Returns: Interceptors to use when invoking 'getResetPasswordToken'.
  func makeGetResetPasswordTokenInterceptors() -> [ClientInterceptor<Proto_GetResetPasswordTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when invoking 'createResetPasswordToken'.
  func makeCreateResetPasswordTokenInterceptors() -> [ClientInterceptor<Proto_CreateResetPasswordTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when invoking 'createBot'.
  func makeCreateBotInterceptors() -> [ClientInterceptor<Proto_CreateBotRequest, Proto_CreateBotResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteBot'.
  func makeDeleteBotInterceptors() -> [ClientInterceptor<Proto_DeleteBotRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getBotUsers'.
  func makeGetBotUsersInterceptors() -> [ClientInterceptor<Proto_GetBotUsersRequest, Types_UserV2>]

  /// - Returns: Interceptors to use when invoking 'getUser'.
  func makeGetUserInterceptors() -> [ClientInterceptor<Proto_GetUserRequest, Types_UserV2>]

  /// - Returns: Interceptors to use when invoking 'getCurrentUser'.
  func makeGetCurrentUserInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_UserV2>]

  /// - Returns: Interceptors to use when invoking 'getCurrentUserRoles'.
  func makeGetCurrentUserRolesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_RoleV6>]

  /// - Returns: Interceptors to use when invoking 'getUsers'.
  func makeGetUsersInterceptors() -> [ClientInterceptor<Proto_GetUsersRequest, Types_UserV2>]

  /// - Returns: Interceptors to use when invoking 'createUser'.
  func makeCreateUserInterceptors() -> [ClientInterceptor<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateUser'.
  func makeUpdateUserInterceptors() -> [ClientInterceptor<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteUser'.
  func makeDeleteUserInterceptors() -> [ClientInterceptor<Proto_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'changePassword'.
  func makeChangePasswordInterceptors() -> [ClientInterceptor<Proto_ChangePasswordRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'acquireSemaphore'.
  func makeAcquireSemaphoreInterceptors() -> [ClientInterceptor<Types_AcquireSemaphoreRequest, Types_SemaphoreLease>]

  /// - Returns: Interceptors to use when invoking 'keepAliveSemaphoreLease'.
  func makeKeepAliveSemaphoreLeaseInterceptors() -> [ClientInterceptor<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'cancelSemaphoreLease'.
  func makeCancelSemaphoreLeaseInterceptors() -> [ClientInterceptor<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getSemaphores'.
  func makeGetSemaphoresInterceptors() -> [ClientInterceptor<Types_SemaphoreFilter, Proto_Semaphores>]

  /// - Returns: Interceptors to use when invoking 'deleteSemaphore'.
  func makeDeleteSemaphoreInterceptors() -> [ClientInterceptor<Types_SemaphoreFilter, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'emitAuditEvent'.
  func makeEmitAuditEventInterceptors() -> [ClientInterceptor<Events_OneOf, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createAuditStream'.
  func makeCreateAuditStreamInterceptors() -> [ClientInterceptor<Proto_AuditStreamRequest, Events_StreamStatus>]

  /// - Returns: Interceptors to use when invoking 'upsertApplicationServer'.
  func makeUpsertApplicationServerInterceptors() -> [ClientInterceptor<Proto_UpsertApplicationServerRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when invoking 'deleteApplicationServer'.
  func makeDeleteApplicationServerInterceptors() -> [ClientInterceptor<Proto_DeleteApplicationServerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllApplicationServers'.
  func makeDeleteAllApplicationServersInterceptors() -> [ClientInterceptor<Proto_DeleteAllApplicationServersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'generateAppToken'.
  func makeGenerateAppTokenInterceptors() -> [ClientInterceptor<Proto_GenerateAppTokenRequest, Proto_GenerateAppTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'getAppSession'.
  func makeGetAppSessionInterceptors() -> [ClientInterceptor<Proto_GetAppSessionRequest, Proto_GetAppSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'listAppSessions'.
  func makeListAppSessionsInterceptors() -> [ClientInterceptor<Proto_ListAppSessionsRequest, Proto_ListAppSessionsResponse>]

  /// - Returns: Interceptors to use when invoking 'createAppSession'.
  func makeCreateAppSessionInterceptors() -> [ClientInterceptor<Proto_CreateAppSessionRequest, Proto_CreateAppSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteAppSession'.
  func makeDeleteAppSessionInterceptors() -> [ClientInterceptor<Proto_DeleteAppSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllAppSessions'.
  func makeDeleteAllAppSessionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteUserAppSessions'.
  func makeDeleteUserAppSessionsInterceptors() -> [ClientInterceptor<Proto_DeleteUserAppSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createSnowflakeSession'.
  func makeCreateSnowflakeSessionInterceptors() -> [ClientInterceptor<Proto_CreateSnowflakeSessionRequest, Proto_CreateSnowflakeSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'getSnowflakeSession'.
  func makeGetSnowflakeSessionInterceptors() -> [ClientInterceptor<Proto_GetSnowflakeSessionRequest, Proto_GetSnowflakeSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'getSnowflakeSessions'.
  func makeGetSnowflakeSessionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetSnowflakeSessionsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteSnowflakeSession'.
  func makeDeleteSnowflakeSessionInterceptors() -> [ClientInterceptor<Proto_DeleteSnowflakeSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllSnowflakeSessions'.
  func makeDeleteAllSnowflakeSessionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createSAMLIdPSession'.
  func makeCreateSAMLIdPSessionInterceptors() -> [ClientInterceptor<Proto_CreateSAMLIdPSessionRequest, Proto_CreateSAMLIdPSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'getSAMLIdPSession'.
  func makeGetSAMLIdPSessionInterceptors() -> [ClientInterceptor<Proto_GetSAMLIdPSessionRequest, Proto_GetSAMLIdPSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'listSAMLIdPSessions'.
  func makeListSAMLIdPSessionsInterceptors() -> [ClientInterceptor<Proto_ListSAMLIdPSessionsRequest, Proto_ListSAMLIdPSessionsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteSAMLIdPSession'.
  func makeDeleteSAMLIdPSessionInterceptors() -> [ClientInterceptor<Proto_DeleteSAMLIdPSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllSAMLIdPSessions'.
  func makeDeleteAllSAMLIdPSessionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteUserSAMLIdPSessions'.
  func makeDeleteUserSAMLIdPSessionsInterceptors() -> [ClientInterceptor<Proto_DeleteUserSAMLIdPSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getWebSession'.
  func makeGetWebSessionInterceptors() -> [ClientInterceptor<Types_GetWebSessionRequest, Proto_GetWebSessionResponse>]

  /// - Returns: Interceptors to use when invoking 'getWebSessions'.
  func makeGetWebSessionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebSessionsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteWebSession'.
  func makeDeleteWebSessionInterceptors() -> [ClientInterceptor<Types_DeleteWebSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllWebSessions'.
  func makeDeleteAllWebSessionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getWebToken'.
  func makeGetWebTokenInterceptors() -> [ClientInterceptor<Types_GetWebTokenRequest, Proto_GetWebTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'getWebTokens'.
  func makeGetWebTokensInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebTokensResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteWebToken'.
  func makeDeleteWebTokenInterceptors() -> [ClientInterceptor<Types_DeleteWebTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllWebTokens'.
  func makeDeleteAllWebTokensInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateRemoteCluster'.
  func makeUpdateRemoteClusterInterceptors() -> [ClientInterceptor<Types_RemoteClusterV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertKubernetesServer'.
  func makeUpsertKubernetesServerInterceptors() -> [ClientInterceptor<Proto_UpsertKubernetesServerRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when invoking 'deleteKubernetesServer'.
  func makeDeleteKubernetesServerInterceptors() -> [ClientInterceptor<Proto_DeleteKubernetesServerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllKubernetesServers'.
  func makeDeleteAllKubernetesServersInterceptors() -> [ClientInterceptor<Proto_DeleteAllKubernetesServersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertDatabaseServer'.
  func makeUpsertDatabaseServerInterceptors() -> [ClientInterceptor<Proto_UpsertDatabaseServerRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when invoking 'deleteDatabaseServer'.
  func makeDeleteDatabaseServerInterceptors() -> [ClientInterceptor<Proto_DeleteDatabaseServerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllDatabaseServers'.
  func makeDeleteAllDatabaseServersInterceptors() -> [ClientInterceptor<Proto_DeleteAllDatabaseServersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertDatabaseService'.
  func makeUpsertDatabaseServiceInterceptors() -> [ClientInterceptor<Proto_UpsertDatabaseServiceRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when invoking 'deleteDatabaseService'.
  func makeDeleteDatabaseServiceInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllDatabaseServices'.
  func makeDeleteAllDatabaseServicesInterceptors() -> [ClientInterceptor<Proto_DeleteAllDatabaseServicesRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'signDatabaseCSR'.
  func makeSignDatabaseCSRInterceptors() -> [ClientInterceptor<Proto_DatabaseCSRRequest, Proto_DatabaseCSRResponse>]

  /// - Returns: Interceptors to use when invoking 'generateDatabaseCert'.
  func makeGenerateDatabaseCertInterceptors() -> [ClientInterceptor<Proto_DatabaseCertRequest, Proto_DatabaseCertResponse>]

  /// - Returns: Interceptors to use when invoking 'generateSnowflakeJWT'.
  func makeGenerateSnowflakeJWTInterceptors() -> [ClientInterceptor<Proto_SnowflakeJWTRequest, Proto_SnowflakeJWTResponse>]

  /// - Returns: Interceptors to use when invoking 'getRole'.
  func makeGetRoleInterceptors() -> [ClientInterceptor<Proto_GetRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when invoking 'getRoles'.
  func makeGetRolesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetRolesResponse>]

  /// - Returns: Interceptors to use when invoking 'createRole'.
  func makeCreateRoleInterceptors() -> [ClientInterceptor<Proto_CreateRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when invoking 'updateRole'.
  func makeUpdateRoleInterceptors() -> [ClientInterceptor<Proto_UpdateRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when invoking 'upsertRoleV2'.
  func makeUpsertRoleV2Interceptors() -> [ClientInterceptor<Proto_UpsertRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when invoking 'upsertRole'.
  func makeUpsertRoleInterceptors() -> [ClientInterceptor<Types_RoleV6, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteRole'.
  func makeDeleteRoleInterceptors() -> [ClientInterceptor<Proto_DeleteRoleRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'addMFADevice'.
  func makeAddMFADeviceInterceptors() -> [ClientInterceptor<Proto_AddMFADeviceRequest, Proto_AddMFADeviceResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteMFADevice'.
  func makeDeleteMFADeviceInterceptors() -> [ClientInterceptor<Proto_DeleteMFADeviceRequest, Proto_DeleteMFADeviceResponse>]

  /// - Returns: Interceptors to use when invoking 'addMFADeviceSync'.
  func makeAddMFADeviceSyncInterceptors() -> [ClientInterceptor<Proto_AddMFADeviceSyncRequest, Proto_AddMFADeviceSyncResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteMFADeviceSync'.
  func makeDeleteMFADeviceSyncInterceptors() -> [ClientInterceptor<Proto_DeleteMFADeviceSyncRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getMFADevices'.
  func makeGetMFADevicesInterceptors() -> [ClientInterceptor<Proto_GetMFADevicesRequest, Proto_GetMFADevicesResponse>]

  /// - Returns: Interceptors to use when invoking 'createAuthenticateChallenge'.
  func makeCreateAuthenticateChallengeInterceptors() -> [ClientInterceptor<Proto_CreateAuthenticateChallengeRequest, Proto_MFAAuthenticateChallenge>]

  /// - Returns: Interceptors to use when invoking 'createRegisterChallenge'.
  func makeCreateRegisterChallengeInterceptors() -> [ClientInterceptor<Proto_CreateRegisterChallengeRequest, Proto_MFARegisterChallenge>]

  /// - Returns: Interceptors to use when invoking 'getOIDCConnector'.
  func makeGetOIDCConnectorInterceptors() -> [ClientInterceptor<Types_ResourceWithSecretsRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'getOIDCConnectors'.
  func makeGetOIDCConnectorsInterceptors() -> [ClientInterceptor<Types_ResourcesWithSecretsRequest, Types_OIDCConnectorV3List>]

  /// - Returns: Interceptors to use when invoking 'createOIDCConnector'.
  func makeCreateOIDCConnectorInterceptors() -> [ClientInterceptor<Proto_CreateOIDCConnectorRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'updateOIDCConnector'.
  func makeUpdateOIDCConnectorInterceptors() -> [ClientInterceptor<Proto_UpdateOIDCConnectorRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'upsertOIDCConnector'.
  func makeUpsertOIDCConnectorInterceptors() -> [ClientInterceptor<Types_OIDCConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertOIDCConnectorV2'.
  func makeUpsertOIDCConnectorV2Interceptors() -> [ClientInterceptor<Proto_UpsertOIDCConnectorRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'deleteOIDCConnector'.
  func makeDeleteOIDCConnectorInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createOIDCAuthRequest'.
  func makeCreateOIDCAuthRequestInterceptors() -> [ClientInterceptor<Types_OIDCAuthRequest, Types_OIDCAuthRequest>]

  /// - Returns: Interceptors to use when invoking 'getOIDCAuthRequest'.
  func makeGetOIDCAuthRequestInterceptors() -> [ClientInterceptor<Proto_GetOIDCAuthRequestRequest, Types_OIDCAuthRequest>]

  /// - Returns: Interceptors to use when invoking 'getSAMLConnector'.
  func makeGetSAMLConnectorInterceptors() -> [ClientInterceptor<Types_ResourceWithSecretsRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when invoking 'getSAMLConnectors'.
  func makeGetSAMLConnectorsInterceptors() -> [ClientInterceptor<Types_ResourcesWithSecretsRequest, Types_SAMLConnectorV2List>]

  /// - Returns: Interceptors to use when invoking 'createSAMLConnector'.
  func makeCreateSAMLConnectorInterceptors() -> [ClientInterceptor<Proto_CreateSAMLConnectorRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when invoking 'updateSAMLConnector'.
  func makeUpdateSAMLConnectorInterceptors() -> [ClientInterceptor<Proto_UpdateSAMLConnectorRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when invoking 'upsertSAMLConnector'.
  func makeUpsertSAMLConnectorInterceptors() -> [ClientInterceptor<Types_SAMLConnectorV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertSAMLConnectorV2'.
  func makeUpsertSAMLConnectorV2Interceptors() -> [ClientInterceptor<Proto_UpsertSAMLConnectorRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when invoking 'deleteSAMLConnector'.
  func makeDeleteSAMLConnectorInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createSAMLAuthRequest'.
  func makeCreateSAMLAuthRequestInterceptors() -> [ClientInterceptor<Types_SAMLAuthRequest, Types_SAMLAuthRequest>]

  /// - Returns: Interceptors to use when invoking 'getSAMLAuthRequest'.
  func makeGetSAMLAuthRequestInterceptors() -> [ClientInterceptor<Proto_GetSAMLAuthRequestRequest, Types_SAMLAuthRequest>]

  /// - Returns: Interceptors to use when invoking 'getGithubConnector'.
  func makeGetGithubConnectorInterceptors() -> [ClientInterceptor<Types_ResourceWithSecretsRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'getGithubConnectors'.
  func makeGetGithubConnectorsInterceptors() -> [ClientInterceptor<Types_ResourcesWithSecretsRequest, Types_GithubConnectorV3List>]

  /// - Returns: Interceptors to use when invoking 'createGithubConnector'.
  func makeCreateGithubConnectorInterceptors() -> [ClientInterceptor<Proto_CreateGithubConnectorRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'updateGithubConnector'.
  func makeUpdateGithubConnectorInterceptors() -> [ClientInterceptor<Proto_UpdateGithubConnectorRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'upsertGithubConnector'.
  func makeUpsertGithubConnectorInterceptors() -> [ClientInterceptor<Types_GithubConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertGithubConnectorV2'.
  func makeUpsertGithubConnectorV2Interceptors() -> [ClientInterceptor<Proto_UpsertGithubConnectorRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when invoking 'deleteGithubConnector'.
  func makeDeleteGithubConnectorInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createGithubAuthRequest'.
  func makeCreateGithubAuthRequestInterceptors() -> [ClientInterceptor<Types_GithubAuthRequest, Types_GithubAuthRequest>]

  /// - Returns: Interceptors to use when invoking 'getGithubAuthRequest'.
  func makeGetGithubAuthRequestInterceptors() -> [ClientInterceptor<Proto_GetGithubAuthRequestRequest, Types_GithubAuthRequest>]

  /// - Returns: Interceptors to use when invoking 'getSSODiagnosticInfo'.
  func makeGetSSODiagnosticInfoInterceptors() -> [ClientInterceptor<Proto_GetSSODiagnosticInfoRequest, Types_SSODiagnosticInfo>]

  /// - Returns: Interceptors to use when invoking 'getServerInfos'.
  func makeGetServerInfosInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ServerInfoV1>]

  /// - Returns: Interceptors to use when invoking 'getServerInfo'.
  func makeGetServerInfoInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_ServerInfoV1>]

  /// - Returns: Interceptors to use when invoking 'upsertServerInfo'.
  func makeUpsertServerInfoInterceptors() -> [ClientInterceptor<Types_ServerInfoV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteServerInfo'.
  func makeDeleteServerInfoInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllServerInfos'.
  func makeDeleteAllServerInfosInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getTrustedCluster'.
  func makeGetTrustedClusterInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_TrustedClusterV2>]

  /// - Returns: Interceptors to use when invoking 'getTrustedClusters'.
  func makeGetTrustedClustersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_TrustedClusterV2List>]

  /// - Returns: Interceptors to use when invoking 'upsertTrustedCluster'.
  func makeUpsertTrustedClusterInterceptors() -> [ClientInterceptor<Types_TrustedClusterV2, Types_TrustedClusterV2>]

  /// - Returns: Interceptors to use when invoking 'deleteTrustedCluster'.
  func makeDeleteTrustedClusterInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getToken'.
  func makeGetTokenInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_ProvisionTokenV2>]

  /// - Returns: Interceptors to use when invoking 'getTokens'.
  func makeGetTokensInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ProvisionTokenV2List>]

  /// - Returns: Interceptors to use when invoking 'createTokenV2'.
  func makeCreateTokenV2Interceptors() -> [ClientInterceptor<Proto_CreateTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertTokenV2'.
  func makeUpsertTokenV2Interceptors() -> [ClientInterceptor<Proto_UpsertTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteToken'.
  func makeDeleteTokenInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getClusterAuditConfig'.
  func makeGetClusterAuditConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterAuditConfigV2>]

  /// - Returns: Interceptors to use when invoking 'getClusterNetworkingConfig'.
  func makeGetClusterNetworkingConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterNetworkingConfigV2>]

  /// - Returns: Interceptors to use when invoking 'setClusterNetworkingConfig'.
  func makeSetClusterNetworkingConfigInterceptors() -> [ClientInterceptor<Types_ClusterNetworkingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'resetClusterNetworkingConfig'.
  func makeResetClusterNetworkingConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getSessionRecordingConfig'.
  func makeGetSessionRecordingConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionRecordingConfigV2>]

  /// - Returns: Interceptors to use when invoking 'setSessionRecordingConfig'.
  func makeSetSessionRecordingConfigInterceptors() -> [ClientInterceptor<Types_SessionRecordingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'resetSessionRecordingConfig'.
  func makeResetSessionRecordingConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getAuthPreference'.
  func makeGetAuthPreferenceInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_AuthPreferenceV2>]

  /// - Returns: Interceptors to use when invoking 'setAuthPreference'.
  func makeSetAuthPreferenceInterceptors() -> [ClientInterceptor<Types_AuthPreferenceV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'resetAuthPreference'.
  func makeResetAuthPreferenceInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getUIConfig'.
  func makeGetUIConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_UIConfigV1>]

  /// - Returns: Interceptors to use when invoking 'setUIConfig'.
  func makeSetUIConfigInterceptors() -> [ClientInterceptor<Types_UIConfigV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteUIConfig'.
  func makeDeleteUIConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getEvents'.
  func makeGetEventsInterceptors() -> [ClientInterceptor<Proto_GetEventsRequest, Proto_Events>]

  /// - Returns: Interceptors to use when invoking 'getSessionEvents'.
  func makeGetSessionEventsInterceptors() -> [ClientInterceptor<Proto_GetSessionEventsRequest, Proto_Events>]

  /// - Returns: Interceptors to use when invoking 'getLock'.
  func makeGetLockInterceptors() -> [ClientInterceptor<Proto_GetLockRequest, Types_LockV2>]

  /// - Returns: Interceptors to use when invoking 'getLocks'.
  func makeGetLocksInterceptors() -> [ClientInterceptor<Proto_GetLocksRequest, Proto_GetLocksResponse>]

  /// - Returns: Interceptors to use when invoking 'upsertLock'.
  func makeUpsertLockInterceptors() -> [ClientInterceptor<Types_LockV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteLock'.
  func makeDeleteLockInterceptors() -> [ClientInterceptor<Proto_DeleteLockRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'replaceRemoteLocks'.
  func makeReplaceRemoteLocksInterceptors() -> [ClientInterceptor<Proto_ReplaceRemoteLocksRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'streamSessionEvents'.
  func makeStreamSessionEventsInterceptors() -> [ClientInterceptor<Proto_StreamSessionEventsRequest, Events_OneOf>]

  /// - Returns: Interceptors to use when invoking 'getNetworkRestrictions'.
  func makeGetNetworkRestrictionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_NetworkRestrictionsV4>]

  /// - Returns: Interceptors to use when invoking 'setNetworkRestrictions'.
  func makeSetNetworkRestrictionsInterceptors() -> [ClientInterceptor<Types_NetworkRestrictionsV4, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteNetworkRestrictions'.
  func makeDeleteNetworkRestrictionsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getApps'.
  func makeGetAppsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_AppV3List>]

  /// - Returns: Interceptors to use when invoking 'getApp'.
  func makeGetAppInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_AppV3>]

  /// - Returns: Interceptors to use when invoking 'createApp'.
  func makeCreateAppInterceptors() -> [ClientInterceptor<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateApp'.
  func makeUpdateAppInterceptors() -> [ClientInterceptor<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteApp'.
  func makeDeleteAppInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllApps'.
  func makeDeleteAllAppsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getDatabases'.
  func makeGetDatabasesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_DatabaseV3List>]

  /// - Returns: Interceptors to use when invoking 'getDatabase'.
  func makeGetDatabaseInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_DatabaseV3>]

  /// - Returns: Interceptors to use when invoking 'createDatabase'.
  func makeCreateDatabaseInterceptors() -> [ClientInterceptor<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateDatabase'.
  func makeUpdateDatabaseInterceptors() -> [ClientInterceptor<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteDatabase'.
  func makeDeleteDatabaseInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllDatabases'.
  func makeDeleteAllDatabasesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getKubernetesClusters'.
  func makeGetKubernetesClustersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_KubernetesClusterV3List>]

  /// - Returns: Interceptors to use when invoking 'getKubernetesCluster'.
  func makeGetKubernetesClusterInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_KubernetesClusterV3>]

  /// - Returns: Interceptors to use when invoking 'createKubernetesCluster'.
  func makeCreateKubernetesClusterInterceptors() -> [ClientInterceptor<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateKubernetesCluster'.
  func makeUpdateKubernetesClusterInterceptors() -> [ClientInterceptor<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteKubernetesCluster'.
  func makeDeleteKubernetesClusterInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllKubernetesClusters'.
  func makeDeleteAllKubernetesClustersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getWindowsDesktopServices'.
  func makeGetWindowsDesktopServicesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWindowsDesktopServicesResponse>]

  /// - Returns: Interceptors to use when invoking 'getWindowsDesktopService'.
  func makeGetWindowsDesktopServiceInterceptors() -> [ClientInterceptor<Proto_GetWindowsDesktopServiceRequest, Proto_GetWindowsDesktopServiceResponse>]

  /// - Returns: Interceptors to use when invoking 'upsertWindowsDesktopService'.
  func makeUpsertWindowsDesktopServiceInterceptors() -> [ClientInterceptor<Types_WindowsDesktopServiceV3, Types_KeepAlive>]

  /// - Returns: Interceptors to use when invoking 'deleteWindowsDesktopService'.
  func makeDeleteWindowsDesktopServiceInterceptors() -> [ClientInterceptor<Proto_DeleteWindowsDesktopServiceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllWindowsDesktopServices'.
  func makeDeleteAllWindowsDesktopServicesInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getWindowsDesktops'.
  func makeGetWindowsDesktopsInterceptors() -> [ClientInterceptor<Types_WindowsDesktopFilter, Proto_GetWindowsDesktopsResponse>]

  /// - Returns: Interceptors to use when invoking 'createWindowsDesktop'.
  func makeCreateWindowsDesktopInterceptors() -> [ClientInterceptor<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateWindowsDesktop'.
  func makeUpdateWindowsDesktopInterceptors() -> [ClientInterceptor<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertWindowsDesktop'.
  func makeUpsertWindowsDesktopInterceptors() -> [ClientInterceptor<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteWindowsDesktop'.
  func makeDeleteWindowsDesktopInterceptors() -> [ClientInterceptor<Proto_DeleteWindowsDesktopRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllWindowsDesktops'.
  func makeDeleteAllWindowsDesktopsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'generateWindowsDesktopCert'.
  func makeGenerateWindowsDesktopCertInterceptors() -> [ClientInterceptor<Proto_WindowsDesktopCertRequest, Proto_WindowsDesktopCertResponse>]

  /// - Returns: Interceptors to use when invoking 'generateCertAuthorityCRL'.
  func makeGenerateCertAuthorityCRLInterceptors() -> [ClientInterceptor<Proto_CertAuthorityRequest, Proto_CRL>]

  /// - Returns: Interceptors to use when invoking 'createConnectionDiagnostic'.
  func makeCreateConnectionDiagnosticInterceptors() -> [ClientInterceptor<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateConnectionDiagnostic'.
  func makeUpdateConnectionDiagnosticInterceptors() -> [ClientInterceptor<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getConnectionDiagnostic'.
  func makeGetConnectionDiagnosticInterceptors() -> [ClientInterceptor<Proto_GetConnectionDiagnosticRequest, Types_ConnectionDiagnosticV1>]

  /// - Returns: Interceptors to use when invoking 'appendDiagnosticTrace'.
  func makeAppendDiagnosticTraceInterceptors() -> [ClientInterceptor<Proto_AppendDiagnosticTraceRequest, Types_ConnectionDiagnosticV1>]

  /// - Returns: Interceptors to use when invoking 'changeUserAuthentication'.
  func makeChangeUserAuthenticationInterceptors() -> [ClientInterceptor<Proto_ChangeUserAuthenticationRequest, Proto_ChangeUserAuthenticationResponse>]

  /// - Returns: Interceptors to use when invoking 'startAccountRecovery'.
  func makeStartAccountRecoveryInterceptors() -> [ClientInterceptor<Proto_StartAccountRecoveryRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when invoking 'verifyAccountRecovery'.
  func makeVerifyAccountRecoveryInterceptors() -> [ClientInterceptor<Proto_VerifyAccountRecoveryRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when invoking 'completeAccountRecovery'.
  func makeCompleteAccountRecoveryInterceptors() -> [ClientInterceptor<Proto_CompleteAccountRecoveryRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createAccountRecoveryCodes'.
  func makeCreateAccountRecoveryCodesInterceptors() -> [ClientInterceptor<Proto_CreateAccountRecoveryCodesRequest, Proto_RecoveryCodes>]

  /// - Returns: Interceptors to use when invoking 'getAccountRecoveryToken'.
  func makeGetAccountRecoveryTokenInterceptors() -> [ClientInterceptor<Proto_GetAccountRecoveryTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when invoking 'getAccountRecoveryCodes'.
  func makeGetAccountRecoveryCodesInterceptors() -> [ClientInterceptor<Proto_GetAccountRecoveryCodesRequest, Proto_RecoveryCodes>]

  /// - Returns: Interceptors to use when invoking 'createPrivilegeToken'.
  func makeCreatePrivilegeTokenInterceptors() -> [ClientInterceptor<Proto_CreatePrivilegeTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when invoking 'getInstaller'.
  func makeGetInstallerInterceptors() -> [ClientInterceptor<Types_ResourceRequest, Types_InstallerV1>]

  /// - Returns: Interceptors to use when invoking 'getInstallers'.
  func makeGetInstallersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_InstallerV1List>]

  /// - Returns: Interceptors to use when invoking 'setInstaller'.
  func makeSetInstallerInterceptors() -> [ClientInterceptor<Types_InstallerV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteInstaller'.
  func makeDeleteInstallerInterceptors() -> [ClientInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllInstallers'.
  func makeDeleteAllInstallersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'listResources'.
  func makeListResourcesInterceptors() -> [ClientInterceptor<Proto_ListResourcesRequest, Proto_ListResourcesResponse>]

  /// - Returns: Interceptors to use when invoking 'listUnifiedResources'.
  func makeListUnifiedResourcesInterceptors() -> [ClientInterceptor<Proto_ListUnifiedResourcesRequest, Proto_ListUnifiedResourcesResponse>]

  /// - Returns: Interceptors to use when invoking 'getSSHTargets'.
  func makeGetSSHTargetsInterceptors() -> [ClientInterceptor<Proto_GetSSHTargetsRequest, Proto_GetSSHTargetsResponse>]

  /// - Returns: Interceptors to use when invoking 'getDomainName'.
  func makeGetDomainNameInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetDomainNameResponse>]

  /// - Returns: Interceptors to use when invoking 'getClusterCACert'.
  func makeGetClusterCACertInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetClusterCACertResponse>]

  /// - Returns: Interceptors to use when invoking 'submitUsageEvent'.
  func makeSubmitUsageEventInterceptors() -> [ClientInterceptor<Proto_SubmitUsageEventRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getLicense'.
  func makeGetLicenseInterceptors() -> [ClientInterceptor<Proto_GetLicenseRequest, Proto_GetLicenseResponse>]

  /// - Returns: Interceptors to use when invoking 'listReleases'.
  func makeListReleasesInterceptors() -> [ClientInterceptor<Proto_ListReleasesRequest, Proto_ListReleasesResponse>]

  /// - Returns: Interceptors to use when invoking 'listSAMLIdPServiceProviders'.
  func makeListSAMLIdPServiceProvidersInterceptors() -> [ClientInterceptor<Proto_ListSAMLIdPServiceProvidersRequest, Proto_ListSAMLIdPServiceProvidersResponse>]

  /// - Returns: Interceptors to use when invoking 'getSAMLIdPServiceProvider'.
  func makeGetSAMLIdPServiceProviderInterceptors() -> [ClientInterceptor<Proto_GetSAMLIdPServiceProviderRequest, Types_SAMLIdPServiceProviderV1>]

  /// - Returns: Interceptors to use when invoking 'createSAMLIdPServiceProvider'.
  func makeCreateSAMLIdPServiceProviderInterceptors() -> [ClientInterceptor<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateSAMLIdPServiceProvider'.
  func makeUpdateSAMLIdPServiceProviderInterceptors() -> [ClientInterceptor<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteSAMLIdPServiceProvider'.
  func makeDeleteSAMLIdPServiceProviderInterceptors() -> [ClientInterceptor<Proto_DeleteSAMLIdPServiceProviderRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllSAMLIdPServiceProviders'.
  func makeDeleteAllSAMLIdPServiceProvidersInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'listUserGroups'.
  func makeListUserGroupsInterceptors() -> [ClientInterceptor<Proto_ListUserGroupsRequest, Proto_ListUserGroupsResponse>]

  /// - Returns: Interceptors to use when invoking 'getUserGroup'.
  func makeGetUserGroupInterceptors() -> [ClientInterceptor<Proto_GetUserGroupRequest, Types_UserGroupV1>]

  /// - Returns: Interceptors to use when invoking 'createUserGroup'.
  func makeCreateUserGroupInterceptors() -> [ClientInterceptor<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateUserGroup'.
  func makeUpdateUserGroupInterceptors() -> [ClientInterceptor<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteUserGroup'.
  func makeDeleteUserGroupInterceptors() -> [ClientInterceptor<Proto_DeleteUserGroupRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteAllUserGroups'.
  func makeDeleteAllUserGroupsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getHeadlessAuthentication'.
  func makeGetHeadlessAuthenticationInterceptors() -> [ClientInterceptor<Proto_GetHeadlessAuthenticationRequest, Types_HeadlessAuthentication>]

  /// - Returns: Interceptors to use when invoking 'watchPendingHeadlessAuthentications'.
  func makeWatchPendingHeadlessAuthenticationsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_Event>]

  /// - Returns: Interceptors to use when invoking 'updateHeadlessAuthenticationState'.
  func makeUpdateHeadlessAuthenticationStateInterceptors() -> [ClientInterceptor<Proto_UpdateHeadlessAuthenticationStateRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'exportUpgradeWindows'.
  func makeExportUpgradeWindowsInterceptors() -> [ClientInterceptor<Proto_ExportUpgradeWindowsRequest, Proto_ExportUpgradeWindowsResponse>]

  /// - Returns: Interceptors to use when invoking 'getClusterMaintenanceConfig'.
  func makeGetClusterMaintenanceConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterMaintenanceConfigV1>]

  /// - Returns: Interceptors to use when invoking 'updateClusterMaintenanceConfig'.
  func makeUpdateClusterMaintenanceConfigInterceptors() -> [ClientInterceptor<Types_ClusterMaintenanceConfigV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteClusterMaintenanceConfig'.
  func makeDeleteClusterMaintenanceConfigInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum Proto_AuthServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "AuthService",
    fullName: "proto.AuthService",
    methods: [
      Proto_AuthServiceClientMetadata.Methods.inventoryControlStream,
      Proto_AuthServiceClientMetadata.Methods.getInventoryStatus,
      Proto_AuthServiceClientMetadata.Methods.getInventoryConnectedServiceCounts,
      Proto_AuthServiceClientMetadata.Methods.pingInventory,
      Proto_AuthServiceClientMetadata.Methods.getInstances,
      Proto_AuthServiceClientMetadata.Methods.getClusterAlerts,
      Proto_AuthServiceClientMetadata.Methods.upsertClusterAlert,
      Proto_AuthServiceClientMetadata.Methods.createAlertAck,
      Proto_AuthServiceClientMetadata.Methods.getAlertAcks,
      Proto_AuthServiceClientMetadata.Methods.clearAlertAcks,
      Proto_AuthServiceClientMetadata.Methods.maintainSessionPresence,
      Proto_AuthServiceClientMetadata.Methods.createSessionTracker,
      Proto_AuthServiceClientMetadata.Methods.getSessionTracker,
      Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackers,
      Proto_AuthServiceClientMetadata.Methods.getActiveSessionTrackersWithFilter,
      Proto_AuthServiceClientMetadata.Methods.removeSessionTracker,
      Proto_AuthServiceClientMetadata.Methods.updateSessionTracker,
      Proto_AuthServiceClientMetadata.Methods.sendKeepAlives,
      Proto_AuthServiceClientMetadata.Methods.watchEvents,
      Proto_AuthServiceClientMetadata.Methods.getNode,
      Proto_AuthServiceClientMetadata.Methods.upsertNode,
      Proto_AuthServiceClientMetadata.Methods.deleteNode,
      Proto_AuthServiceClientMetadata.Methods.deleteAllNodes,
      Proto_AuthServiceClientMetadata.Methods.generateUserCerts,
      Proto_AuthServiceClientMetadata.Methods.generateHostCerts,
      Proto_AuthServiceClientMetadata.Methods.generateUserSingleUseCerts,
      Proto_AuthServiceClientMetadata.Methods.generateOpenSSHCert,
      Proto_AuthServiceClientMetadata.Methods.isMFARequired,
      Proto_AuthServiceClientMetadata.Methods.getAccessRequestsV2,
      Proto_AuthServiceClientMetadata.Methods.createAccessRequest,
      Proto_AuthServiceClientMetadata.Methods.createAccessRequestV2,
      Proto_AuthServiceClientMetadata.Methods.deleteAccessRequest,
      Proto_AuthServiceClientMetadata.Methods.setAccessRequestState,
      Proto_AuthServiceClientMetadata.Methods.submitAccessReview,
      Proto_AuthServiceClientMetadata.Methods.getAccessCapabilities,
      Proto_AuthServiceClientMetadata.Methods.getAccessRequestAllowedPromotions,
      Proto_AuthServiceClientMetadata.Methods.getPluginData,
      Proto_AuthServiceClientMetadata.Methods.updatePluginData,
      Proto_AuthServiceClientMetadata.Methods.ping,
      Proto_AuthServiceClientMetadata.Methods.getResetPasswordToken,
      Proto_AuthServiceClientMetadata.Methods.createResetPasswordToken,
      Proto_AuthServiceClientMetadata.Methods.createBot,
      Proto_AuthServiceClientMetadata.Methods.deleteBot,
      Proto_AuthServiceClientMetadata.Methods.getBotUsers,
      Proto_AuthServiceClientMetadata.Methods.getUser,
      Proto_AuthServiceClientMetadata.Methods.getCurrentUser,
      Proto_AuthServiceClientMetadata.Methods.getCurrentUserRoles,
      Proto_AuthServiceClientMetadata.Methods.getUsers,
      Proto_AuthServiceClientMetadata.Methods.createUser,
      Proto_AuthServiceClientMetadata.Methods.updateUser,
      Proto_AuthServiceClientMetadata.Methods.deleteUser,
      Proto_AuthServiceClientMetadata.Methods.changePassword,
      Proto_AuthServiceClientMetadata.Methods.acquireSemaphore,
      Proto_AuthServiceClientMetadata.Methods.keepAliveSemaphoreLease,
      Proto_AuthServiceClientMetadata.Methods.cancelSemaphoreLease,
      Proto_AuthServiceClientMetadata.Methods.getSemaphores,
      Proto_AuthServiceClientMetadata.Methods.deleteSemaphore,
      Proto_AuthServiceClientMetadata.Methods.emitAuditEvent,
      Proto_AuthServiceClientMetadata.Methods.createAuditStream,
      Proto_AuthServiceClientMetadata.Methods.upsertApplicationServer,
      Proto_AuthServiceClientMetadata.Methods.deleteApplicationServer,
      Proto_AuthServiceClientMetadata.Methods.deleteAllApplicationServers,
      Proto_AuthServiceClientMetadata.Methods.generateAppToken,
      Proto_AuthServiceClientMetadata.Methods.getAppSession,
      Proto_AuthServiceClientMetadata.Methods.listAppSessions,
      Proto_AuthServiceClientMetadata.Methods.createAppSession,
      Proto_AuthServiceClientMetadata.Methods.deleteAppSession,
      Proto_AuthServiceClientMetadata.Methods.deleteAllAppSessions,
      Proto_AuthServiceClientMetadata.Methods.deleteUserAppSessions,
      Proto_AuthServiceClientMetadata.Methods.createSnowflakeSession,
      Proto_AuthServiceClientMetadata.Methods.getSnowflakeSession,
      Proto_AuthServiceClientMetadata.Methods.getSnowflakeSessions,
      Proto_AuthServiceClientMetadata.Methods.deleteSnowflakeSession,
      Proto_AuthServiceClientMetadata.Methods.deleteAllSnowflakeSessions,
      Proto_AuthServiceClientMetadata.Methods.createSAMLIdPSession,
      Proto_AuthServiceClientMetadata.Methods.getSAMLIdPSession,
      Proto_AuthServiceClientMetadata.Methods.listSAMLIdPSessions,
      Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPSession,
      Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPSessions,
      Proto_AuthServiceClientMetadata.Methods.deleteUserSAMLIdPSessions,
      Proto_AuthServiceClientMetadata.Methods.getWebSession,
      Proto_AuthServiceClientMetadata.Methods.getWebSessions,
      Proto_AuthServiceClientMetadata.Methods.deleteWebSession,
      Proto_AuthServiceClientMetadata.Methods.deleteAllWebSessions,
      Proto_AuthServiceClientMetadata.Methods.getWebToken,
      Proto_AuthServiceClientMetadata.Methods.getWebTokens,
      Proto_AuthServiceClientMetadata.Methods.deleteWebToken,
      Proto_AuthServiceClientMetadata.Methods.deleteAllWebTokens,
      Proto_AuthServiceClientMetadata.Methods.updateRemoteCluster,
      Proto_AuthServiceClientMetadata.Methods.upsertKubernetesServer,
      Proto_AuthServiceClientMetadata.Methods.deleteKubernetesServer,
      Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesServers,
      Proto_AuthServiceClientMetadata.Methods.upsertDatabaseServer,
      Proto_AuthServiceClientMetadata.Methods.deleteDatabaseServer,
      Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServers,
      Proto_AuthServiceClientMetadata.Methods.upsertDatabaseService,
      Proto_AuthServiceClientMetadata.Methods.deleteDatabaseService,
      Proto_AuthServiceClientMetadata.Methods.deleteAllDatabaseServices,
      Proto_AuthServiceClientMetadata.Methods.signDatabaseCSR,
      Proto_AuthServiceClientMetadata.Methods.generateDatabaseCert,
      Proto_AuthServiceClientMetadata.Methods.generateSnowflakeJWT,
      Proto_AuthServiceClientMetadata.Methods.getRole,
      Proto_AuthServiceClientMetadata.Methods.getRoles,
      Proto_AuthServiceClientMetadata.Methods.createRole,
      Proto_AuthServiceClientMetadata.Methods.updateRole,
      Proto_AuthServiceClientMetadata.Methods.upsertRoleV2,
      Proto_AuthServiceClientMetadata.Methods.upsertRole,
      Proto_AuthServiceClientMetadata.Methods.deleteRole,
      Proto_AuthServiceClientMetadata.Methods.addMFADevice,
      Proto_AuthServiceClientMetadata.Methods.deleteMFADevice,
      Proto_AuthServiceClientMetadata.Methods.addMFADeviceSync,
      Proto_AuthServiceClientMetadata.Methods.deleteMFADeviceSync,
      Proto_AuthServiceClientMetadata.Methods.getMFADevices,
      Proto_AuthServiceClientMetadata.Methods.createAuthenticateChallenge,
      Proto_AuthServiceClientMetadata.Methods.createRegisterChallenge,
      Proto_AuthServiceClientMetadata.Methods.getOIDCConnector,
      Proto_AuthServiceClientMetadata.Methods.getOIDCConnectors,
      Proto_AuthServiceClientMetadata.Methods.createOIDCConnector,
      Proto_AuthServiceClientMetadata.Methods.updateOIDCConnector,
      Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnector,
      Proto_AuthServiceClientMetadata.Methods.upsertOIDCConnectorV2,
      Proto_AuthServiceClientMetadata.Methods.deleteOIDCConnector,
      Proto_AuthServiceClientMetadata.Methods.createOIDCAuthRequest,
      Proto_AuthServiceClientMetadata.Methods.getOIDCAuthRequest,
      Proto_AuthServiceClientMetadata.Methods.getSAMLConnector,
      Proto_AuthServiceClientMetadata.Methods.getSAMLConnectors,
      Proto_AuthServiceClientMetadata.Methods.createSAMLConnector,
      Proto_AuthServiceClientMetadata.Methods.updateSAMLConnector,
      Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnector,
      Proto_AuthServiceClientMetadata.Methods.upsertSAMLConnectorV2,
      Proto_AuthServiceClientMetadata.Methods.deleteSAMLConnector,
      Proto_AuthServiceClientMetadata.Methods.createSAMLAuthRequest,
      Proto_AuthServiceClientMetadata.Methods.getSAMLAuthRequest,
      Proto_AuthServiceClientMetadata.Methods.getGithubConnector,
      Proto_AuthServiceClientMetadata.Methods.getGithubConnectors,
      Proto_AuthServiceClientMetadata.Methods.createGithubConnector,
      Proto_AuthServiceClientMetadata.Methods.updateGithubConnector,
      Proto_AuthServiceClientMetadata.Methods.upsertGithubConnector,
      Proto_AuthServiceClientMetadata.Methods.upsertGithubConnectorV2,
      Proto_AuthServiceClientMetadata.Methods.deleteGithubConnector,
      Proto_AuthServiceClientMetadata.Methods.createGithubAuthRequest,
      Proto_AuthServiceClientMetadata.Methods.getGithubAuthRequest,
      Proto_AuthServiceClientMetadata.Methods.getSSODiagnosticInfo,
      Proto_AuthServiceClientMetadata.Methods.getServerInfos,
      Proto_AuthServiceClientMetadata.Methods.getServerInfo,
      Proto_AuthServiceClientMetadata.Methods.upsertServerInfo,
      Proto_AuthServiceClientMetadata.Methods.deleteServerInfo,
      Proto_AuthServiceClientMetadata.Methods.deleteAllServerInfos,
      Proto_AuthServiceClientMetadata.Methods.getTrustedCluster,
      Proto_AuthServiceClientMetadata.Methods.getTrustedClusters,
      Proto_AuthServiceClientMetadata.Methods.upsertTrustedCluster,
      Proto_AuthServiceClientMetadata.Methods.deleteTrustedCluster,
      Proto_AuthServiceClientMetadata.Methods.getToken,
      Proto_AuthServiceClientMetadata.Methods.getTokens,
      Proto_AuthServiceClientMetadata.Methods.createTokenV2,
      Proto_AuthServiceClientMetadata.Methods.upsertTokenV2,
      Proto_AuthServiceClientMetadata.Methods.deleteToken,
      Proto_AuthServiceClientMetadata.Methods.getClusterAuditConfig,
      Proto_AuthServiceClientMetadata.Methods.getClusterNetworkingConfig,
      Proto_AuthServiceClientMetadata.Methods.setClusterNetworkingConfig,
      Proto_AuthServiceClientMetadata.Methods.resetClusterNetworkingConfig,
      Proto_AuthServiceClientMetadata.Methods.getSessionRecordingConfig,
      Proto_AuthServiceClientMetadata.Methods.setSessionRecordingConfig,
      Proto_AuthServiceClientMetadata.Methods.resetSessionRecordingConfig,
      Proto_AuthServiceClientMetadata.Methods.getAuthPreference,
      Proto_AuthServiceClientMetadata.Methods.setAuthPreference,
      Proto_AuthServiceClientMetadata.Methods.resetAuthPreference,
      Proto_AuthServiceClientMetadata.Methods.getUIConfig,
      Proto_AuthServiceClientMetadata.Methods.setUIConfig,
      Proto_AuthServiceClientMetadata.Methods.deleteUIConfig,
      Proto_AuthServiceClientMetadata.Methods.getEvents,
      Proto_AuthServiceClientMetadata.Methods.getSessionEvents,
      Proto_AuthServiceClientMetadata.Methods.getLock,
      Proto_AuthServiceClientMetadata.Methods.getLocks,
      Proto_AuthServiceClientMetadata.Methods.upsertLock,
      Proto_AuthServiceClientMetadata.Methods.deleteLock,
      Proto_AuthServiceClientMetadata.Methods.replaceRemoteLocks,
      Proto_AuthServiceClientMetadata.Methods.streamSessionEvents,
      Proto_AuthServiceClientMetadata.Methods.getNetworkRestrictions,
      Proto_AuthServiceClientMetadata.Methods.setNetworkRestrictions,
      Proto_AuthServiceClientMetadata.Methods.deleteNetworkRestrictions,
      Proto_AuthServiceClientMetadata.Methods.getApps,
      Proto_AuthServiceClientMetadata.Methods.getApp,
      Proto_AuthServiceClientMetadata.Methods.createApp,
      Proto_AuthServiceClientMetadata.Methods.updateApp,
      Proto_AuthServiceClientMetadata.Methods.deleteApp,
      Proto_AuthServiceClientMetadata.Methods.deleteAllApps,
      Proto_AuthServiceClientMetadata.Methods.getDatabases,
      Proto_AuthServiceClientMetadata.Methods.getDatabase,
      Proto_AuthServiceClientMetadata.Methods.createDatabase,
      Proto_AuthServiceClientMetadata.Methods.updateDatabase,
      Proto_AuthServiceClientMetadata.Methods.deleteDatabase,
      Proto_AuthServiceClientMetadata.Methods.deleteAllDatabases,
      Proto_AuthServiceClientMetadata.Methods.getKubernetesClusters,
      Proto_AuthServiceClientMetadata.Methods.getKubernetesCluster,
      Proto_AuthServiceClientMetadata.Methods.createKubernetesCluster,
      Proto_AuthServiceClientMetadata.Methods.updateKubernetesCluster,
      Proto_AuthServiceClientMetadata.Methods.deleteKubernetesCluster,
      Proto_AuthServiceClientMetadata.Methods.deleteAllKubernetesClusters,
      Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopServices,
      Proto_AuthServiceClientMetadata.Methods.getWindowsDesktopService,
      Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktopService,
      Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktopService,
      Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktopServices,
      Proto_AuthServiceClientMetadata.Methods.getWindowsDesktops,
      Proto_AuthServiceClientMetadata.Methods.createWindowsDesktop,
      Proto_AuthServiceClientMetadata.Methods.updateWindowsDesktop,
      Proto_AuthServiceClientMetadata.Methods.upsertWindowsDesktop,
      Proto_AuthServiceClientMetadata.Methods.deleteWindowsDesktop,
      Proto_AuthServiceClientMetadata.Methods.deleteAllWindowsDesktops,
      Proto_AuthServiceClientMetadata.Methods.generateWindowsDesktopCert,
      Proto_AuthServiceClientMetadata.Methods.generateCertAuthorityCRL,
      Proto_AuthServiceClientMetadata.Methods.createConnectionDiagnostic,
      Proto_AuthServiceClientMetadata.Methods.updateConnectionDiagnostic,
      Proto_AuthServiceClientMetadata.Methods.getConnectionDiagnostic,
      Proto_AuthServiceClientMetadata.Methods.appendDiagnosticTrace,
      Proto_AuthServiceClientMetadata.Methods.changeUserAuthentication,
      Proto_AuthServiceClientMetadata.Methods.startAccountRecovery,
      Proto_AuthServiceClientMetadata.Methods.verifyAccountRecovery,
      Proto_AuthServiceClientMetadata.Methods.completeAccountRecovery,
      Proto_AuthServiceClientMetadata.Methods.createAccountRecoveryCodes,
      Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryToken,
      Proto_AuthServiceClientMetadata.Methods.getAccountRecoveryCodes,
      Proto_AuthServiceClientMetadata.Methods.createPrivilegeToken,
      Proto_AuthServiceClientMetadata.Methods.getInstaller,
      Proto_AuthServiceClientMetadata.Methods.getInstallers,
      Proto_AuthServiceClientMetadata.Methods.setInstaller,
      Proto_AuthServiceClientMetadata.Methods.deleteInstaller,
      Proto_AuthServiceClientMetadata.Methods.deleteAllInstallers,
      Proto_AuthServiceClientMetadata.Methods.listResources,
      Proto_AuthServiceClientMetadata.Methods.listUnifiedResources,
      Proto_AuthServiceClientMetadata.Methods.getSSHTargets,
      Proto_AuthServiceClientMetadata.Methods.getDomainName,
      Proto_AuthServiceClientMetadata.Methods.getClusterCACert,
      Proto_AuthServiceClientMetadata.Methods.submitUsageEvent,
      Proto_AuthServiceClientMetadata.Methods.getLicense,
      Proto_AuthServiceClientMetadata.Methods.listReleases,
      Proto_AuthServiceClientMetadata.Methods.listSAMLIdPServiceProviders,
      Proto_AuthServiceClientMetadata.Methods.getSAMLIdPServiceProvider,
      Proto_AuthServiceClientMetadata.Methods.createSAMLIdPServiceProvider,
      Proto_AuthServiceClientMetadata.Methods.updateSAMLIdPServiceProvider,
      Proto_AuthServiceClientMetadata.Methods.deleteSAMLIdPServiceProvider,
      Proto_AuthServiceClientMetadata.Methods.deleteAllSAMLIdPServiceProviders,
      Proto_AuthServiceClientMetadata.Methods.listUserGroups,
      Proto_AuthServiceClientMetadata.Methods.getUserGroup,
      Proto_AuthServiceClientMetadata.Methods.createUserGroup,
      Proto_AuthServiceClientMetadata.Methods.updateUserGroup,
      Proto_AuthServiceClientMetadata.Methods.deleteUserGroup,
      Proto_AuthServiceClientMetadata.Methods.deleteAllUserGroups,
      Proto_AuthServiceClientMetadata.Methods.getHeadlessAuthentication,
      Proto_AuthServiceClientMetadata.Methods.watchPendingHeadlessAuthentications,
      Proto_AuthServiceClientMetadata.Methods.updateHeadlessAuthenticationState,
      Proto_AuthServiceClientMetadata.Methods.exportUpgradeWindows,
      Proto_AuthServiceClientMetadata.Methods.getClusterMaintenanceConfig,
      Proto_AuthServiceClientMetadata.Methods.updateClusterMaintenanceConfig,
      Proto_AuthServiceClientMetadata.Methods.deleteClusterMaintenanceConfig,
    ]
  )

  internal enum Methods {
    internal static let inventoryControlStream = GRPCMethodDescriptor(
      name: "InventoryControlStream",
      path: "/proto.AuthService/InventoryControlStream",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let getInventoryStatus = GRPCMethodDescriptor(
      name: "GetInventoryStatus",
      path: "/proto.AuthService/GetInventoryStatus",
      type: GRPCCallType.unary
    )

    internal static let getInventoryConnectedServiceCounts = GRPCMethodDescriptor(
      name: "GetInventoryConnectedServiceCounts",
      path: "/proto.AuthService/GetInventoryConnectedServiceCounts",
      type: GRPCCallType.unary
    )

    internal static let pingInventory = GRPCMethodDescriptor(
      name: "PingInventory",
      path: "/proto.AuthService/PingInventory",
      type: GRPCCallType.unary
    )

    internal static let getInstances = GRPCMethodDescriptor(
      name: "GetInstances",
      path: "/proto.AuthService/GetInstances",
      type: GRPCCallType.serverStreaming
    )

    internal static let getClusterAlerts = GRPCMethodDescriptor(
      name: "GetClusterAlerts",
      path: "/proto.AuthService/GetClusterAlerts",
      type: GRPCCallType.unary
    )

    internal static let upsertClusterAlert = GRPCMethodDescriptor(
      name: "UpsertClusterAlert",
      path: "/proto.AuthService/UpsertClusterAlert",
      type: GRPCCallType.unary
    )

    internal static let createAlertAck = GRPCMethodDescriptor(
      name: "CreateAlertAck",
      path: "/proto.AuthService/CreateAlertAck",
      type: GRPCCallType.unary
    )

    internal static let getAlertAcks = GRPCMethodDescriptor(
      name: "GetAlertAcks",
      path: "/proto.AuthService/GetAlertAcks",
      type: GRPCCallType.unary
    )

    internal static let clearAlertAcks = GRPCMethodDescriptor(
      name: "ClearAlertAcks",
      path: "/proto.AuthService/ClearAlertAcks",
      type: GRPCCallType.unary
    )

    internal static let maintainSessionPresence = GRPCMethodDescriptor(
      name: "MaintainSessionPresence",
      path: "/proto.AuthService/MaintainSessionPresence",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let createSessionTracker = GRPCMethodDescriptor(
      name: "CreateSessionTracker",
      path: "/proto.AuthService/CreateSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let getSessionTracker = GRPCMethodDescriptor(
      name: "GetSessionTracker",
      path: "/proto.AuthService/GetSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let getActiveSessionTrackers = GRPCMethodDescriptor(
      name: "GetActiveSessionTrackers",
      path: "/proto.AuthService/GetActiveSessionTrackers",
      type: GRPCCallType.serverStreaming
    )

    internal static let getActiveSessionTrackersWithFilter = GRPCMethodDescriptor(
      name: "GetActiveSessionTrackersWithFilter",
      path: "/proto.AuthService/GetActiveSessionTrackersWithFilter",
      type: GRPCCallType.serverStreaming
    )

    internal static let removeSessionTracker = GRPCMethodDescriptor(
      name: "RemoveSessionTracker",
      path: "/proto.AuthService/RemoveSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let updateSessionTracker = GRPCMethodDescriptor(
      name: "UpdateSessionTracker",
      path: "/proto.AuthService/UpdateSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let sendKeepAlives = GRPCMethodDescriptor(
      name: "SendKeepAlives",
      path: "/proto.AuthService/SendKeepAlives",
      type: GRPCCallType.clientStreaming
    )

    internal static let watchEvents = GRPCMethodDescriptor(
      name: "WatchEvents",
      path: "/proto.AuthService/WatchEvents",
      type: GRPCCallType.serverStreaming
    )

    internal static let getNode = GRPCMethodDescriptor(
      name: "GetNode",
      path: "/proto.AuthService/GetNode",
      type: GRPCCallType.unary
    )

    internal static let upsertNode = GRPCMethodDescriptor(
      name: "UpsertNode",
      path: "/proto.AuthService/UpsertNode",
      type: GRPCCallType.unary
    )

    internal static let deleteNode = GRPCMethodDescriptor(
      name: "DeleteNode",
      path: "/proto.AuthService/DeleteNode",
      type: GRPCCallType.unary
    )

    internal static let deleteAllNodes = GRPCMethodDescriptor(
      name: "DeleteAllNodes",
      path: "/proto.AuthService/DeleteAllNodes",
      type: GRPCCallType.unary
    )

    internal static let generateUserCerts = GRPCMethodDescriptor(
      name: "GenerateUserCerts",
      path: "/proto.AuthService/GenerateUserCerts",
      type: GRPCCallType.unary
    )

    internal static let generateHostCerts = GRPCMethodDescriptor(
      name: "GenerateHostCerts",
      path: "/proto.AuthService/GenerateHostCerts",
      type: GRPCCallType.unary
    )

    internal static let generateUserSingleUseCerts = GRPCMethodDescriptor(
      name: "GenerateUserSingleUseCerts",
      path: "/proto.AuthService/GenerateUserSingleUseCerts",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let generateOpenSSHCert = GRPCMethodDescriptor(
      name: "GenerateOpenSSHCert",
      path: "/proto.AuthService/GenerateOpenSSHCert",
      type: GRPCCallType.unary
    )

    internal static let isMFARequired = GRPCMethodDescriptor(
      name: "IsMFARequired",
      path: "/proto.AuthService/IsMFARequired",
      type: GRPCCallType.unary
    )

    internal static let getAccessRequestsV2 = GRPCMethodDescriptor(
      name: "GetAccessRequestsV2",
      path: "/proto.AuthService/GetAccessRequestsV2",
      type: GRPCCallType.serverStreaming
    )

    internal static let createAccessRequest = GRPCMethodDescriptor(
      name: "CreateAccessRequest",
      path: "/proto.AuthService/CreateAccessRequest",
      type: GRPCCallType.unary
    )

    internal static let createAccessRequestV2 = GRPCMethodDescriptor(
      name: "CreateAccessRequestV2",
      path: "/proto.AuthService/CreateAccessRequestV2",
      type: GRPCCallType.unary
    )

    internal static let deleteAccessRequest = GRPCMethodDescriptor(
      name: "DeleteAccessRequest",
      path: "/proto.AuthService/DeleteAccessRequest",
      type: GRPCCallType.unary
    )

    internal static let setAccessRequestState = GRPCMethodDescriptor(
      name: "SetAccessRequestState",
      path: "/proto.AuthService/SetAccessRequestState",
      type: GRPCCallType.unary
    )

    internal static let submitAccessReview = GRPCMethodDescriptor(
      name: "SubmitAccessReview",
      path: "/proto.AuthService/SubmitAccessReview",
      type: GRPCCallType.unary
    )

    internal static let getAccessCapabilities = GRPCMethodDescriptor(
      name: "GetAccessCapabilities",
      path: "/proto.AuthService/GetAccessCapabilities",
      type: GRPCCallType.unary
    )

    internal static let getAccessRequestAllowedPromotions = GRPCMethodDescriptor(
      name: "GetAccessRequestAllowedPromotions",
      path: "/proto.AuthService/GetAccessRequestAllowedPromotions",
      type: GRPCCallType.unary
    )

    internal static let getPluginData = GRPCMethodDescriptor(
      name: "GetPluginData",
      path: "/proto.AuthService/GetPluginData",
      type: GRPCCallType.unary
    )

    internal static let updatePluginData = GRPCMethodDescriptor(
      name: "UpdatePluginData",
      path: "/proto.AuthService/UpdatePluginData",
      type: GRPCCallType.unary
    )

    internal static let ping = GRPCMethodDescriptor(
      name: "Ping",
      path: "/proto.AuthService/Ping",
      type: GRPCCallType.unary
    )

    internal static let getResetPasswordToken = GRPCMethodDescriptor(
      name: "GetResetPasswordToken",
      path: "/proto.AuthService/GetResetPasswordToken",
      type: GRPCCallType.unary
    )

    internal static let createResetPasswordToken = GRPCMethodDescriptor(
      name: "CreateResetPasswordToken",
      path: "/proto.AuthService/CreateResetPasswordToken",
      type: GRPCCallType.unary
    )

    internal static let createBot = GRPCMethodDescriptor(
      name: "CreateBot",
      path: "/proto.AuthService/CreateBot",
      type: GRPCCallType.unary
    )

    internal static let deleteBot = GRPCMethodDescriptor(
      name: "DeleteBot",
      path: "/proto.AuthService/DeleteBot",
      type: GRPCCallType.unary
    )

    internal static let getBotUsers = GRPCMethodDescriptor(
      name: "GetBotUsers",
      path: "/proto.AuthService/GetBotUsers",
      type: GRPCCallType.serverStreaming
    )

    internal static let getUser = GRPCMethodDescriptor(
      name: "GetUser",
      path: "/proto.AuthService/GetUser",
      type: GRPCCallType.unary
    )

    internal static let getCurrentUser = GRPCMethodDescriptor(
      name: "GetCurrentUser",
      path: "/proto.AuthService/GetCurrentUser",
      type: GRPCCallType.unary
    )

    internal static let getCurrentUserRoles = GRPCMethodDescriptor(
      name: "GetCurrentUserRoles",
      path: "/proto.AuthService/GetCurrentUserRoles",
      type: GRPCCallType.serverStreaming
    )

    internal static let getUsers = GRPCMethodDescriptor(
      name: "GetUsers",
      path: "/proto.AuthService/GetUsers",
      type: GRPCCallType.serverStreaming
    )

    internal static let createUser = GRPCMethodDescriptor(
      name: "CreateUser",
      path: "/proto.AuthService/CreateUser",
      type: GRPCCallType.unary
    )

    internal static let updateUser = GRPCMethodDescriptor(
      name: "UpdateUser",
      path: "/proto.AuthService/UpdateUser",
      type: GRPCCallType.unary
    )

    internal static let deleteUser = GRPCMethodDescriptor(
      name: "DeleteUser",
      path: "/proto.AuthService/DeleteUser",
      type: GRPCCallType.unary
    )

    internal static let changePassword = GRPCMethodDescriptor(
      name: "ChangePassword",
      path: "/proto.AuthService/ChangePassword",
      type: GRPCCallType.unary
    )

    internal static let acquireSemaphore = GRPCMethodDescriptor(
      name: "AcquireSemaphore",
      path: "/proto.AuthService/AcquireSemaphore",
      type: GRPCCallType.unary
    )

    internal static let keepAliveSemaphoreLease = GRPCMethodDescriptor(
      name: "KeepAliveSemaphoreLease",
      path: "/proto.AuthService/KeepAliveSemaphoreLease",
      type: GRPCCallType.unary
    )

    internal static let cancelSemaphoreLease = GRPCMethodDescriptor(
      name: "CancelSemaphoreLease",
      path: "/proto.AuthService/CancelSemaphoreLease",
      type: GRPCCallType.unary
    )

    internal static let getSemaphores = GRPCMethodDescriptor(
      name: "GetSemaphores",
      path: "/proto.AuthService/GetSemaphores",
      type: GRPCCallType.unary
    )

    internal static let deleteSemaphore = GRPCMethodDescriptor(
      name: "DeleteSemaphore",
      path: "/proto.AuthService/DeleteSemaphore",
      type: GRPCCallType.unary
    )

    internal static let emitAuditEvent = GRPCMethodDescriptor(
      name: "EmitAuditEvent",
      path: "/proto.AuthService/EmitAuditEvent",
      type: GRPCCallType.unary
    )

    internal static let createAuditStream = GRPCMethodDescriptor(
      name: "CreateAuditStream",
      path: "/proto.AuthService/CreateAuditStream",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let upsertApplicationServer = GRPCMethodDescriptor(
      name: "UpsertApplicationServer",
      path: "/proto.AuthService/UpsertApplicationServer",
      type: GRPCCallType.unary
    )

    internal static let deleteApplicationServer = GRPCMethodDescriptor(
      name: "DeleteApplicationServer",
      path: "/proto.AuthService/DeleteApplicationServer",
      type: GRPCCallType.unary
    )

    internal static let deleteAllApplicationServers = GRPCMethodDescriptor(
      name: "DeleteAllApplicationServers",
      path: "/proto.AuthService/DeleteAllApplicationServers",
      type: GRPCCallType.unary
    )

    internal static let generateAppToken = GRPCMethodDescriptor(
      name: "GenerateAppToken",
      path: "/proto.AuthService/GenerateAppToken",
      type: GRPCCallType.unary
    )

    internal static let getAppSession = GRPCMethodDescriptor(
      name: "GetAppSession",
      path: "/proto.AuthService/GetAppSession",
      type: GRPCCallType.unary
    )

    internal static let listAppSessions = GRPCMethodDescriptor(
      name: "ListAppSessions",
      path: "/proto.AuthService/ListAppSessions",
      type: GRPCCallType.unary
    )

    internal static let createAppSession = GRPCMethodDescriptor(
      name: "CreateAppSession",
      path: "/proto.AuthService/CreateAppSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAppSession = GRPCMethodDescriptor(
      name: "DeleteAppSession",
      path: "/proto.AuthService/DeleteAppSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllAppSessions = GRPCMethodDescriptor(
      name: "DeleteAllAppSessions",
      path: "/proto.AuthService/DeleteAllAppSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteUserAppSessions = GRPCMethodDescriptor(
      name: "DeleteUserAppSessions",
      path: "/proto.AuthService/DeleteUserAppSessions",
      type: GRPCCallType.unary
    )

    internal static let createSnowflakeSession = GRPCMethodDescriptor(
      name: "CreateSnowflakeSession",
      path: "/proto.AuthService/CreateSnowflakeSession",
      type: GRPCCallType.unary
    )

    internal static let getSnowflakeSession = GRPCMethodDescriptor(
      name: "GetSnowflakeSession",
      path: "/proto.AuthService/GetSnowflakeSession",
      type: GRPCCallType.unary
    )

    internal static let getSnowflakeSessions = GRPCMethodDescriptor(
      name: "GetSnowflakeSessions",
      path: "/proto.AuthService/GetSnowflakeSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteSnowflakeSession = GRPCMethodDescriptor(
      name: "DeleteSnowflakeSession",
      path: "/proto.AuthService/DeleteSnowflakeSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllSnowflakeSessions = GRPCMethodDescriptor(
      name: "DeleteAllSnowflakeSessions",
      path: "/proto.AuthService/DeleteAllSnowflakeSessions",
      type: GRPCCallType.unary
    )

    internal static let createSAMLIdPSession = GRPCMethodDescriptor(
      name: "CreateSAMLIdPSession",
      path: "/proto.AuthService/CreateSAMLIdPSession",
      type: GRPCCallType.unary
    )

    internal static let getSAMLIdPSession = GRPCMethodDescriptor(
      name: "GetSAMLIdPSession",
      path: "/proto.AuthService/GetSAMLIdPSession",
      type: GRPCCallType.unary
    )

    internal static let listSAMLIdPSessions = GRPCMethodDescriptor(
      name: "ListSAMLIdPSessions",
      path: "/proto.AuthService/ListSAMLIdPSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteSAMLIdPSession = GRPCMethodDescriptor(
      name: "DeleteSAMLIdPSession",
      path: "/proto.AuthService/DeleteSAMLIdPSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllSAMLIdPSessions = GRPCMethodDescriptor(
      name: "DeleteAllSAMLIdPSessions",
      path: "/proto.AuthService/DeleteAllSAMLIdPSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteUserSAMLIdPSessions = GRPCMethodDescriptor(
      name: "DeleteUserSAMLIdPSessions",
      path: "/proto.AuthService/DeleteUserSAMLIdPSessions",
      type: GRPCCallType.unary
    )

    internal static let getWebSession = GRPCMethodDescriptor(
      name: "GetWebSession",
      path: "/proto.AuthService/GetWebSession",
      type: GRPCCallType.unary
    )

    internal static let getWebSessions = GRPCMethodDescriptor(
      name: "GetWebSessions",
      path: "/proto.AuthService/GetWebSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteWebSession = GRPCMethodDescriptor(
      name: "DeleteWebSession",
      path: "/proto.AuthService/DeleteWebSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWebSessions = GRPCMethodDescriptor(
      name: "DeleteAllWebSessions",
      path: "/proto.AuthService/DeleteAllWebSessions",
      type: GRPCCallType.unary
    )

    internal static let getWebToken = GRPCMethodDescriptor(
      name: "GetWebToken",
      path: "/proto.AuthService/GetWebToken",
      type: GRPCCallType.unary
    )

    internal static let getWebTokens = GRPCMethodDescriptor(
      name: "GetWebTokens",
      path: "/proto.AuthService/GetWebTokens",
      type: GRPCCallType.unary
    )

    internal static let deleteWebToken = GRPCMethodDescriptor(
      name: "DeleteWebToken",
      path: "/proto.AuthService/DeleteWebToken",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWebTokens = GRPCMethodDescriptor(
      name: "DeleteAllWebTokens",
      path: "/proto.AuthService/DeleteAllWebTokens",
      type: GRPCCallType.unary
    )

    internal static let updateRemoteCluster = GRPCMethodDescriptor(
      name: "UpdateRemoteCluster",
      path: "/proto.AuthService/UpdateRemoteCluster",
      type: GRPCCallType.unary
    )

    internal static let upsertKubernetesServer = GRPCMethodDescriptor(
      name: "UpsertKubernetesServer",
      path: "/proto.AuthService/UpsertKubernetesServer",
      type: GRPCCallType.unary
    )

    internal static let deleteKubernetesServer = GRPCMethodDescriptor(
      name: "DeleteKubernetesServer",
      path: "/proto.AuthService/DeleteKubernetesServer",
      type: GRPCCallType.unary
    )

    internal static let deleteAllKubernetesServers = GRPCMethodDescriptor(
      name: "DeleteAllKubernetesServers",
      path: "/proto.AuthService/DeleteAllKubernetesServers",
      type: GRPCCallType.unary
    )

    internal static let upsertDatabaseServer = GRPCMethodDescriptor(
      name: "UpsertDatabaseServer",
      path: "/proto.AuthService/UpsertDatabaseServer",
      type: GRPCCallType.unary
    )

    internal static let deleteDatabaseServer = GRPCMethodDescriptor(
      name: "DeleteDatabaseServer",
      path: "/proto.AuthService/DeleteDatabaseServer",
      type: GRPCCallType.unary
    )

    internal static let deleteAllDatabaseServers = GRPCMethodDescriptor(
      name: "DeleteAllDatabaseServers",
      path: "/proto.AuthService/DeleteAllDatabaseServers",
      type: GRPCCallType.unary
    )

    internal static let upsertDatabaseService = GRPCMethodDescriptor(
      name: "UpsertDatabaseService",
      path: "/proto.AuthService/UpsertDatabaseService",
      type: GRPCCallType.unary
    )

    internal static let deleteDatabaseService = GRPCMethodDescriptor(
      name: "DeleteDatabaseService",
      path: "/proto.AuthService/DeleteDatabaseService",
      type: GRPCCallType.unary
    )

    internal static let deleteAllDatabaseServices = GRPCMethodDescriptor(
      name: "DeleteAllDatabaseServices",
      path: "/proto.AuthService/DeleteAllDatabaseServices",
      type: GRPCCallType.unary
    )

    internal static let signDatabaseCSR = GRPCMethodDescriptor(
      name: "SignDatabaseCSR",
      path: "/proto.AuthService/SignDatabaseCSR",
      type: GRPCCallType.unary
    )

    internal static let generateDatabaseCert = GRPCMethodDescriptor(
      name: "GenerateDatabaseCert",
      path: "/proto.AuthService/GenerateDatabaseCert",
      type: GRPCCallType.unary
    )

    internal static let generateSnowflakeJWT = GRPCMethodDescriptor(
      name: "GenerateSnowflakeJWT",
      path: "/proto.AuthService/GenerateSnowflakeJWT",
      type: GRPCCallType.unary
    )

    internal static let getRole = GRPCMethodDescriptor(
      name: "GetRole",
      path: "/proto.AuthService/GetRole",
      type: GRPCCallType.unary
    )

    internal static let getRoles = GRPCMethodDescriptor(
      name: "GetRoles",
      path: "/proto.AuthService/GetRoles",
      type: GRPCCallType.unary
    )

    internal static let createRole = GRPCMethodDescriptor(
      name: "CreateRole",
      path: "/proto.AuthService/CreateRole",
      type: GRPCCallType.unary
    )

    internal static let updateRole = GRPCMethodDescriptor(
      name: "UpdateRole",
      path: "/proto.AuthService/UpdateRole",
      type: GRPCCallType.unary
    )

    internal static let upsertRoleV2 = GRPCMethodDescriptor(
      name: "UpsertRoleV2",
      path: "/proto.AuthService/UpsertRoleV2",
      type: GRPCCallType.unary
    )

    internal static let upsertRole = GRPCMethodDescriptor(
      name: "UpsertRole",
      path: "/proto.AuthService/UpsertRole",
      type: GRPCCallType.unary
    )

    internal static let deleteRole = GRPCMethodDescriptor(
      name: "DeleteRole",
      path: "/proto.AuthService/DeleteRole",
      type: GRPCCallType.unary
    )

    internal static let addMFADevice = GRPCMethodDescriptor(
      name: "AddMFADevice",
      path: "/proto.AuthService/AddMFADevice",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let deleteMFADevice = GRPCMethodDescriptor(
      name: "DeleteMFADevice",
      path: "/proto.AuthService/DeleteMFADevice",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let addMFADeviceSync = GRPCMethodDescriptor(
      name: "AddMFADeviceSync",
      path: "/proto.AuthService/AddMFADeviceSync",
      type: GRPCCallType.unary
    )

    internal static let deleteMFADeviceSync = GRPCMethodDescriptor(
      name: "DeleteMFADeviceSync",
      path: "/proto.AuthService/DeleteMFADeviceSync",
      type: GRPCCallType.unary
    )

    internal static let getMFADevices = GRPCMethodDescriptor(
      name: "GetMFADevices",
      path: "/proto.AuthService/GetMFADevices",
      type: GRPCCallType.unary
    )

    internal static let createAuthenticateChallenge = GRPCMethodDescriptor(
      name: "CreateAuthenticateChallenge",
      path: "/proto.AuthService/CreateAuthenticateChallenge",
      type: GRPCCallType.unary
    )

    internal static let createRegisterChallenge = GRPCMethodDescriptor(
      name: "CreateRegisterChallenge",
      path: "/proto.AuthService/CreateRegisterChallenge",
      type: GRPCCallType.unary
    )

    internal static let getOIDCConnector = GRPCMethodDescriptor(
      name: "GetOIDCConnector",
      path: "/proto.AuthService/GetOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let getOIDCConnectors = GRPCMethodDescriptor(
      name: "GetOIDCConnectors",
      path: "/proto.AuthService/GetOIDCConnectors",
      type: GRPCCallType.unary
    )

    internal static let createOIDCConnector = GRPCMethodDescriptor(
      name: "CreateOIDCConnector",
      path: "/proto.AuthService/CreateOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let updateOIDCConnector = GRPCMethodDescriptor(
      name: "UpdateOIDCConnector",
      path: "/proto.AuthService/UpdateOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertOIDCConnector = GRPCMethodDescriptor(
      name: "UpsertOIDCConnector",
      path: "/proto.AuthService/UpsertOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertOIDCConnectorV2 = GRPCMethodDescriptor(
      name: "UpsertOIDCConnectorV2",
      path: "/proto.AuthService/UpsertOIDCConnectorV2",
      type: GRPCCallType.unary
    )

    internal static let deleteOIDCConnector = GRPCMethodDescriptor(
      name: "DeleteOIDCConnector",
      path: "/proto.AuthService/DeleteOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let createOIDCAuthRequest = GRPCMethodDescriptor(
      name: "CreateOIDCAuthRequest",
      path: "/proto.AuthService/CreateOIDCAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getOIDCAuthRequest = GRPCMethodDescriptor(
      name: "GetOIDCAuthRequest",
      path: "/proto.AuthService/GetOIDCAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getSAMLConnector = GRPCMethodDescriptor(
      name: "GetSAMLConnector",
      path: "/proto.AuthService/GetSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let getSAMLConnectors = GRPCMethodDescriptor(
      name: "GetSAMLConnectors",
      path: "/proto.AuthService/GetSAMLConnectors",
      type: GRPCCallType.unary
    )

    internal static let createSAMLConnector = GRPCMethodDescriptor(
      name: "CreateSAMLConnector",
      path: "/proto.AuthService/CreateSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let updateSAMLConnector = GRPCMethodDescriptor(
      name: "UpdateSAMLConnector",
      path: "/proto.AuthService/UpdateSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertSAMLConnector = GRPCMethodDescriptor(
      name: "UpsertSAMLConnector",
      path: "/proto.AuthService/UpsertSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertSAMLConnectorV2 = GRPCMethodDescriptor(
      name: "UpsertSAMLConnectorV2",
      path: "/proto.AuthService/UpsertSAMLConnectorV2",
      type: GRPCCallType.unary
    )

    internal static let deleteSAMLConnector = GRPCMethodDescriptor(
      name: "DeleteSAMLConnector",
      path: "/proto.AuthService/DeleteSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let createSAMLAuthRequest = GRPCMethodDescriptor(
      name: "CreateSAMLAuthRequest",
      path: "/proto.AuthService/CreateSAMLAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getSAMLAuthRequest = GRPCMethodDescriptor(
      name: "GetSAMLAuthRequest",
      path: "/proto.AuthService/GetSAMLAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getGithubConnector = GRPCMethodDescriptor(
      name: "GetGithubConnector",
      path: "/proto.AuthService/GetGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let getGithubConnectors = GRPCMethodDescriptor(
      name: "GetGithubConnectors",
      path: "/proto.AuthService/GetGithubConnectors",
      type: GRPCCallType.unary
    )

    internal static let createGithubConnector = GRPCMethodDescriptor(
      name: "CreateGithubConnector",
      path: "/proto.AuthService/CreateGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let updateGithubConnector = GRPCMethodDescriptor(
      name: "UpdateGithubConnector",
      path: "/proto.AuthService/UpdateGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertGithubConnector = GRPCMethodDescriptor(
      name: "UpsertGithubConnector",
      path: "/proto.AuthService/UpsertGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertGithubConnectorV2 = GRPCMethodDescriptor(
      name: "UpsertGithubConnectorV2",
      path: "/proto.AuthService/UpsertGithubConnectorV2",
      type: GRPCCallType.unary
    )

    internal static let deleteGithubConnector = GRPCMethodDescriptor(
      name: "DeleteGithubConnector",
      path: "/proto.AuthService/DeleteGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let createGithubAuthRequest = GRPCMethodDescriptor(
      name: "CreateGithubAuthRequest",
      path: "/proto.AuthService/CreateGithubAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getGithubAuthRequest = GRPCMethodDescriptor(
      name: "GetGithubAuthRequest",
      path: "/proto.AuthService/GetGithubAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getSSODiagnosticInfo = GRPCMethodDescriptor(
      name: "GetSSODiagnosticInfo",
      path: "/proto.AuthService/GetSSODiagnosticInfo",
      type: GRPCCallType.unary
    )

    internal static let getServerInfos = GRPCMethodDescriptor(
      name: "GetServerInfos",
      path: "/proto.AuthService/GetServerInfos",
      type: GRPCCallType.serverStreaming
    )

    internal static let getServerInfo = GRPCMethodDescriptor(
      name: "GetServerInfo",
      path: "/proto.AuthService/GetServerInfo",
      type: GRPCCallType.unary
    )

    internal static let upsertServerInfo = GRPCMethodDescriptor(
      name: "UpsertServerInfo",
      path: "/proto.AuthService/UpsertServerInfo",
      type: GRPCCallType.unary
    )

    internal static let deleteServerInfo = GRPCMethodDescriptor(
      name: "DeleteServerInfo",
      path: "/proto.AuthService/DeleteServerInfo",
      type: GRPCCallType.unary
    )

    internal static let deleteAllServerInfos = GRPCMethodDescriptor(
      name: "DeleteAllServerInfos",
      path: "/proto.AuthService/DeleteAllServerInfos",
      type: GRPCCallType.unary
    )

    internal static let getTrustedCluster = GRPCMethodDescriptor(
      name: "GetTrustedCluster",
      path: "/proto.AuthService/GetTrustedCluster",
      type: GRPCCallType.unary
    )

    internal static let getTrustedClusters = GRPCMethodDescriptor(
      name: "GetTrustedClusters",
      path: "/proto.AuthService/GetTrustedClusters",
      type: GRPCCallType.unary
    )

    internal static let upsertTrustedCluster = GRPCMethodDescriptor(
      name: "UpsertTrustedCluster",
      path: "/proto.AuthService/UpsertTrustedCluster",
      type: GRPCCallType.unary
    )

    internal static let deleteTrustedCluster = GRPCMethodDescriptor(
      name: "DeleteTrustedCluster",
      path: "/proto.AuthService/DeleteTrustedCluster",
      type: GRPCCallType.unary
    )

    internal static let getToken = GRPCMethodDescriptor(
      name: "GetToken",
      path: "/proto.AuthService/GetToken",
      type: GRPCCallType.unary
    )

    internal static let getTokens = GRPCMethodDescriptor(
      name: "GetTokens",
      path: "/proto.AuthService/GetTokens",
      type: GRPCCallType.unary
    )

    internal static let createTokenV2 = GRPCMethodDescriptor(
      name: "CreateTokenV2",
      path: "/proto.AuthService/CreateTokenV2",
      type: GRPCCallType.unary
    )

    internal static let upsertTokenV2 = GRPCMethodDescriptor(
      name: "UpsertTokenV2",
      path: "/proto.AuthService/UpsertTokenV2",
      type: GRPCCallType.unary
    )

    internal static let deleteToken = GRPCMethodDescriptor(
      name: "DeleteToken",
      path: "/proto.AuthService/DeleteToken",
      type: GRPCCallType.unary
    )

    internal static let getClusterAuditConfig = GRPCMethodDescriptor(
      name: "GetClusterAuditConfig",
      path: "/proto.AuthService/GetClusterAuditConfig",
      type: GRPCCallType.unary
    )

    internal static let getClusterNetworkingConfig = GRPCMethodDescriptor(
      name: "GetClusterNetworkingConfig",
      path: "/proto.AuthService/GetClusterNetworkingConfig",
      type: GRPCCallType.unary
    )

    internal static let setClusterNetworkingConfig = GRPCMethodDescriptor(
      name: "SetClusterNetworkingConfig",
      path: "/proto.AuthService/SetClusterNetworkingConfig",
      type: GRPCCallType.unary
    )

    internal static let resetClusterNetworkingConfig = GRPCMethodDescriptor(
      name: "ResetClusterNetworkingConfig",
      path: "/proto.AuthService/ResetClusterNetworkingConfig",
      type: GRPCCallType.unary
    )

    internal static let getSessionRecordingConfig = GRPCMethodDescriptor(
      name: "GetSessionRecordingConfig",
      path: "/proto.AuthService/GetSessionRecordingConfig",
      type: GRPCCallType.unary
    )

    internal static let setSessionRecordingConfig = GRPCMethodDescriptor(
      name: "SetSessionRecordingConfig",
      path: "/proto.AuthService/SetSessionRecordingConfig",
      type: GRPCCallType.unary
    )

    internal static let resetSessionRecordingConfig = GRPCMethodDescriptor(
      name: "ResetSessionRecordingConfig",
      path: "/proto.AuthService/ResetSessionRecordingConfig",
      type: GRPCCallType.unary
    )

    internal static let getAuthPreference = GRPCMethodDescriptor(
      name: "GetAuthPreference",
      path: "/proto.AuthService/GetAuthPreference",
      type: GRPCCallType.unary
    )

    internal static let setAuthPreference = GRPCMethodDescriptor(
      name: "SetAuthPreference",
      path: "/proto.AuthService/SetAuthPreference",
      type: GRPCCallType.unary
    )

    internal static let resetAuthPreference = GRPCMethodDescriptor(
      name: "ResetAuthPreference",
      path: "/proto.AuthService/ResetAuthPreference",
      type: GRPCCallType.unary
    )

    internal static let getUIConfig = GRPCMethodDescriptor(
      name: "GetUIConfig",
      path: "/proto.AuthService/GetUIConfig",
      type: GRPCCallType.unary
    )

    internal static let setUIConfig = GRPCMethodDescriptor(
      name: "SetUIConfig",
      path: "/proto.AuthService/SetUIConfig",
      type: GRPCCallType.unary
    )

    internal static let deleteUIConfig = GRPCMethodDescriptor(
      name: "DeleteUIConfig",
      path: "/proto.AuthService/DeleteUIConfig",
      type: GRPCCallType.unary
    )

    internal static let getEvents = GRPCMethodDescriptor(
      name: "GetEvents",
      path: "/proto.AuthService/GetEvents",
      type: GRPCCallType.unary
    )

    internal static let getSessionEvents = GRPCMethodDescriptor(
      name: "GetSessionEvents",
      path: "/proto.AuthService/GetSessionEvents",
      type: GRPCCallType.unary
    )

    internal static let getLock = GRPCMethodDescriptor(
      name: "GetLock",
      path: "/proto.AuthService/GetLock",
      type: GRPCCallType.unary
    )

    internal static let getLocks = GRPCMethodDescriptor(
      name: "GetLocks",
      path: "/proto.AuthService/GetLocks",
      type: GRPCCallType.unary
    )

    internal static let upsertLock = GRPCMethodDescriptor(
      name: "UpsertLock",
      path: "/proto.AuthService/UpsertLock",
      type: GRPCCallType.unary
    )

    internal static let deleteLock = GRPCMethodDescriptor(
      name: "DeleteLock",
      path: "/proto.AuthService/DeleteLock",
      type: GRPCCallType.unary
    )

    internal static let replaceRemoteLocks = GRPCMethodDescriptor(
      name: "ReplaceRemoteLocks",
      path: "/proto.AuthService/ReplaceRemoteLocks",
      type: GRPCCallType.unary
    )

    internal static let streamSessionEvents = GRPCMethodDescriptor(
      name: "StreamSessionEvents",
      path: "/proto.AuthService/StreamSessionEvents",
      type: GRPCCallType.serverStreaming
    )

    internal static let getNetworkRestrictions = GRPCMethodDescriptor(
      name: "GetNetworkRestrictions",
      path: "/proto.AuthService/GetNetworkRestrictions",
      type: GRPCCallType.unary
    )

    internal static let setNetworkRestrictions = GRPCMethodDescriptor(
      name: "SetNetworkRestrictions",
      path: "/proto.AuthService/SetNetworkRestrictions",
      type: GRPCCallType.unary
    )

    internal static let deleteNetworkRestrictions = GRPCMethodDescriptor(
      name: "DeleteNetworkRestrictions",
      path: "/proto.AuthService/DeleteNetworkRestrictions",
      type: GRPCCallType.unary
    )

    internal static let getApps = GRPCMethodDescriptor(
      name: "GetApps",
      path: "/proto.AuthService/GetApps",
      type: GRPCCallType.unary
    )

    internal static let getApp = GRPCMethodDescriptor(
      name: "GetApp",
      path: "/proto.AuthService/GetApp",
      type: GRPCCallType.unary
    )

    internal static let createApp = GRPCMethodDescriptor(
      name: "CreateApp",
      path: "/proto.AuthService/CreateApp",
      type: GRPCCallType.unary
    )

    internal static let updateApp = GRPCMethodDescriptor(
      name: "UpdateApp",
      path: "/proto.AuthService/UpdateApp",
      type: GRPCCallType.unary
    )

    internal static let deleteApp = GRPCMethodDescriptor(
      name: "DeleteApp",
      path: "/proto.AuthService/DeleteApp",
      type: GRPCCallType.unary
    )

    internal static let deleteAllApps = GRPCMethodDescriptor(
      name: "DeleteAllApps",
      path: "/proto.AuthService/DeleteAllApps",
      type: GRPCCallType.unary
    )

    internal static let getDatabases = GRPCMethodDescriptor(
      name: "GetDatabases",
      path: "/proto.AuthService/GetDatabases",
      type: GRPCCallType.unary
    )

    internal static let getDatabase = GRPCMethodDescriptor(
      name: "GetDatabase",
      path: "/proto.AuthService/GetDatabase",
      type: GRPCCallType.unary
    )

    internal static let createDatabase = GRPCMethodDescriptor(
      name: "CreateDatabase",
      path: "/proto.AuthService/CreateDatabase",
      type: GRPCCallType.unary
    )

    internal static let updateDatabase = GRPCMethodDescriptor(
      name: "UpdateDatabase",
      path: "/proto.AuthService/UpdateDatabase",
      type: GRPCCallType.unary
    )

    internal static let deleteDatabase = GRPCMethodDescriptor(
      name: "DeleteDatabase",
      path: "/proto.AuthService/DeleteDatabase",
      type: GRPCCallType.unary
    )

    internal static let deleteAllDatabases = GRPCMethodDescriptor(
      name: "DeleteAllDatabases",
      path: "/proto.AuthService/DeleteAllDatabases",
      type: GRPCCallType.unary
    )

    internal static let getKubernetesClusters = GRPCMethodDescriptor(
      name: "GetKubernetesClusters",
      path: "/proto.AuthService/GetKubernetesClusters",
      type: GRPCCallType.unary
    )

    internal static let getKubernetesCluster = GRPCMethodDescriptor(
      name: "GetKubernetesCluster",
      path: "/proto.AuthService/GetKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let createKubernetesCluster = GRPCMethodDescriptor(
      name: "CreateKubernetesCluster",
      path: "/proto.AuthService/CreateKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let updateKubernetesCluster = GRPCMethodDescriptor(
      name: "UpdateKubernetesCluster",
      path: "/proto.AuthService/UpdateKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let deleteKubernetesCluster = GRPCMethodDescriptor(
      name: "DeleteKubernetesCluster",
      path: "/proto.AuthService/DeleteKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let deleteAllKubernetesClusters = GRPCMethodDescriptor(
      name: "DeleteAllKubernetesClusters",
      path: "/proto.AuthService/DeleteAllKubernetesClusters",
      type: GRPCCallType.unary
    )

    internal static let getWindowsDesktopServices = GRPCMethodDescriptor(
      name: "GetWindowsDesktopServices",
      path: "/proto.AuthService/GetWindowsDesktopServices",
      type: GRPCCallType.unary
    )

    internal static let getWindowsDesktopService = GRPCMethodDescriptor(
      name: "GetWindowsDesktopService",
      path: "/proto.AuthService/GetWindowsDesktopService",
      type: GRPCCallType.unary
    )

    internal static let upsertWindowsDesktopService = GRPCMethodDescriptor(
      name: "UpsertWindowsDesktopService",
      path: "/proto.AuthService/UpsertWindowsDesktopService",
      type: GRPCCallType.unary
    )

    internal static let deleteWindowsDesktopService = GRPCMethodDescriptor(
      name: "DeleteWindowsDesktopService",
      path: "/proto.AuthService/DeleteWindowsDesktopService",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWindowsDesktopServices = GRPCMethodDescriptor(
      name: "DeleteAllWindowsDesktopServices",
      path: "/proto.AuthService/DeleteAllWindowsDesktopServices",
      type: GRPCCallType.unary
    )

    internal static let getWindowsDesktops = GRPCMethodDescriptor(
      name: "GetWindowsDesktops",
      path: "/proto.AuthService/GetWindowsDesktops",
      type: GRPCCallType.unary
    )

    internal static let createWindowsDesktop = GRPCMethodDescriptor(
      name: "CreateWindowsDesktop",
      path: "/proto.AuthService/CreateWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let updateWindowsDesktop = GRPCMethodDescriptor(
      name: "UpdateWindowsDesktop",
      path: "/proto.AuthService/UpdateWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let upsertWindowsDesktop = GRPCMethodDescriptor(
      name: "UpsertWindowsDesktop",
      path: "/proto.AuthService/UpsertWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let deleteWindowsDesktop = GRPCMethodDescriptor(
      name: "DeleteWindowsDesktop",
      path: "/proto.AuthService/DeleteWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWindowsDesktops = GRPCMethodDescriptor(
      name: "DeleteAllWindowsDesktops",
      path: "/proto.AuthService/DeleteAllWindowsDesktops",
      type: GRPCCallType.unary
    )

    internal static let generateWindowsDesktopCert = GRPCMethodDescriptor(
      name: "GenerateWindowsDesktopCert",
      path: "/proto.AuthService/GenerateWindowsDesktopCert",
      type: GRPCCallType.unary
    )

    internal static let generateCertAuthorityCRL = GRPCMethodDescriptor(
      name: "GenerateCertAuthorityCRL",
      path: "/proto.AuthService/GenerateCertAuthorityCRL",
      type: GRPCCallType.unary
    )

    internal static let createConnectionDiagnostic = GRPCMethodDescriptor(
      name: "CreateConnectionDiagnostic",
      path: "/proto.AuthService/CreateConnectionDiagnostic",
      type: GRPCCallType.unary
    )

    internal static let updateConnectionDiagnostic = GRPCMethodDescriptor(
      name: "UpdateConnectionDiagnostic",
      path: "/proto.AuthService/UpdateConnectionDiagnostic",
      type: GRPCCallType.unary
    )

    internal static let getConnectionDiagnostic = GRPCMethodDescriptor(
      name: "GetConnectionDiagnostic",
      path: "/proto.AuthService/GetConnectionDiagnostic",
      type: GRPCCallType.unary
    )

    internal static let appendDiagnosticTrace = GRPCMethodDescriptor(
      name: "AppendDiagnosticTrace",
      path: "/proto.AuthService/AppendDiagnosticTrace",
      type: GRPCCallType.unary
    )

    internal static let changeUserAuthentication = GRPCMethodDescriptor(
      name: "ChangeUserAuthentication",
      path: "/proto.AuthService/ChangeUserAuthentication",
      type: GRPCCallType.unary
    )

    internal static let startAccountRecovery = GRPCMethodDescriptor(
      name: "StartAccountRecovery",
      path: "/proto.AuthService/StartAccountRecovery",
      type: GRPCCallType.unary
    )

    internal static let verifyAccountRecovery = GRPCMethodDescriptor(
      name: "VerifyAccountRecovery",
      path: "/proto.AuthService/VerifyAccountRecovery",
      type: GRPCCallType.unary
    )

    internal static let completeAccountRecovery = GRPCMethodDescriptor(
      name: "CompleteAccountRecovery",
      path: "/proto.AuthService/CompleteAccountRecovery",
      type: GRPCCallType.unary
    )

    internal static let createAccountRecoveryCodes = GRPCMethodDescriptor(
      name: "CreateAccountRecoveryCodes",
      path: "/proto.AuthService/CreateAccountRecoveryCodes",
      type: GRPCCallType.unary
    )

    internal static let getAccountRecoveryToken = GRPCMethodDescriptor(
      name: "GetAccountRecoveryToken",
      path: "/proto.AuthService/GetAccountRecoveryToken",
      type: GRPCCallType.unary
    )

    internal static let getAccountRecoveryCodes = GRPCMethodDescriptor(
      name: "GetAccountRecoveryCodes",
      path: "/proto.AuthService/GetAccountRecoveryCodes",
      type: GRPCCallType.unary
    )

    internal static let createPrivilegeToken = GRPCMethodDescriptor(
      name: "CreatePrivilegeToken",
      path: "/proto.AuthService/CreatePrivilegeToken",
      type: GRPCCallType.unary
    )

    internal static let getInstaller = GRPCMethodDescriptor(
      name: "GetInstaller",
      path: "/proto.AuthService/GetInstaller",
      type: GRPCCallType.unary
    )

    internal static let getInstallers = GRPCMethodDescriptor(
      name: "GetInstallers",
      path: "/proto.AuthService/GetInstallers",
      type: GRPCCallType.unary
    )

    internal static let setInstaller = GRPCMethodDescriptor(
      name: "SetInstaller",
      path: "/proto.AuthService/SetInstaller",
      type: GRPCCallType.unary
    )

    internal static let deleteInstaller = GRPCMethodDescriptor(
      name: "DeleteInstaller",
      path: "/proto.AuthService/DeleteInstaller",
      type: GRPCCallType.unary
    )

    internal static let deleteAllInstallers = GRPCMethodDescriptor(
      name: "DeleteAllInstallers",
      path: "/proto.AuthService/DeleteAllInstallers",
      type: GRPCCallType.unary
    )

    internal static let listResources = GRPCMethodDescriptor(
      name: "ListResources",
      path: "/proto.AuthService/ListResources",
      type: GRPCCallType.unary
    )

    internal static let listUnifiedResources = GRPCMethodDescriptor(
      name: "ListUnifiedResources",
      path: "/proto.AuthService/ListUnifiedResources",
      type: GRPCCallType.unary
    )

    internal static let getSSHTargets = GRPCMethodDescriptor(
      name: "GetSSHTargets",
      path: "/proto.AuthService/GetSSHTargets",
      type: GRPCCallType.unary
    )

    internal static let getDomainName = GRPCMethodDescriptor(
      name: "GetDomainName",
      path: "/proto.AuthService/GetDomainName",
      type: GRPCCallType.unary
    )

    internal static let getClusterCACert = GRPCMethodDescriptor(
      name: "GetClusterCACert",
      path: "/proto.AuthService/GetClusterCACert",
      type: GRPCCallType.unary
    )

    internal static let submitUsageEvent = GRPCMethodDescriptor(
      name: "SubmitUsageEvent",
      path: "/proto.AuthService/SubmitUsageEvent",
      type: GRPCCallType.unary
    )

    internal static let getLicense = GRPCMethodDescriptor(
      name: "GetLicense",
      path: "/proto.AuthService/GetLicense",
      type: GRPCCallType.unary
    )

    internal static let listReleases = GRPCMethodDescriptor(
      name: "ListReleases",
      path: "/proto.AuthService/ListReleases",
      type: GRPCCallType.unary
    )

    internal static let listSAMLIdPServiceProviders = GRPCMethodDescriptor(
      name: "ListSAMLIdPServiceProviders",
      path: "/proto.AuthService/ListSAMLIdPServiceProviders",
      type: GRPCCallType.unary
    )

    internal static let getSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "GetSAMLIdPServiceProvider",
      path: "/proto.AuthService/GetSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let createSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "CreateSAMLIdPServiceProvider",
      path: "/proto.AuthService/CreateSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let updateSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "UpdateSAMLIdPServiceProvider",
      path: "/proto.AuthService/UpdateSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let deleteSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "DeleteSAMLIdPServiceProvider",
      path: "/proto.AuthService/DeleteSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let deleteAllSAMLIdPServiceProviders = GRPCMethodDescriptor(
      name: "DeleteAllSAMLIdPServiceProviders",
      path: "/proto.AuthService/DeleteAllSAMLIdPServiceProviders",
      type: GRPCCallType.unary
    )

    internal static let listUserGroups = GRPCMethodDescriptor(
      name: "ListUserGroups",
      path: "/proto.AuthService/ListUserGroups",
      type: GRPCCallType.unary
    )

    internal static let getUserGroup = GRPCMethodDescriptor(
      name: "GetUserGroup",
      path: "/proto.AuthService/GetUserGroup",
      type: GRPCCallType.unary
    )

    internal static let createUserGroup = GRPCMethodDescriptor(
      name: "CreateUserGroup",
      path: "/proto.AuthService/CreateUserGroup",
      type: GRPCCallType.unary
    )

    internal static let updateUserGroup = GRPCMethodDescriptor(
      name: "UpdateUserGroup",
      path: "/proto.AuthService/UpdateUserGroup",
      type: GRPCCallType.unary
    )

    internal static let deleteUserGroup = GRPCMethodDescriptor(
      name: "DeleteUserGroup",
      path: "/proto.AuthService/DeleteUserGroup",
      type: GRPCCallType.unary
    )

    internal static let deleteAllUserGroups = GRPCMethodDescriptor(
      name: "DeleteAllUserGroups",
      path: "/proto.AuthService/DeleteAllUserGroups",
      type: GRPCCallType.unary
    )

    internal static let getHeadlessAuthentication = GRPCMethodDescriptor(
      name: "GetHeadlessAuthentication",
      path: "/proto.AuthService/GetHeadlessAuthentication",
      type: GRPCCallType.unary
    )

    internal static let watchPendingHeadlessAuthentications = GRPCMethodDescriptor(
      name: "WatchPendingHeadlessAuthentications",
      path: "/proto.AuthService/WatchPendingHeadlessAuthentications",
      type: GRPCCallType.serverStreaming
    )

    internal static let updateHeadlessAuthenticationState = GRPCMethodDescriptor(
      name: "UpdateHeadlessAuthenticationState",
      path: "/proto.AuthService/UpdateHeadlessAuthenticationState",
      type: GRPCCallType.unary
    )

    internal static let exportUpgradeWindows = GRPCMethodDescriptor(
      name: "ExportUpgradeWindows",
      path: "/proto.AuthService/ExportUpgradeWindows",
      type: GRPCCallType.unary
    )

    internal static let getClusterMaintenanceConfig = GRPCMethodDescriptor(
      name: "GetClusterMaintenanceConfig",
      path: "/proto.AuthService/GetClusterMaintenanceConfig",
      type: GRPCCallType.unary
    )

    internal static let updateClusterMaintenanceConfig = GRPCMethodDescriptor(
      name: "UpdateClusterMaintenanceConfig",
      path: "/proto.AuthService/UpdateClusterMaintenanceConfig",
      type: GRPCCallType.unary
    )

    internal static let deleteClusterMaintenanceConfig = GRPCMethodDescriptor(
      name: "DeleteClusterMaintenanceConfig",
      path: "/proto.AuthService/DeleteClusterMaintenanceConfig",
      type: GRPCCallType.unary
    )
  }
}

/// AuthService is authentication/authorization service implementation
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Proto_AuthServiceProvider: CallHandlerProvider {
  var interceptors: Proto_AuthServiceServerInterceptorFactoryProtocol? { get }

  /// InventoryControlStream is the per-instance stream used to advertise teleport instance
  /// presence/version/etc to the auth server.
  func inventoryControlStream(context: StreamingResponseCallContext<Proto_DownstreamInventoryOneOf>) -> EventLoopFuture<(StreamEvent<Proto_UpstreamInventoryOneOf>) -> Void>

  /// GetInventoryStatus gets information about current instance inventory.
  func getInventoryStatus(request: Proto_InventoryStatusRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_InventoryStatusSummary>

  /// GetInventoryConnectedServiceCounts returns the counts of each connected service seen in the inventory.
  func getInventoryConnectedServiceCounts(request: Proto_InventoryConnectedServiceCountsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_InventoryConnectedServiceCounts>

  /// PingInventory attempts to trigger a downstream inventory ping (used in testing/debug).
  func pingInventory(request: Proto_InventoryPingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_InventoryPingResponse>

  /// GetInstances streams all instances matching the specified filter.
  func getInstances(request: Types_InstanceFilter, context: StreamingResponseCallContext<Types_InstanceV1>) -> EventLoopFuture<GRPCStatus>

  /// GetClusterAlerts loads cluster-level alert messages.
  func getClusterAlerts(request: Types_GetClusterAlertsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetClusterAlertsResponse>

  /// UpsertClusterAlert creates a cluster alert.
  func upsertClusterAlert(request: Proto_UpsertClusterAlertRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateAlertAck marks a cluster alert as acknowledged.
  func createAlertAck(request: Types_AlertAcknowledgement, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetAlertAcks gets active alert ackowledgements.
  func getAlertAcks(request: Proto_GetAlertAcksRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetAlertAcksResponse>

  /// ClearAlertAcks clears alert acknowledgments.
  func clearAlertAcks(request: Proto_ClearAlertAcksRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// MaintainSessionPresence establishes a channel used to continously verify the presence for a
  /// session.
  func maintainSessionPresence(context: StreamingResponseCallContext<Proto_MFAAuthenticateChallenge>) -> EventLoopFuture<(StreamEvent<Proto_PresenceMFAChallengeSend>) -> Void>

  /// CreateSessionTracker creates a new session tracker resource.
  func createSessionTracker(request: Proto_CreateSessionTrackerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SessionTrackerV1>

  /// GetSessionTracker fetches a session tracker resource.
  func getSessionTracker(request: Proto_GetSessionTrackerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SessionTrackerV1>

  /// GetActiveSessionTrackers returns a list of active sessions.
  func getActiveSessionTrackers(request: SwiftProtobuf.Google_Protobuf_Empty, context: StreamingResponseCallContext<Types_SessionTrackerV1>) -> EventLoopFuture<GRPCStatus>

  /// GetActiveSessionTrackersWithFilter returns a list of active sessions filtered by a filter.
  func getActiveSessionTrackersWithFilter(request: Types_SessionTrackerFilter, context: StreamingResponseCallContext<Types_SessionTrackerV1>) -> EventLoopFuture<GRPCStatus>

  /// RemoveSessionTracker removes a session tracker resource.
  func removeSessionTracker(request: Proto_RemoveSessionTrackerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateSessionTracker updates some state of a session tracker.
  func updateSessionTracker(request: Proto_UpdateSessionTrackerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// SendKeepAlives allows node to send a stream of keep alive requests
  func sendKeepAlives(context: UnaryResponseCallContext<SwiftProtobuf.Google_Protobuf_Empty>) -> EventLoopFuture<(StreamEvent<Types_KeepAlive>) -> Void>

  /// WatchEvents returns a new stream of cluster events
  func watchEvents(request: Proto_Watch, context: StreamingResponseCallContext<Proto_Event>) -> EventLoopFuture<GRPCStatus>

  /// GetNode retrieves a node described by the given request.
  func getNode(request: Types_ResourceInNamespaceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ServerV2>

  /// UpsertNode upserts a node in a backend.
  func upsertNode(request: Types_ServerV2, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KeepAlive>

  /// DeleteNode deletes an existing node in a backend described by the given request.
  func deleteNode(request: Types_ResourceInNamespaceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllNodes deletes all nodes.
  func deleteAllNodes(request: Types_ResourcesInNamespaceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GenerateUserCerts generates a set of user certificates.
  func generateUserCerts(request: Proto_UserCertsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Certs>

  /// GenerateHostCerts generates a set of host certificates.
  func generateHostCerts(request: Proto_HostCertsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Certs>

  /// GenerateUserSingleUseCerts generates a set of single-use user
  /// certificates.
  ///
  /// Deprecated: Superseded by GenerateUserCerts.
  func generateUserSingleUseCerts(context: StreamingResponseCallContext<Proto_UserSingleUseCertsResponse>) -> EventLoopFuture<(StreamEvent<Proto_UserSingleUseCertsRequest>) -> Void>

  /// GenerateOpenSSHCert signs a SSH certificate that can be used
  /// to connect to Agentless nodes.
  func generateOpenSSHCert(request: Proto_OpenSSHCertRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_OpenSSHCert>

  /// IsMFARequired checks whether MFA is required to access the specified
  /// target.
  func isMFARequired(request: Proto_IsMFARequiredRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_IsMFARequiredResponse>

  /// GetAccessRequestsV2 gets all pending access requests.
  func getAccessRequestsV2(request: Types_AccessRequestFilter, context: StreamingResponseCallContext<Types_AccessRequestV3>) -> EventLoopFuture<GRPCStatus>

  /// CreateAccessRequest creates a new access request.
  /// Deprecated: use CreateAccessRequestV2 instead.
  /// DELETE IN v15.0.0.
  func createAccessRequest(request: Types_AccessRequestV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateAccessRequestV2 creates a new access request.
  func createAccessRequestV2(request: Types_AccessRequestV3, context: StatusOnlyCallContext) -> EventLoopFuture<Types_AccessRequestV3>

  /// DeleteAccessRequest deletes an access request.
  func deleteAccessRequest(request: Proto_RequestID, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// SetAccessRequestState sets the state of an access request.
  func setAccessRequestState(request: Proto_RequestStateSetter, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// SubmitAccessReview applies a review to a request and returns the post-application state.
  func submitAccessReview(request: Types_AccessReviewSubmission, context: StatusOnlyCallContext) -> EventLoopFuture<Types_AccessRequestV3>

  /// GetAccessCapabilities requests the access capabilities of a user.
  func getAccessCapabilities(request: Types_AccessCapabilitiesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_AccessCapabilities>

  /// GetAccessRequestAllowedPromotions returns a list of allowed promotions from an access request to an access list.
  func getAccessRequestAllowedPromotions(request: Proto_AccessRequestAllowedPromotionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_AccessRequestAllowedPromotionResponse>

  /// GetPluginData gets all plugin data matching the supplied filter.
  func getPluginData(request: Types_PluginDataFilter, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_PluginDataSeq>

  /// UpdatePluginData updates a plugin's resource-specific datastore.
  func updatePluginData(request: Types_PluginDataUpdateParams, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// Ping gets basic info about the auth server. This method is intended
  /// to mimic the behavior of the proxy's Ping method, and may be used by
  /// clients for verification or configuration on startup.
  func ping(request: Proto_PingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_PingResponse>

  /// GetResetPasswordToken returns a reset password token.
  func getResetPasswordToken(request: Proto_GetResetPasswordTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserTokenV3>

  /// CreateResetPasswordToken resets users current password and second factors and creates a reset
  /// password token.
  func createResetPasswordToken(request: Proto_CreateResetPasswordTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserTokenV3>

  /// CreateBot creates a new bot user.
  func createBot(request: Proto_CreateBotRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_CreateBotResponse>

  /// DeleteBot deletes a bot user.
  func deleteBot(request: Proto_DeleteBotRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetBotUsers gets all users with bot labels.
  func getBotUsers(request: Proto_GetBotUsersRequest, context: StreamingResponseCallContext<Types_UserV2>) -> EventLoopFuture<GRPCStatus>

  /// GetUser gets a user resource by name.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func getUser(request: Proto_GetUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserV2>

  /// GetCurrentUser returns current user as seen by the server.
  /// Useful especially in the context of remote clusters which perform role and trait mapping.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func getCurrentUser(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserV2>

  /// GetCurrentUserRoles returns current user's roles.
  func getCurrentUserRoles(request: SwiftProtobuf.Google_Protobuf_Empty, context: StreamingResponseCallContext<Types_RoleV6>) -> EventLoopFuture<GRPCStatus>

  /// GetUsers gets all current user resources.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func getUsers(request: Proto_GetUsersRequest, context: StreamingResponseCallContext<Types_UserV2>) -> EventLoopFuture<GRPCStatus>

  /// CreateUser inserts a new user entry to a backend.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func createUser(request: Types_UserV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateUser updates an existing user in a backend.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func updateUser(request: Types_UserV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteUser deletes an existing user in a backend by username.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func deleteUser(request: Proto_DeleteUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ChangePassword allows a user to change their own password.
  func changePassword(request: Proto_ChangePasswordRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// AcquireSemaphore acquires lease with requested resources from semaphore.
  func acquireSemaphore(request: Types_AcquireSemaphoreRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SemaphoreLease>

  /// KeepAliveSemaphoreLease updates semaphore lease.
  func keepAliveSemaphoreLease(request: Types_SemaphoreLease, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CancelSemaphoreLease cancels semaphore lease early.
  func cancelSemaphoreLease(request: Types_SemaphoreLease, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetSemaphores returns a list of all semaphores matching the supplied filter.
  func getSemaphores(request: Types_SemaphoreFilter, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Semaphores>

  /// DeleteSemaphore deletes a semaphore matching the supplied filter.
  func deleteSemaphore(request: Types_SemaphoreFilter, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// EmitAuditEvent emits audit event
  func emitAuditEvent(request: Events_OneOf, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateAuditStream creates or resumes audit events streams
  func createAuditStream(context: StreamingResponseCallContext<Events_StreamStatus>) -> EventLoopFuture<(StreamEvent<Proto_AuditStreamRequest>) -> Void>

  /// UpsertApplicationServer adds an application server.
  func upsertApplicationServer(request: Proto_UpsertApplicationServerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KeepAlive>

  /// DeleteApplicationServer removes an application server.
  func deleteApplicationServer(request: Proto_DeleteApplicationServerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllApplicationServers removes all application servers.
  func deleteAllApplicationServers(request: Proto_DeleteAllApplicationServersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GenerateAppToken will generate a JWT token for application access.
  func generateAppToken(request: Proto_GenerateAppTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GenerateAppTokenResponse>

  /// GetAppSession gets an application web session.
  func getAppSession(request: Proto_GetAppSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetAppSessionResponse>

  /// ListAppSessions gets all application web sessions.
  func listAppSessions(request: Proto_ListAppSessionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListAppSessionsResponse>

  /// CreateAppSession creates an application web session. Application web
  /// sessions represent a browser session the client holds.
  func createAppSession(request: Proto_CreateAppSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_CreateAppSessionResponse>

  /// DeleteAppSession removes an application web session.
  func deleteAppSession(request: Proto_DeleteAppSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllAppSessions removes all application web sessions.
  func deleteAllAppSessions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteUserAppSessions deletes all user’s application sessions.
  func deleteUserAppSessions(request: Proto_DeleteUserAppSessionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateSnowflakeSession creates web session with sub kind Snowflake used by Database access
  /// Snowflake integration.
  func createSnowflakeSession(request: Proto_CreateSnowflakeSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_CreateSnowflakeSessionResponse>

  /// GetSnowflakeSession returns a web session with sub kind Snowflake.
  func getSnowflakeSession(request: Proto_GetSnowflakeSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetSnowflakeSessionResponse>

  /// GetSnowflakeSessions gets all Snowflake web sessions.
  func getSnowflakeSessions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetSnowflakeSessionsResponse>

  /// DeleteSnowflakeSession removes a Snowflake web session.
  func deleteSnowflakeSession(request: Proto_DeleteSnowflakeSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllSnowflakeSessions removes all Snowflake web sessions.
  func deleteAllSnowflakeSessions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateSAMLIdPSession creates web session with sub kind saml_idp used by the SAML IdP.
  func createSAMLIdPSession(request: Proto_CreateSAMLIdPSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_CreateSAMLIdPSessionResponse>

  /// GetSAMLIdPSession returns a SAML IdP session with sub kind saml_idp.
  func getSAMLIdPSession(request: Proto_GetSAMLIdPSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetSAMLIdPSessionResponse>

  /// ListSAMLIdPSessions gets all SAML IdP sessions.
  func listSAMLIdPSessions(request: Proto_ListSAMLIdPSessionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListSAMLIdPSessionsResponse>

  /// DeleteSAMLIdPSession removes a SAML IdP session.
  func deleteSAMLIdPSession(request: Proto_DeleteSAMLIdPSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllSAMLIdPSessions removes all SAML IdP sessions.
  func deleteAllSAMLIdPSessions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteUserSAMLIdPSessions deletes all user’s SAML IdP sessions.
  func deleteUserSAMLIdPSessions(request: Proto_DeleteUserSAMLIdPSessionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetWebSession gets a web session.
  func getWebSession(request: Types_GetWebSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWebSessionResponse>

  /// GetWebSessions gets all web sessions.
  func getWebSessions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWebSessionsResponse>

  /// DeleteWebSession deletes a web session.
  func deleteWebSession(request: Types_DeleteWebSessionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllWebSessions deletes all web sessions.
  func deleteAllWebSessions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetWebToken gets a web token.
  func getWebToken(request: Types_GetWebTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWebTokenResponse>

  /// GetWebTokens gets all web tokens.
  func getWebTokens(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWebTokensResponse>

  /// DeleteWebToken deletes a web token.
  func deleteWebToken(request: Types_DeleteWebTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllWebTokens deletes all web tokens.
  func deleteAllWebTokens(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateRemoteCluster updates remote cluster
  func updateRemoteCluster(request: Types_RemoteClusterV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertKubernetesServer adds or updates a kubernetes server.
  func upsertKubernetesServer(request: Proto_UpsertKubernetesServerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KeepAlive>

  /// DeleteKubernetesServer removes a kubernetes server.
  func deleteKubernetesServer(request: Proto_DeleteKubernetesServerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllKubernetesServers removes all kubernetes servers.
  func deleteAllKubernetesServers(request: Proto_DeleteAllKubernetesServersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertDatabaseServer registers a new database proxy server.
  func upsertDatabaseServer(request: Proto_UpsertDatabaseServerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KeepAlive>

  /// DeleteDatabaseServer removes the specified database proxy server.
  func deleteDatabaseServer(request: Proto_DeleteDatabaseServerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllDatabaseServers removes all registered database proxy servers.
  func deleteAllDatabaseServers(request: Proto_DeleteAllDatabaseServersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertDatabaseService registers a new DatabaseService.
  func upsertDatabaseService(request: Proto_UpsertDatabaseServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KeepAlive>

  /// DeleteDatabaseService removes the specified DatabaseService.
  func deleteDatabaseService(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllDatabaseServices removes all registered DatabaseServices.
  /// If there's an error deleting the resources, there's no guarantee of a rollback.
  /// A subset of resources might be deleted while others still exist.
  func deleteAllDatabaseServices(request: Proto_DeleteAllDatabaseServicesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// SignDatabaseCSR generates client certificate used by proxy to
  /// authenticate with a remote database service.
  func signDatabaseCSR(request: Proto_DatabaseCSRRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_DatabaseCSRResponse>

  /// GenerateDatabaseCert generates client certificate used by a database
  /// service to authenticate with the database instance.
  func generateDatabaseCert(request: Proto_DatabaseCertRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_DatabaseCertResponse>

  //// GenerateSnowflakeJWT generates JWT in the format required by Snowflake.
  func generateSnowflakeJWT(request: Proto_SnowflakeJWTRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_SnowflakeJWTResponse>

  /// GetRole retrieves a role described by the given request.
  func getRole(request: Proto_GetRoleRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_RoleV6>

  /// GetRole retrieves all roles.
  func getRoles(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetRolesResponse>

  /// CreateRole creates a new role.
  func createRole(request: Proto_CreateRoleRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_RoleV6>

  /// UpdateRole updates an existing role.
  func updateRole(request: Proto_UpdateRoleRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_RoleV6>

  /// UpsertRoleV2 creates or overwrites an existing role.
  func upsertRoleV2(request: Proto_UpsertRoleRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_RoleV6>

  /// UpsertRole upserts a role in a backend.
  ///
  /// Deprecated: use UpsertRoleV2 instead.
  func upsertRole(request: Types_RoleV6, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteRole deletes an existing role in a backend described by the given request.
  func deleteRole(request: Proto_DeleteRoleRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// AddMFADevice adds an MFA device for the user calling this RPC.
  ///
  /// The RPC is streaming both ways and the message sequence is:
  /// (-> means client-to-server, <- means server-to-client)
  /// -> Init
  /// <- ExistingMFAChallenge
  /// -> ExistingMFAResponse
  /// <- NewMFARegisterChallenge
  /// -> NewMFARegisterResponse
  /// <- Ack
  ///
  /// Deprecated: Use [AddMFADeviceSync] instead.
  func addMFADevice(context: StreamingResponseCallContext<Proto_AddMFADeviceResponse>) -> EventLoopFuture<(StreamEvent<Proto_AddMFADeviceRequest>) -> Void>

  /// DeleteMFADevice deletes an MFA device for the user calling this RPC.
  ///
  /// The RPC is streaming both ways and the message sequence is:
  /// (-> means client-to-server, <- means server-to-client)
  /// -> Init
  /// <- MFAChallenge
  /// -> MFAResponse
  /// <- Ack
  ///
  /// Deprecated: Use [DeleteMFADeviceSync] instead.
  func deleteMFADevice(context: StreamingResponseCallContext<Proto_DeleteMFADeviceResponse>) -> EventLoopFuture<(StreamEvent<Proto_DeleteMFADeviceRequest>) -> Void>

  /// AddMFADeviceSync adds a new MFA device.
  ///
  /// A typical MFA registration sequence calls the following RPCs:
  ///
  /// 1. CreateAuthenticateChallenge (necessary for registration challenge)
  /// 2. (optional) CreatePrivilegeToken
  /// 3. CreateRegisterChallenge (uses authn challenge and optionally a token)
  /// 4. AddMFADeviceSync
  func addMFADeviceSync(request: Proto_AddMFADeviceSyncRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_AddMFADeviceSyncResponse>

  /// DeleteMFADeviceSync deletes a users MFA device (nonstream).
  ///
  /// A typical MFA deletion sequence calls the following RPCs:
  ///
  /// 1. (optional) CreateAuthenticateChallenge
  ///    (may be skipped depending on the token used, but is usually called
  ///    regardless)
  /// 2. (optional) CreatePrivilegeToken
  /// 3. DeleteMFADeviceSync (using either authn challenge or token)
  func deleteMFADeviceSync(request: Proto_DeleteMFADeviceSyncRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetMFADevices returns all MFA devices registered for the user calling
  /// this RPC.
  func getMFADevices(request: Proto_GetMFADevicesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetMFADevicesResponse>

  /// CreateAuthenticateChallenge creates and returns MFA challenges for a users registered MFA
  /// devices.
  func createAuthenticateChallenge(request: Proto_CreateAuthenticateChallengeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_MFAAuthenticateChallenge>

  /// CreateRegisterChallenge creates and returns MFA register challenge for a new MFA device.
  func createRegisterChallenge(request: Proto_CreateRegisterChallengeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_MFARegisterChallenge>

  /// GetOIDCConnector gets an OIDC connector resource by name.
  func getOIDCConnector(request: Types_ResourceWithSecretsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCConnectorV3>

  /// GetOIDCConnectors gets all current OIDC connector resources.
  func getOIDCConnectors(request: Types_ResourcesWithSecretsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCConnectorV3List>

  /// UpsertOIDCConnector creates a new OIDC connector in the backend.
  func createOIDCConnector(request: Proto_CreateOIDCConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCConnectorV3>

  /// UpsertOIDCConnector updates an existing OIDC connector in the backend.
  func updateOIDCConnector(request: Proto_UpdateOIDCConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCConnectorV3>

  /// UpsertOIDCConnector upserts an OIDC connector in a backend.
  ///
  /// Deprecated: Use UpsertOIDCConnectorV2 instead.
  func upsertOIDCConnector(request: Types_OIDCConnectorV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertOIDCConnectorV2 upserts an OIDC connector in the backend.
  func upsertOIDCConnectorV2(request: Proto_UpsertOIDCConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCConnectorV3>

  /// DeleteOIDCConnector deletes an existing OIDC connector in a backend by name.
  func deleteOIDCConnector(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateOIDCAuthRequest creates OIDCAuthRequest.
  func createOIDCAuthRequest(request: Types_OIDCAuthRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCAuthRequest>

  /// GetOIDCAuthRequest returns OIDC auth request if found.
  func getOIDCAuthRequest(request: Proto_GetOIDCAuthRequestRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_OIDCAuthRequest>

  /// GetSAMLConnector gets a SAML connector resource by name.
  func getSAMLConnector(request: Types_ResourceWithSecretsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLConnectorV2>

  /// GetSAMLConnectors gets all current SAML connector resources.
  func getSAMLConnectors(request: Types_ResourcesWithSecretsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLConnectorV2List>

  /// CreateSAMLConnector creates a new SAML connector in the backend.
  func createSAMLConnector(request: Proto_CreateSAMLConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLConnectorV2>

  /// UpdateSAMLConnector updates an existing SAML connector in the backend.
  func updateSAMLConnector(request: Proto_UpdateSAMLConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLConnectorV2>

  /// UpsertSAMLConnector upserts a SAML connector in a backend.
  ///
  /// Deprecated: Use UpsertSAMLConnectorV2 instead.
  func upsertSAMLConnector(request: Types_SAMLConnectorV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertSAMLConnectorV2 upserts a SAML connector in a backend.
  func upsertSAMLConnectorV2(request: Proto_UpsertSAMLConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLConnectorV2>

  /// DeleteSAMLConnector deletes an existing SAML connector in a backend by name.
  func deleteSAMLConnector(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateSAMLAuthRequest creates SAMLAuthRequest.
  func createSAMLAuthRequest(request: Types_SAMLAuthRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLAuthRequest>

  /// GetSAMLAuthRequest returns SAML auth request if found.
  func getSAMLAuthRequest(request: Proto_GetSAMLAuthRequestRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLAuthRequest>

  /// GetGithubConnector gets a Github connector resource by name.
  func getGithubConnector(request: Types_ResourceWithSecretsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubConnectorV3>

  /// GetGithubConnectors gets all current Github connector resources.
  func getGithubConnectors(request: Types_ResourcesWithSecretsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubConnectorV3List>

  /// CreateGithubConnector creates a new Github connector in the backend.
  func createGithubConnector(request: Proto_CreateGithubConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubConnectorV3>

  /// UpdateGithubConnector updates an existing Github connector in the backend.
  func updateGithubConnector(request: Proto_UpdateGithubConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubConnectorV3>

  /// UpsertGithubConnector upserts a Github connector in a backend.
  ///
  /// Deprecated: Use UpsertGithubConnectorV2 instead.
  func upsertGithubConnector(request: Types_GithubConnectorV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertGithubConnectorV2 upserts a Github connector in a backend.
  func upsertGithubConnectorV2(request: Proto_UpsertGithubConnectorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubConnectorV3>

  /// DeleteGithubConnector deletes an existing Github connector in a backend by name.
  func deleteGithubConnector(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateGithubAuthRequest creates GithubAuthRequest.
  func createGithubAuthRequest(request: Types_GithubAuthRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubAuthRequest>

  /// GetGithubAuthRequest returns Github auth request if found.
  func getGithubAuthRequest(request: Proto_GetGithubAuthRequestRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_GithubAuthRequest>

  /// GetSSODiagnosticInfo returns SSO diagnostic info records.
  func getSSODiagnosticInfo(request: Proto_GetSSODiagnosticInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SSODiagnosticInfo>

  /// GetServerInfos returns a stream of ServerInfos.
  func getServerInfos(request: SwiftProtobuf.Google_Protobuf_Empty, context: StreamingResponseCallContext<Types_ServerInfoV1>) -> EventLoopFuture<GRPCStatus>

  /// GetServerInfo returns a ServerInfo by name.
  func getServerInfo(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ServerInfoV1>

  /// UpsertServerInfo upserts a ServerInfo.
  func upsertServerInfo(request: Types_ServerInfoV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteServerInfo deletes a ServerInfo by name.
  func deleteServerInfo(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllServerInfos deletes all ServerInfos.
  func deleteAllServerInfos(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetTrustedCluster gets a Trusted Cluster resource by name.
  func getTrustedCluster(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_TrustedClusterV2>

  /// GetTrustedClusters gets all current Trusted Cluster resources.
  func getTrustedClusters(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_TrustedClusterV2List>

  /// UpsertTrustedCluster upserts a Trusted Cluster in a backend.
  func upsertTrustedCluster(request: Types_TrustedClusterV2, context: StatusOnlyCallContext) -> EventLoopFuture<Types_TrustedClusterV2>

  /// DeleteTrustedCluster deletes an existing Trusted Cluster in a backend by name.
  func deleteTrustedCluster(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetToken retrieves a token described by the given request.
  func getToken(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ProvisionTokenV2>

  /// GetToken retrieves all tokens.
  func getTokens(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ProvisionTokenV2List>

  /// CreateTokenV2 creates a token in a backend.
  func createTokenV2(request: Proto_CreateTokenV2Request, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertTokenV2 upserts a token in a backend.
  func upsertTokenV2(request: Proto_UpsertTokenV2Request, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteToken deletes an existing token in a backend described by the given request.
  func deleteToken(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetClusterAuditConfig gets cluster audit configuration.
  func getClusterAuditConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ClusterAuditConfigV2>

  /// GetClusterNetworkingConfig gets cluster networking configuration.
  func getClusterNetworkingConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ClusterNetworkingConfigV2>

  /// SetClusterNetworkingConfig sets cluster networking configuration.
  func setClusterNetworkingConfig(request: Types_ClusterNetworkingConfigV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ResetClusterNetworkingConfig resets cluster networking configuration to defaults.
  func resetClusterNetworkingConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetSessionRecordingConfig gets session recording configuration.
  func getSessionRecordingConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SessionRecordingConfigV2>

  /// SetSessionRecordingConfig sets session recording configuration.
  func setSessionRecordingConfig(request: Types_SessionRecordingConfigV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ResetSessionRecordingConfig resets session recording configuration to defaults.
  func resetSessionRecordingConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetAuthPreference gets cluster auth preference.
  func getAuthPreference(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_AuthPreferenceV2>

  /// SetAuthPreference sets cluster auth preference.
  func setAuthPreference(request: Types_AuthPreferenceV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ResetAuthPreference resets cluster auth preference to defaults.
  func resetAuthPreference(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetUIConfig gets the configuration for the UI served by the proxy service
  func getUIConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UIConfigV1>

  /// SetUIConfig sets the configuration for the UI served by the proxy service
  func setUIConfig(request: Types_UIConfigV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteUIConfig deletes the custom configuration for the UI served by the proxy service
  func deleteUIConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetEvents gets events from the audit log.
  func getEvents(request: Proto_GetEventsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Events>

  /// GetSessionEvents gets completed session events from the audit log.
  func getSessionEvents(request: Proto_GetSessionEventsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Events>

  /// GetLock gets a lock by name.
  func getLock(request: Proto_GetLockRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_LockV2>

  /// GetLocks gets all/in-force locks that match at least one of the targets when specified.
  func getLocks(request: Proto_GetLocksRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetLocksResponse>

  /// UpsertLock upserts a lock.
  func upsertLock(request: Types_LockV2, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteLock deletes a lock.
  func deleteLock(request: Proto_DeleteLockRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ReplaceRemoteLocks replaces the set of locks associated with a remote cluster.
  func replaceRemoteLocks(request: Proto_ReplaceRemoteLocksRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// StreamSessionEvents streams audit events from a given session recording.
  func streamSessionEvents(request: Proto_StreamSessionEventsRequest, context: StreamingResponseCallContext<Events_OneOf>) -> EventLoopFuture<GRPCStatus>

  /// GetNetworkRestrictions retrieves all the network restrictions (allow/deny lists).
  func getNetworkRestrictions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_NetworkRestrictionsV4>

  /// SetNetworkRestrictions updates the network restrictions.
  func setNetworkRestrictions(request: Types_NetworkRestrictionsV4, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteNetworkRestrictions delete the network restrictions.
  func deleteNetworkRestrictions(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetApps returns all registered applications.
  func getApps(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_AppV3List>

  /// GetApp returns an application by name.
  func getApp(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_AppV3>

  /// CreateApp creates a new application resource.
  func createApp(request: Types_AppV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateApp updates existing application resource.
  func updateApp(request: Types_AppV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteApp removes specified application resource.
  func deleteApp(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllApps removes all application resources.
  func deleteAllApps(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetDatabases returns all registered databases.
  func getDatabases(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_DatabaseV3List>

  /// GetDatabase returns a database by name.
  func getDatabase(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_DatabaseV3>

  /// CreateDatabase creates a new database resource.
  func createDatabase(request: Types_DatabaseV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateDatabase updates existing database resource.
  func updateDatabase(request: Types_DatabaseV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteDatabase removes specified database resource.
  func deleteDatabase(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllDatabases removes all database resources.
  func deleteAllDatabases(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetKubernetesClusters returns all registered kubernetes clusters.
  func getKubernetesClusters(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KubernetesClusterV3List>

  /// GetKubernetesCluster returns a kubernetes cluster by name.
  func getKubernetesCluster(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KubernetesClusterV3>

  /// CreateKubernetesCluster creates a new kubernetes cluster resource.
  func createKubernetesCluster(request: Types_KubernetesClusterV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateKubernetesCluster updates existing kubernetes cluster resource.
  func updateKubernetesCluster(request: Types_KubernetesClusterV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteKubernetesCluster removes specified kubernetes cluster resource.
  func deleteKubernetesCluster(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllKubernetesClusters removes all kubernetes cluster resources.
  func deleteAllKubernetesClusters(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetWindowsDesktopServices returns all registered Windows desktop services.
  func getWindowsDesktopServices(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWindowsDesktopServicesResponse>

  /// GetWindowsDesktopService gets a Windows desktop service by name.
  func getWindowsDesktopService(request: Proto_GetWindowsDesktopServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWindowsDesktopServiceResponse>

  /// UpsertWindowsDesktopService registers a new Windows desktop service.
  func upsertWindowsDesktopService(request: Types_WindowsDesktopServiceV3, context: StatusOnlyCallContext) -> EventLoopFuture<Types_KeepAlive>

  /// DeleteWindowsDesktopService removes the specified Windows desktop service.
  func deleteWindowsDesktopService(request: Proto_DeleteWindowsDesktopServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllWindowsDesktopServices removes all registered Windows desktop services.
  func deleteAllWindowsDesktopServices(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetWindowsDesktops returns all registered Windows desktop hosts matching the supplied filter.
  func getWindowsDesktops(request: Types_WindowsDesktopFilter, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetWindowsDesktopsResponse>

  /// CreateWindowsDesktop registers a new Windows desktop host.
  func createWindowsDesktop(request: Types_WindowsDesktopV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateWindowsDesktop updates an existing Windows desktop host.
  func updateWindowsDesktop(request: Types_WindowsDesktopV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpsertWindowsDesktop updates a Windows desktop host, creating it if it doesn't exist.
  func upsertWindowsDesktop(request: Types_WindowsDesktopV3, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteWindowsDesktop removes the specified Windows desktop host.
  /// Unlike GetWindowsDesktops, this call will delete at-most 1 desktop.
  /// To delete all desktops, use DeleteAllWindowsDesktops.
  func deleteWindowsDesktop(request: Proto_DeleteWindowsDesktopRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllWindowsDesktops removes all registered Windows desktop hosts.
  func deleteAllWindowsDesktops(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GenerateWindowsDesktopCert generates client smartcard certificate used
  /// by an RDP client to authenticate with Windows.
  func generateWindowsDesktopCert(request: Proto_WindowsDesktopCertRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_WindowsDesktopCertResponse>

  /// GenerateCertAuthorityCRL creates an empty CRL for the specified CA.
  func generateCertAuthorityCRL(request: Proto_CertAuthorityRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_CRL>

  /// CreateConnectionDiagnostic creates a new connection diagnostic.
  func createConnectionDiagnostic(request: Types_ConnectionDiagnosticV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateConnectionDiagnostic updates a connection diagnostic.
  func updateConnectionDiagnostic(request: Types_ConnectionDiagnosticV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetConnectionDiagnostic reads a connection diagnostic.
  func getConnectionDiagnostic(request: Proto_GetConnectionDiagnosticRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ConnectionDiagnosticV1>

  /// AppendDiagnosticTrace appends a Trace to the ConnectionDiagnostic.
  func appendDiagnosticTrace(request: Proto_AppendDiagnosticTraceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ConnectionDiagnosticV1>

  /// ChangeUserAuthentication allows a user to change their password and if enabled,
  /// also adds a new MFA device. After successful invocation, a new web session is created as well
  /// as a new set of recovery codes (if user meets the requirements to receive them), invalidating
  /// any existing codes the user previously had.
  func changeUserAuthentication(request: Proto_ChangeUserAuthenticationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ChangeUserAuthenticationResponse>

  /// StartAccountRecovery (exclusive to cloud users) is the first out of two step user
  /// verification needed to allow a user to recover their account. The first form of verification
  /// is a user's username and a recovery code. After successful verification, a recovery start
  /// token is created for the user which its ID will be used as part of a URL that will be emailed
  /// to the user (not done in this request). The user will be able to finish their second form of
  /// verification by clicking on this URL and following the prompts.
  ///
  /// If a valid user fails to provide correct recovery code for MaxAccountRecoveryAttempts,
  /// user account gets temporarily locked from further recovery attempts and from logging in.
  ///
  /// Start tokens last RecoveryStartTokenTTL.
  func startAccountRecovery(request: Proto_StartAccountRecoveryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserTokenV3>

  /// VerifyAccountRecovery (exclusive to cloud users) is the second step of the two step
  /// verification needed to allow a user to recover their account, after RPC StartAccountRecovery.
  /// The second form of verification is a user's password or their second factor (depending on
  /// what authentication they needed to recover). After successful verification, a recovery
  /// approved token is created which allows a user to request protected actions while not logged
  /// in e.g: setting a new password or a mfa device, viewing their MFA devices, deleting their MFA
  /// devices, and generating new recovery codes.
  ///
  /// The recovery start token to verify this request becomes deleted before
  /// creating a recovery approved token, which invalidates the recovery link users received
  /// to finish their verification.
  ///
  /// If user fails to verify themselves for MaxAccountRecoveryAttempts
  /// (combined attempts with RPC StartAccountRecovery), users account will be temporarily locked
  /// from logging in. If users still have unused recovery codes left, they still have
  /// opportunities to recover their account. To allow this, users recovery attempts are also
  /// deleted along with all user tokens which will force the user to restart the recovery process
  /// from step 1 (RPC StartAccountRecovery).
  ///
  /// Recovery approved tokens last RecoveryApprovedTokenTTL.
  func verifyAccountRecovery(request: Proto_VerifyAccountRecoveryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserTokenV3>

  /// CompleteAccountRecovery (exclusive to cloud users) is the last step in account
  /// recovery, after RPC's StartAccountRecovery and VerifyAccountRecovery. This step sets a new
  /// password or adds a new mfa device, allowing the user to regain access to their account with
  /// the new credentials. When the new authentication is successfully set, any user lock is
  /// removed so the user can login immediately afterwards.
  func completeAccountRecovery(request: Proto_CompleteAccountRecoveryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// CreateAccountRecoveryCodes (exclusive to cloud users) creates new set of recovery codes for a
  /// user, replacing and invalidating any previously owned codes. Users can only get recovery
  /// codes if their username is in a valid email format.
  func createAccountRecoveryCodes(request: Proto_CreateAccountRecoveryCodesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_RecoveryCodes>

  /// GetAccountRecoveryToken (exclusive to cloud users) returns a user token resource after
  /// verifying that the token requested has not expired and is of the correct recovery kind.
  /// Besides checking for validity of a token ID, it is also used to get basic information from
  /// the token e.g: username, state of recovery (started or approved) and the type of recovery
  /// requested (password or second factor).
  func getAccountRecoveryToken(request: Proto_GetAccountRecoveryTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserTokenV3>

  /// GetAccountRecoveryCodes (exclusive to cloud users) is a request to return the user in context
  /// their recovery codes. This request will not return any secrets (the values of recovery
  /// codes), but instead returns non-sensitive data eg. when the recovery codes were created.
  func getAccountRecoveryCodes(request: Proto_GetAccountRecoveryCodesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_RecoveryCodes>

  /// CreatePrivilegeToken returns a new privilege token after a logged in user successfully
  /// re-authenticates with their second factor device. Privilege token lasts PrivilegeTokenTTL and
  /// is used to gain access to privileged actions eg: deleting/adding a MFA device.
  func createPrivilegeToken(request: Proto_CreatePrivilegeTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserTokenV3>

  /// GetInstaller retrieves the installer script resource
  func getInstaller(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_InstallerV1>

  /// GetInstallers retrieves all of installer script resources.
  func getInstallers(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_InstallerV1List>

  /// SetInstaller sets the installer script resource
  func setInstaller(request: Types_InstallerV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteInstaller removes the specified installer script resource
  func deleteInstaller(request: Types_ResourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllInstallers removes all installer script resources
  func deleteAllInstallers(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ListResources retrieves a paginated list of resources.
  func listResources(request: Proto_ListResourcesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListResourcesResponse>

  /// ListUnifiedResources retrieves a paginated list of all resource types displayable in the UI.
  func listUnifiedResources(request: Proto_ListUnifiedResourcesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListUnifiedResourcesResponse>

  /// GetSSHTargets gets all servers that would match an equivalent ssh dial request. Note that this method
  /// returns all resources directly accessible to the user *and* all resources available via 'SearchAsRoles',
  /// which is what we want when handling things like ambiguous host errors and resource-based access requests,
  /// but may result in confusing behavior if it is used outside of those contexts.
  func getSSHTargets(request: Proto_GetSSHTargetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetSSHTargetsResponse>

  /// GetDomainName returns local auth domain of the current auth server
  func getDomainName(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetDomainNameResponse>

  /// GetClusterCACert returns the PEM-encoded TLS certs for the local cluster
  /// without signing keys. If the cluster has multiple TLS certs, they will
  /// all be appended.
  func getClusterCACert(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetClusterCACertResponse>

  /// SubmitUsageEvent submits an external usage event.
  func submitUsageEvent(request: Proto_SubmitUsageEventRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetLicense returns the license used to start the auth server.
  func getLicense(request: Proto_GetLicenseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_GetLicenseResponse>

  /// ListReleases returns a list of Teleport Enterprise releases.
  func listReleases(request: Proto_ListReleasesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListReleasesResponse>

  /// ListSAMLIdPServiceProviders returns a paginated list of SAML IdP service provider resources.
  func listSAMLIdPServiceProviders(request: Proto_ListSAMLIdPServiceProvidersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListSAMLIdPServiceProvidersResponse>

  /// GetSAMLIdPServiceProvider returns the specified SAML IdP service provider resources.
  func getSAMLIdPServiceProvider(request: Proto_GetSAMLIdPServiceProviderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_SAMLIdPServiceProviderV1>

  /// CreateSAMLIdPServiceProvider creates a new SAML IdP service provider resource.
  func createSAMLIdPServiceProvider(request: Types_SAMLIdPServiceProviderV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateSAMLIdPServiceProvider updates an existing SAML IdP service provider resource.
  func updateSAMLIdPServiceProvider(request: Types_SAMLIdPServiceProviderV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteSAMLIdPServiceProvider removes the specified SAML IdP service provider resource.
  func deleteSAMLIdPServiceProvider(request: Proto_DeleteSAMLIdPServiceProviderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllSAMLIdPServiceProviders removes all SAML IdP service providers.
  func deleteAllSAMLIdPServiceProviders(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ListUserGroups returns a paginated list of user group resources.
  func listUserGroups(request: Proto_ListUserGroupsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ListUserGroupsResponse>

  /// GetUserGroup returns the specified user group resource.
  func getUserGroup(request: Proto_GetUserGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_UserGroupV1>

  /// CreateUserGroup creates a new user group resource.
  func createUserGroup(request: Types_UserGroupV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// UpdateUserGroup updates an existing user group resource.
  func updateUserGroup(request: Types_UserGroupV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteUserGroup removes the specified user group resource.
  func deleteUserGroup(request: Proto_DeleteUserGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteAllUserGroups removes all user groups.
  func deleteAllUserGroups(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// GetHeadlessAuthentication is a request to retrieve a headless authentication from the backend.
  func getHeadlessAuthentication(request: Proto_GetHeadlessAuthenticationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Types_HeadlessAuthentication>

  /// WatchPendingHeadlessAuthentications watches the backend for pending headless authentication requests for the user.
  func watchPendingHeadlessAuthentications(request: SwiftProtobuf.Google_Protobuf_Empty, context: StreamingResponseCallContext<Proto_Event>) -> EventLoopFuture<GRPCStatus>

  /// UpdateHeadlessAuthenticationState is a request to update a headless authentication's state.
  func updateHeadlessAuthenticationState(request: Proto_UpdateHeadlessAuthenticationStateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// ExportUpgradeWindows is used to load derived maintenance window values for agents that
  /// need to export schedules to external upgraders.
  func exportUpgradeWindows(request: Proto_ExportUpgradeWindowsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_ExportUpgradeWindowsResponse>

  /// GetClusterMaintenanceConfig gets the current maintenance window config singleton.
  func getClusterMaintenanceConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Types_ClusterMaintenanceConfigV1>

  /// UpdateClusterMaintenanceConfig updates the current maintenance window config singleton.
  func updateClusterMaintenanceConfig(request: Types_ClusterMaintenanceConfigV1, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  /// DeleteClusterMaintenanceConfig deletes the current maintenance window config singleton.
  func deleteClusterMaintenanceConfig(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Proto_AuthServiceProvider {
  internal var serviceName: Substring {
    return Proto_AuthServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "InventoryControlStream":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpstreamInventoryOneOf>(),
        responseSerializer: ProtobufSerializer<Proto_DownstreamInventoryOneOf>(),
        interceptors: self.interceptors?.makeInventoryControlStreamInterceptors() ?? [],
        observerFactory: self.inventoryControlStream(context:)
      )

    case "GetInventoryStatus":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_InventoryStatusRequest>(),
        responseSerializer: ProtobufSerializer<Proto_InventoryStatusSummary>(),
        interceptors: self.interceptors?.makeGetInventoryStatusInterceptors() ?? [],
        userFunction: self.getInventoryStatus(request:context:)
      )

    case "GetInventoryConnectedServiceCounts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_InventoryConnectedServiceCountsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_InventoryConnectedServiceCounts>(),
        interceptors: self.interceptors?.makeGetInventoryConnectedServiceCountsInterceptors() ?? [],
        userFunction: self.getInventoryConnectedServiceCounts(request:context:)
      )

    case "PingInventory":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_InventoryPingRequest>(),
        responseSerializer: ProtobufSerializer<Proto_InventoryPingResponse>(),
        interceptors: self.interceptors?.makePingInventoryInterceptors() ?? [],
        userFunction: self.pingInventory(request:context:)
      )

    case "GetInstances":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_InstanceFilter>(),
        responseSerializer: ProtobufSerializer<Types_InstanceV1>(),
        interceptors: self.interceptors?.makeGetInstancesInterceptors() ?? [],
        userFunction: self.getInstances(request:context:)
      )

    case "GetClusterAlerts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GetClusterAlertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetClusterAlertsResponse>(),
        interceptors: self.interceptors?.makeGetClusterAlertsInterceptors() ?? [],
        userFunction: self.getClusterAlerts(request:context:)
      )

    case "UpsertClusterAlert":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertClusterAlertRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertClusterAlertInterceptors() ?? [],
        userFunction: self.upsertClusterAlert(request:context:)
      )

    case "CreateAlertAck":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AlertAcknowledgement>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateAlertAckInterceptors() ?? [],
        userFunction: self.createAlertAck(request:context:)
      )

    case "GetAlertAcks":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAlertAcksRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetAlertAcksResponse>(),
        interceptors: self.interceptors?.makeGetAlertAcksInterceptors() ?? [],
        userFunction: self.getAlertAcks(request:context:)
      )

    case "ClearAlertAcks":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ClearAlertAcksRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeClearAlertAcksInterceptors() ?? [],
        userFunction: self.clearAlertAcks(request:context:)
      )

    case "MaintainSessionPresence":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_PresenceMFAChallengeSend>(),
        responseSerializer: ProtobufSerializer<Proto_MFAAuthenticateChallenge>(),
        interceptors: self.interceptors?.makeMaintainSessionPresenceInterceptors() ?? [],
        observerFactory: self.maintainSessionPresence(context:)
      )

    case "CreateSessionTracker":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeCreateSessionTrackerInterceptors() ?? [],
        userFunction: self.createSessionTracker(request:context:)
      )

    case "GetSessionTracker":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeGetSessionTrackerInterceptors() ?? [],
        userFunction: self.getSessionTracker(request:context:)
      )

    case "GetActiveSessionTrackers":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeGetActiveSessionTrackersInterceptors() ?? [],
        userFunction: self.getActiveSessionTrackers(request:context:)
      )

    case "GetActiveSessionTrackersWithFilter":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SessionTrackerFilter>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeGetActiveSessionTrackersWithFilterInterceptors() ?? [],
        userFunction: self.getActiveSessionTrackersWithFilter(request:context:)
      )

    case "RemoveSessionTracker":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_RemoveSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeRemoveSessionTrackerInterceptors() ?? [],
        userFunction: self.removeSessionTracker(request:context:)
      )

    case "UpdateSessionTracker":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateSessionTrackerInterceptors() ?? [],
        userFunction: self.updateSessionTracker(request:context:)
      )

    case "SendKeepAlives":
      return ClientStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_KeepAlive>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSendKeepAlivesInterceptors() ?? [],
        observerFactory: self.sendKeepAlives(context:)
      )

    case "WatchEvents":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Watch>(),
        responseSerializer: ProtobufSerializer<Proto_Event>(),
        interceptors: self.interceptors?.makeWatchEventsInterceptors() ?? [],
        userFunction: self.watchEvents(request:context:)
      )

    case "GetNode":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceInNamespaceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ServerV2>(),
        interceptors: self.interceptors?.makeGetNodeInterceptors() ?? [],
        userFunction: self.getNode(request:context:)
      )

    case "UpsertNode":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ServerV2>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertNodeInterceptors() ?? [],
        userFunction: self.upsertNode(request:context:)
      )

    case "DeleteNode":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceInNamespaceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteNodeInterceptors() ?? [],
        userFunction: self.deleteNode(request:context:)
      )

    case "DeleteAllNodes":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesInNamespaceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllNodesInterceptors() ?? [],
        userFunction: self.deleteAllNodes(request:context:)
      )

    case "GenerateUserCerts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UserCertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Certs>(),
        interceptors: self.interceptors?.makeGenerateUserCertsInterceptors() ?? [],
        userFunction: self.generateUserCerts(request:context:)
      )

    case "GenerateHostCerts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_HostCertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Certs>(),
        interceptors: self.interceptors?.makeGenerateHostCertsInterceptors() ?? [],
        userFunction: self.generateHostCerts(request:context:)
      )

    case "GenerateUserSingleUseCerts":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UserSingleUseCertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_UserSingleUseCertsResponse>(),
        interceptors: self.interceptors?.makeGenerateUserSingleUseCertsInterceptors() ?? [],
        observerFactory: self.generateUserSingleUseCerts(context:)
      )

    case "GenerateOpenSSHCert":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_OpenSSHCertRequest>(),
        responseSerializer: ProtobufSerializer<Proto_OpenSSHCert>(),
        interceptors: self.interceptors?.makeGenerateOpenSSHCertInterceptors() ?? [],
        userFunction: self.generateOpenSSHCert(request:context:)
      )

    case "IsMFARequired":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_IsMFARequiredRequest>(),
        responseSerializer: ProtobufSerializer<Proto_IsMFARequiredResponse>(),
        interceptors: self.interceptors?.makeIsMFARequiredInterceptors() ?? [],
        userFunction: self.isMFARequired(request:context:)
      )

    case "GetAccessRequestsV2":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessRequestFilter>(),
        responseSerializer: ProtobufSerializer<Types_AccessRequestV3>(),
        interceptors: self.interceptors?.makeGetAccessRequestsV2Interceptors() ?? [],
        userFunction: self.getAccessRequestsV2(request:context:)
      )

    case "CreateAccessRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessRequestV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateAccessRequestInterceptors() ?? [],
        userFunction: self.createAccessRequest(request:context:)
      )

    case "CreateAccessRequestV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessRequestV3>(),
        responseSerializer: ProtobufSerializer<Types_AccessRequestV3>(),
        interceptors: self.interceptors?.makeCreateAccessRequestV2Interceptors() ?? [],
        userFunction: self.createAccessRequestV2(request:context:)
      )

    case "DeleteAccessRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_RequestID>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAccessRequestInterceptors() ?? [],
        userFunction: self.deleteAccessRequest(request:context:)
      )

    case "SetAccessRequestState":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_RequestStateSetter>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetAccessRequestStateInterceptors() ?? [],
        userFunction: self.setAccessRequestState(request:context:)
      )

    case "SubmitAccessReview":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessReviewSubmission>(),
        responseSerializer: ProtobufSerializer<Types_AccessRequestV3>(),
        interceptors: self.interceptors?.makeSubmitAccessReviewInterceptors() ?? [],
        userFunction: self.submitAccessReview(request:context:)
      )

    case "GetAccessCapabilities":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessCapabilitiesRequest>(),
        responseSerializer: ProtobufSerializer<Types_AccessCapabilities>(),
        interceptors: self.interceptors?.makeGetAccessCapabilitiesInterceptors() ?? [],
        userFunction: self.getAccessCapabilities(request:context:)
      )

    case "GetAccessRequestAllowedPromotions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AccessRequestAllowedPromotionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_AccessRequestAllowedPromotionResponse>(),
        interceptors: self.interceptors?.makeGetAccessRequestAllowedPromotionsInterceptors() ?? [],
        userFunction: self.getAccessRequestAllowedPromotions(request:context:)
      )

    case "GetPluginData":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_PluginDataFilter>(),
        responseSerializer: ProtobufSerializer<Proto_PluginDataSeq>(),
        interceptors: self.interceptors?.makeGetPluginDataInterceptors() ?? [],
        userFunction: self.getPluginData(request:context:)
      )

    case "UpdatePluginData":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_PluginDataUpdateParams>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdatePluginDataInterceptors() ?? [],
        userFunction: self.updatePluginData(request:context:)
      )

    case "Ping":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_PingRequest>(),
        responseSerializer: ProtobufSerializer<Proto_PingResponse>(),
        interceptors: self.interceptors?.makePingInterceptors() ?? [],
        userFunction: self.ping(request:context:)
      )

    case "GetResetPasswordToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetResetPasswordTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeGetResetPasswordTokenInterceptors() ?? [],
        userFunction: self.getResetPasswordToken(request:context:)
      )

    case "CreateResetPasswordToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateResetPasswordTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeCreateResetPasswordTokenInterceptors() ?? [],
        userFunction: self.createResetPasswordToken(request:context:)
      )

    case "CreateBot":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateBotRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateBotResponse>(),
        interceptors: self.interceptors?.makeCreateBotInterceptors() ?? [],
        userFunction: self.createBot(request:context:)
      )

    case "DeleteBot":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteBotRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteBotInterceptors() ?? [],
        userFunction: self.deleteBot(request:context:)
      )

    case "GetBotUsers":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetBotUsersRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetBotUsersInterceptors() ?? [],
        userFunction: self.getBotUsers(request:context:)
      )

    case "GetUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetUserRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetUserInterceptors() ?? [],
        userFunction: self.getUser(request:context:)
      )

    case "GetCurrentUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetCurrentUserInterceptors() ?? [],
        userFunction: self.getCurrentUser(request:context:)
      )

    case "GetCurrentUserRoles":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeGetCurrentUserRolesInterceptors() ?? [],
        userFunction: self.getCurrentUserRoles(request:context:)
      )

    case "GetUsers":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetUsersRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetUsersInterceptors() ?? [],
        userFunction: self.getUsers(request:context:)
      )

    case "CreateUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateUserInterceptors() ?? [],
        userFunction: self.createUser(request:context:)
      )

    case "UpdateUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateUserInterceptors() ?? [],
        userFunction: self.updateUser(request:context:)
      )

    case "DeleteUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? [],
        userFunction: self.deleteUser(request:context:)
      )

    case "ChangePassword":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ChangePasswordRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeChangePasswordInterceptors() ?? [],
        userFunction: self.changePassword(request:context:)
      )

    case "AcquireSemaphore":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AcquireSemaphoreRequest>(),
        responseSerializer: ProtobufSerializer<Types_SemaphoreLease>(),
        interceptors: self.interceptors?.makeAcquireSemaphoreInterceptors() ?? [],
        userFunction: self.acquireSemaphore(request:context:)
      )

    case "KeepAliveSemaphoreLease":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreLease>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeKeepAliveSemaphoreLeaseInterceptors() ?? [],
        userFunction: self.keepAliveSemaphoreLease(request:context:)
      )

    case "CancelSemaphoreLease":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreLease>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCancelSemaphoreLeaseInterceptors() ?? [],
        userFunction: self.cancelSemaphoreLease(request:context:)
      )

    case "GetSemaphores":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreFilter>(),
        responseSerializer: ProtobufSerializer<Proto_Semaphores>(),
        interceptors: self.interceptors?.makeGetSemaphoresInterceptors() ?? [],
        userFunction: self.getSemaphores(request:context:)
      )

    case "DeleteSemaphore":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreFilter>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSemaphoreInterceptors() ?? [],
        userFunction: self.deleteSemaphore(request:context:)
      )

    case "EmitAuditEvent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Events_OneOf>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeEmitAuditEventInterceptors() ?? [],
        userFunction: self.emitAuditEvent(request:context:)
      )

    case "CreateAuditStream":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AuditStreamRequest>(),
        responseSerializer: ProtobufSerializer<Events_StreamStatus>(),
        interceptors: self.interceptors?.makeCreateAuditStreamInterceptors() ?? [],
        observerFactory: self.createAuditStream(context:)
      )

    case "UpsertApplicationServer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertApplicationServerRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertApplicationServerInterceptors() ?? [],
        userFunction: self.upsertApplicationServer(request:context:)
      )

    case "DeleteApplicationServer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteApplicationServerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteApplicationServerInterceptors() ?? [],
        userFunction: self.deleteApplicationServer(request:context:)
      )

    case "DeleteAllApplicationServers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllApplicationServersRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllApplicationServersInterceptors() ?? [],
        userFunction: self.deleteAllApplicationServers(request:context:)
      )

    case "GenerateAppToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GenerateAppTokenRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GenerateAppTokenResponse>(),
        interceptors: self.interceptors?.makeGenerateAppTokenInterceptors() ?? [],
        userFunction: self.generateAppToken(request:context:)
      )

    case "GetAppSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAppSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetAppSessionResponse>(),
        interceptors: self.interceptors?.makeGetAppSessionInterceptors() ?? [],
        userFunction: self.getAppSession(request:context:)
      )

    case "ListAppSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListAppSessionsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListAppSessionsResponse>(),
        interceptors: self.interceptors?.makeListAppSessionsInterceptors() ?? [],
        userFunction: self.listAppSessions(request:context:)
      )

    case "CreateAppSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateAppSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateAppSessionResponse>(),
        interceptors: self.interceptors?.makeCreateAppSessionInterceptors() ?? [],
        userFunction: self.createAppSession(request:context:)
      )

    case "DeleteAppSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAppSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAppSessionInterceptors() ?? [],
        userFunction: self.deleteAppSession(request:context:)
      )

    case "DeleteAllAppSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllAppSessionsInterceptors() ?? [],
        userFunction: self.deleteAllAppSessions(request:context:)
      )

    case "DeleteUserAppSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserAppSessionsRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserAppSessionsInterceptors() ?? [],
        userFunction: self.deleteUserAppSessions(request:context:)
      )

    case "CreateSnowflakeSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSnowflakeSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateSnowflakeSessionResponse>(),
        interceptors: self.interceptors?.makeCreateSnowflakeSessionInterceptors() ?? [],
        userFunction: self.createSnowflakeSession(request:context:)
      )

    case "GetSnowflakeSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSnowflakeSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetSnowflakeSessionResponse>(),
        interceptors: self.interceptors?.makeGetSnowflakeSessionInterceptors() ?? [],
        userFunction: self.getSnowflakeSession(request:context:)
      )

    case "GetSnowflakeSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetSnowflakeSessionsResponse>(),
        interceptors: self.interceptors?.makeGetSnowflakeSessionsInterceptors() ?? [],
        userFunction: self.getSnowflakeSessions(request:context:)
      )

    case "DeleteSnowflakeSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteSnowflakeSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSnowflakeSessionInterceptors() ?? [],
        userFunction: self.deleteSnowflakeSession(request:context:)
      )

    case "DeleteAllSnowflakeSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllSnowflakeSessionsInterceptors() ?? [],
        userFunction: self.deleteAllSnowflakeSessions(request:context:)
      )

    case "CreateSAMLIdPSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSAMLIdPSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateSAMLIdPSessionResponse>(),
        interceptors: self.interceptors?.makeCreateSAMLIdPSessionInterceptors() ?? [],
        userFunction: self.createSAMLIdPSession(request:context:)
      )

    case "GetSAMLIdPSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSAMLIdPSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetSAMLIdPSessionResponse>(),
        interceptors: self.interceptors?.makeGetSAMLIdPSessionInterceptors() ?? [],
        userFunction: self.getSAMLIdPSession(request:context:)
      )

    case "ListSAMLIdPSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListSAMLIdPSessionsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListSAMLIdPSessionsResponse>(),
        interceptors: self.interceptors?.makeListSAMLIdPSessionsInterceptors() ?? [],
        userFunction: self.listSAMLIdPSessions(request:context:)
      )

    case "DeleteSAMLIdPSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteSAMLIdPSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSAMLIdPSessionInterceptors() ?? [],
        userFunction: self.deleteSAMLIdPSession(request:context:)
      )

    case "DeleteAllSAMLIdPSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllSAMLIdPSessionsInterceptors() ?? [],
        userFunction: self.deleteAllSAMLIdPSessions(request:context:)
      )

    case "DeleteUserSAMLIdPSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserSAMLIdPSessionsRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserSAMLIdPSessionsInterceptors() ?? [],
        userFunction: self.deleteUserSAMLIdPSessions(request:context:)
      )

    case "GetWebSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GetWebSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebSessionResponse>(),
        interceptors: self.interceptors?.makeGetWebSessionInterceptors() ?? [],
        userFunction: self.getWebSession(request:context:)
      )

    case "GetWebSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebSessionsResponse>(),
        interceptors: self.interceptors?.makeGetWebSessionsInterceptors() ?? [],
        userFunction: self.getWebSessions(request:context:)
      )

    case "DeleteWebSession":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DeleteWebSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWebSessionInterceptors() ?? [],
        userFunction: self.deleteWebSession(request:context:)
      )

    case "DeleteAllWebSessions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWebSessionsInterceptors() ?? [],
        userFunction: self.deleteAllWebSessions(request:context:)
      )

    case "GetWebToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GetWebTokenRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebTokenResponse>(),
        interceptors: self.interceptors?.makeGetWebTokenInterceptors() ?? [],
        userFunction: self.getWebToken(request:context:)
      )

    case "GetWebTokens":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebTokensResponse>(),
        interceptors: self.interceptors?.makeGetWebTokensInterceptors() ?? [],
        userFunction: self.getWebTokens(request:context:)
      )

    case "DeleteWebToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DeleteWebTokenRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWebTokenInterceptors() ?? [],
        userFunction: self.deleteWebToken(request:context:)
      )

    case "DeleteAllWebTokens":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWebTokensInterceptors() ?? [],
        userFunction: self.deleteAllWebTokens(request:context:)
      )

    case "UpdateRemoteCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_RemoteClusterV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateRemoteClusterInterceptors() ?? [],
        userFunction: self.updateRemoteCluster(request:context:)
      )

    case "UpsertKubernetesServer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertKubernetesServerRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertKubernetesServerInterceptors() ?? [],
        userFunction: self.upsertKubernetesServer(request:context:)
      )

    case "DeleteKubernetesServer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteKubernetesServerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteKubernetesServerInterceptors() ?? [],
        userFunction: self.deleteKubernetesServer(request:context:)
      )

    case "DeleteAllKubernetesServers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllKubernetesServersRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllKubernetesServersInterceptors() ?? [],
        userFunction: self.deleteAllKubernetesServers(request:context:)
      )

    case "UpsertDatabaseServer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertDatabaseServerRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertDatabaseServerInterceptors() ?? [],
        userFunction: self.upsertDatabaseServer(request:context:)
      )

    case "DeleteDatabaseServer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteDatabaseServerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteDatabaseServerInterceptors() ?? [],
        userFunction: self.deleteDatabaseServer(request:context:)
      )

    case "DeleteAllDatabaseServers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllDatabaseServersRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllDatabaseServersInterceptors() ?? [],
        userFunction: self.deleteAllDatabaseServers(request:context:)
      )

    case "UpsertDatabaseService":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertDatabaseServiceRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertDatabaseServiceInterceptors() ?? [],
        userFunction: self.upsertDatabaseService(request:context:)
      )

    case "DeleteDatabaseService":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteDatabaseServiceInterceptors() ?? [],
        userFunction: self.deleteDatabaseService(request:context:)
      )

    case "DeleteAllDatabaseServices":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllDatabaseServicesRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllDatabaseServicesInterceptors() ?? [],
        userFunction: self.deleteAllDatabaseServices(request:context:)
      )

    case "SignDatabaseCSR":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DatabaseCSRRequest>(),
        responseSerializer: ProtobufSerializer<Proto_DatabaseCSRResponse>(),
        interceptors: self.interceptors?.makeSignDatabaseCSRInterceptors() ?? [],
        userFunction: self.signDatabaseCSR(request:context:)
      )

    case "GenerateDatabaseCert":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DatabaseCertRequest>(),
        responseSerializer: ProtobufSerializer<Proto_DatabaseCertResponse>(),
        interceptors: self.interceptors?.makeGenerateDatabaseCertInterceptors() ?? [],
        userFunction: self.generateDatabaseCert(request:context:)
      )

    case "GenerateSnowflakeJWT":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_SnowflakeJWTRequest>(),
        responseSerializer: ProtobufSerializer<Proto_SnowflakeJWTResponse>(),
        interceptors: self.interceptors?.makeGenerateSnowflakeJWTInterceptors() ?? [],
        userFunction: self.generateSnowflakeJWT(request:context:)
      )

    case "GetRole":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeGetRoleInterceptors() ?? [],
        userFunction: self.getRole(request:context:)
      )

    case "GetRoles":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetRolesResponse>(),
        interceptors: self.interceptors?.makeGetRolesInterceptors() ?? [],
        userFunction: self.getRoles(request:context:)
      )

    case "CreateRole":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeCreateRoleInterceptors() ?? [],
        userFunction: self.createRole(request:context:)
      )

    case "UpdateRole":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeUpdateRoleInterceptors() ?? [],
        userFunction: self.updateRole(request:context:)
      )

    case "UpsertRoleV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeUpsertRoleV2Interceptors() ?? [],
        userFunction: self.upsertRoleV2(request:context:)
      )

    case "UpsertRole":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_RoleV6>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertRoleInterceptors() ?? [],
        userFunction: self.upsertRole(request:context:)
      )

    case "DeleteRole":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteRoleRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteRoleInterceptors() ?? [],
        userFunction: self.deleteRole(request:context:)
      )

    case "AddMFADevice":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AddMFADeviceRequest>(),
        responseSerializer: ProtobufSerializer<Proto_AddMFADeviceResponse>(),
        interceptors: self.interceptors?.makeAddMFADeviceInterceptors() ?? [],
        observerFactory: self.addMFADevice(context:)
      )

    case "DeleteMFADevice":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteMFADeviceRequest>(),
        responseSerializer: ProtobufSerializer<Proto_DeleteMFADeviceResponse>(),
        interceptors: self.interceptors?.makeDeleteMFADeviceInterceptors() ?? [],
        observerFactory: self.deleteMFADevice(context:)
      )

    case "AddMFADeviceSync":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AddMFADeviceSyncRequest>(),
        responseSerializer: ProtobufSerializer<Proto_AddMFADeviceSyncResponse>(),
        interceptors: self.interceptors?.makeAddMFADeviceSyncInterceptors() ?? [],
        userFunction: self.addMFADeviceSync(request:context:)
      )

    case "DeleteMFADeviceSync":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteMFADeviceSyncRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteMFADeviceSyncInterceptors() ?? [],
        userFunction: self.deleteMFADeviceSync(request:context:)
      )

    case "GetMFADevices":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetMFADevicesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetMFADevicesResponse>(),
        interceptors: self.interceptors?.makeGetMFADevicesInterceptors() ?? [],
        userFunction: self.getMFADevices(request:context:)
      )

    case "CreateAuthenticateChallenge":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateAuthenticateChallengeRequest>(),
        responseSerializer: ProtobufSerializer<Proto_MFAAuthenticateChallenge>(),
        interceptors: self.interceptors?.makeCreateAuthenticateChallengeInterceptors() ?? [],
        userFunction: self.createAuthenticateChallenge(request:context:)
      )

    case "CreateRegisterChallenge":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateRegisterChallengeRequest>(),
        responseSerializer: ProtobufSerializer<Proto_MFARegisterChallenge>(),
        interceptors: self.interceptors?.makeCreateRegisterChallengeInterceptors() ?? [],
        userFunction: self.createRegisterChallenge(request:context:)
      )

    case "GetOIDCConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeGetOIDCConnectorInterceptors() ?? [],
        userFunction: self.getOIDCConnector(request:context:)
      )

    case "GetOIDCConnectors":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3List>(),
        interceptors: self.interceptors?.makeGetOIDCConnectorsInterceptors() ?? [],
        userFunction: self.getOIDCConnectors(request:context:)
      )

    case "CreateOIDCConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateOIDCConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeCreateOIDCConnectorInterceptors() ?? [],
        userFunction: self.createOIDCConnector(request:context:)
      )

    case "UpdateOIDCConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateOIDCConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeUpdateOIDCConnectorInterceptors() ?? [],
        userFunction: self.updateOIDCConnector(request:context:)
      )

    case "UpsertOIDCConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_OIDCConnectorV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertOIDCConnectorInterceptors() ?? [],
        userFunction: self.upsertOIDCConnector(request:context:)
      )

    case "UpsertOIDCConnectorV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertOIDCConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeUpsertOIDCConnectorV2Interceptors() ?? [],
        userFunction: self.upsertOIDCConnectorV2(request:context:)
      )

    case "DeleteOIDCConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteOIDCConnectorInterceptors() ?? [],
        userFunction: self.deleteOIDCConnector(request:context:)
      )

    case "CreateOIDCAuthRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_OIDCAuthRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCAuthRequest>(),
        interceptors: self.interceptors?.makeCreateOIDCAuthRequestInterceptors() ?? [],
        userFunction: self.createOIDCAuthRequest(request:context:)
      )

    case "GetOIDCAuthRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetOIDCAuthRequestRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCAuthRequest>(),
        interceptors: self.interceptors?.makeGetOIDCAuthRequestInterceptors() ?? [],
        userFunction: self.getOIDCAuthRequest(request:context:)
      )

    case "GetSAMLConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeGetSAMLConnectorInterceptors() ?? [],
        userFunction: self.getSAMLConnector(request:context:)
      )

    case "GetSAMLConnectors":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2List>(),
        interceptors: self.interceptors?.makeGetSAMLConnectorsInterceptors() ?? [],
        userFunction: self.getSAMLConnectors(request:context:)
      )

    case "CreateSAMLConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSAMLConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeCreateSAMLConnectorInterceptors() ?? [],
        userFunction: self.createSAMLConnector(request:context:)
      )

    case "UpdateSAMLConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateSAMLConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeUpdateSAMLConnectorInterceptors() ?? [],
        userFunction: self.updateSAMLConnector(request:context:)
      )

    case "UpsertSAMLConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLConnectorV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertSAMLConnectorInterceptors() ?? [],
        userFunction: self.upsertSAMLConnector(request:context:)
      )

    case "UpsertSAMLConnectorV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertSAMLConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeUpsertSAMLConnectorV2Interceptors() ?? [],
        userFunction: self.upsertSAMLConnectorV2(request:context:)
      )

    case "DeleteSAMLConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSAMLConnectorInterceptors() ?? [],
        userFunction: self.deleteSAMLConnector(request:context:)
      )

    case "CreateSAMLAuthRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLAuthRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLAuthRequest>(),
        interceptors: self.interceptors?.makeCreateSAMLAuthRequestInterceptors() ?? [],
        userFunction: self.createSAMLAuthRequest(request:context:)
      )

    case "GetSAMLAuthRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSAMLAuthRequestRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLAuthRequest>(),
        interceptors: self.interceptors?.makeGetSAMLAuthRequestInterceptors() ?? [],
        userFunction: self.getSAMLAuthRequest(request:context:)
      )

    case "GetGithubConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeGetGithubConnectorInterceptors() ?? [],
        userFunction: self.getGithubConnector(request:context:)
      )

    case "GetGithubConnectors":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3List>(),
        interceptors: self.interceptors?.makeGetGithubConnectorsInterceptors() ?? [],
        userFunction: self.getGithubConnectors(request:context:)
      )

    case "CreateGithubConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateGithubConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeCreateGithubConnectorInterceptors() ?? [],
        userFunction: self.createGithubConnector(request:context:)
      )

    case "UpdateGithubConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateGithubConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeUpdateGithubConnectorInterceptors() ?? [],
        userFunction: self.updateGithubConnector(request:context:)
      )

    case "UpsertGithubConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GithubConnectorV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertGithubConnectorInterceptors() ?? [],
        userFunction: self.upsertGithubConnector(request:context:)
      )

    case "UpsertGithubConnectorV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertGithubConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeUpsertGithubConnectorV2Interceptors() ?? [],
        userFunction: self.upsertGithubConnectorV2(request:context:)
      )

    case "DeleteGithubConnector":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteGithubConnectorInterceptors() ?? [],
        userFunction: self.deleteGithubConnector(request:context:)
      )

    case "CreateGithubAuthRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GithubAuthRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubAuthRequest>(),
        interceptors: self.interceptors?.makeCreateGithubAuthRequestInterceptors() ?? [],
        userFunction: self.createGithubAuthRequest(request:context:)
      )

    case "GetGithubAuthRequest":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetGithubAuthRequestRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubAuthRequest>(),
        interceptors: self.interceptors?.makeGetGithubAuthRequestInterceptors() ?? [],
        userFunction: self.getGithubAuthRequest(request:context:)
      )

    case "GetSSODiagnosticInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSSODiagnosticInfoRequest>(),
        responseSerializer: ProtobufSerializer<Types_SSODiagnosticInfo>(),
        interceptors: self.interceptors?.makeGetSSODiagnosticInfoInterceptors() ?? [],
        userFunction: self.getSSODiagnosticInfo(request:context:)
      )

    case "GetServerInfos":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ServerInfoV1>(),
        interceptors: self.interceptors?.makeGetServerInfosInterceptors() ?? [],
        userFunction: self.getServerInfos(request:context:)
      )

    case "GetServerInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ServerInfoV1>(),
        interceptors: self.interceptors?.makeGetServerInfoInterceptors() ?? [],
        userFunction: self.getServerInfo(request:context:)
      )

    case "UpsertServerInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ServerInfoV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertServerInfoInterceptors() ?? [],
        userFunction: self.upsertServerInfo(request:context:)
      )

    case "DeleteServerInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteServerInfoInterceptors() ?? [],
        userFunction: self.deleteServerInfo(request:context:)
      )

    case "DeleteAllServerInfos":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllServerInfosInterceptors() ?? [],
        userFunction: self.deleteAllServerInfos(request:context:)
      )

    case "GetTrustedCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_TrustedClusterV2>(),
        interceptors: self.interceptors?.makeGetTrustedClusterInterceptors() ?? [],
        userFunction: self.getTrustedCluster(request:context:)
      )

    case "GetTrustedClusters":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_TrustedClusterV2List>(),
        interceptors: self.interceptors?.makeGetTrustedClustersInterceptors() ?? [],
        userFunction: self.getTrustedClusters(request:context:)
      )

    case "UpsertTrustedCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_TrustedClusterV2>(),
        responseSerializer: ProtobufSerializer<Types_TrustedClusterV2>(),
        interceptors: self.interceptors?.makeUpsertTrustedClusterInterceptors() ?? [],
        userFunction: self.upsertTrustedCluster(request:context:)
      )

    case "DeleteTrustedCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteTrustedClusterInterceptors() ?? [],
        userFunction: self.deleteTrustedCluster(request:context:)
      )

    case "GetToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ProvisionTokenV2>(),
        interceptors: self.interceptors?.makeGetTokenInterceptors() ?? [],
        userFunction: self.getToken(request:context:)
      )

    case "GetTokens":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ProvisionTokenV2List>(),
        interceptors: self.interceptors?.makeGetTokensInterceptors() ?? [],
        userFunction: self.getTokens(request:context:)
      )

    case "CreateTokenV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateTokenV2Request>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateTokenV2Interceptors() ?? [],
        userFunction: self.createTokenV2(request:context:)
      )

    case "UpsertTokenV2":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertTokenV2Request>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertTokenV2Interceptors() ?? [],
        userFunction: self.upsertTokenV2(request:context:)
      )

    case "DeleteToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteTokenInterceptors() ?? [],
        userFunction: self.deleteToken(request:context:)
      )

    case "GetClusterAuditConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ClusterAuditConfigV2>(),
        interceptors: self.interceptors?.makeGetClusterAuditConfigInterceptors() ?? [],
        userFunction: self.getClusterAuditConfig(request:context:)
      )

    case "GetClusterNetworkingConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ClusterNetworkingConfigV2>(),
        interceptors: self.interceptors?.makeGetClusterNetworkingConfigInterceptors() ?? [],
        userFunction: self.getClusterNetworkingConfig(request:context:)
      )

    case "SetClusterNetworkingConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ClusterNetworkingConfigV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetClusterNetworkingConfigInterceptors() ?? [],
        userFunction: self.setClusterNetworkingConfig(request:context:)
      )

    case "ResetClusterNetworkingConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeResetClusterNetworkingConfigInterceptors() ?? [],
        userFunction: self.resetClusterNetworkingConfig(request:context:)
      )

    case "GetSessionRecordingConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_SessionRecordingConfigV2>(),
        interceptors: self.interceptors?.makeGetSessionRecordingConfigInterceptors() ?? [],
        userFunction: self.getSessionRecordingConfig(request:context:)
      )

    case "SetSessionRecordingConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SessionRecordingConfigV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetSessionRecordingConfigInterceptors() ?? [],
        userFunction: self.setSessionRecordingConfig(request:context:)
      )

    case "ResetSessionRecordingConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeResetSessionRecordingConfigInterceptors() ?? [],
        userFunction: self.resetSessionRecordingConfig(request:context:)
      )

    case "GetAuthPreference":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_AuthPreferenceV2>(),
        interceptors: self.interceptors?.makeGetAuthPreferenceInterceptors() ?? [],
        userFunction: self.getAuthPreference(request:context:)
      )

    case "SetAuthPreference":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AuthPreferenceV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetAuthPreferenceInterceptors() ?? [],
        userFunction: self.setAuthPreference(request:context:)
      )

    case "ResetAuthPreference":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeResetAuthPreferenceInterceptors() ?? [],
        userFunction: self.resetAuthPreference(request:context:)
      )

    case "GetUIConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_UIConfigV1>(),
        interceptors: self.interceptors?.makeGetUIConfigInterceptors() ?? [],
        userFunction: self.getUIConfig(request:context:)
      )

    case "SetUIConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UIConfigV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetUIConfigInterceptors() ?? [],
        userFunction: self.setUIConfig(request:context:)
      )

    case "DeleteUIConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUIConfigInterceptors() ?? [],
        userFunction: self.deleteUIConfig(request:context:)
      )

    case "GetEvents":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetEventsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Events>(),
        interceptors: self.interceptors?.makeGetEventsInterceptors() ?? [],
        userFunction: self.getEvents(request:context:)
      )

    case "GetSessionEvents":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSessionEventsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Events>(),
        interceptors: self.interceptors?.makeGetSessionEventsInterceptors() ?? [],
        userFunction: self.getSessionEvents(request:context:)
      )

    case "GetLock":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetLockRequest>(),
        responseSerializer: ProtobufSerializer<Types_LockV2>(),
        interceptors: self.interceptors?.makeGetLockInterceptors() ?? [],
        userFunction: self.getLock(request:context:)
      )

    case "GetLocks":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetLocksRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetLocksResponse>(),
        interceptors: self.interceptors?.makeGetLocksInterceptors() ?? [],
        userFunction: self.getLocks(request:context:)
      )

    case "UpsertLock":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_LockV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertLockInterceptors() ?? [],
        userFunction: self.upsertLock(request:context:)
      )

    case "DeleteLock":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteLockRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteLockInterceptors() ?? [],
        userFunction: self.deleteLock(request:context:)
      )

    case "ReplaceRemoteLocks":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ReplaceRemoteLocksRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeReplaceRemoteLocksInterceptors() ?? [],
        userFunction: self.replaceRemoteLocks(request:context:)
      )

    case "StreamSessionEvents":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_StreamSessionEventsRequest>(),
        responseSerializer: ProtobufSerializer<Events_OneOf>(),
        interceptors: self.interceptors?.makeStreamSessionEventsInterceptors() ?? [],
        userFunction: self.streamSessionEvents(request:context:)
      )

    case "GetNetworkRestrictions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_NetworkRestrictionsV4>(),
        interceptors: self.interceptors?.makeGetNetworkRestrictionsInterceptors() ?? [],
        userFunction: self.getNetworkRestrictions(request:context:)
      )

    case "SetNetworkRestrictions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_NetworkRestrictionsV4>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetNetworkRestrictionsInterceptors() ?? [],
        userFunction: self.setNetworkRestrictions(request:context:)
      )

    case "DeleteNetworkRestrictions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteNetworkRestrictionsInterceptors() ?? [],
        userFunction: self.deleteNetworkRestrictions(request:context:)
      )

    case "GetApps":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_AppV3List>(),
        interceptors: self.interceptors?.makeGetAppsInterceptors() ?? [],
        userFunction: self.getApps(request:context:)
      )

    case "GetApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_AppV3>(),
        interceptors: self.interceptors?.makeGetAppInterceptors() ?? [],
        userFunction: self.getApp(request:context:)
      )

    case "CreateApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AppV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateAppInterceptors() ?? [],
        userFunction: self.createApp(request:context:)
      )

    case "UpdateApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AppV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateAppInterceptors() ?? [],
        userFunction: self.updateApp(request:context:)
      )

    case "DeleteApp":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAppInterceptors() ?? [],
        userFunction: self.deleteApp(request:context:)
      )

    case "DeleteAllApps":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllAppsInterceptors() ?? [],
        userFunction: self.deleteAllApps(request:context:)
      )

    case "GetDatabases":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_DatabaseV3List>(),
        interceptors: self.interceptors?.makeGetDatabasesInterceptors() ?? [],
        userFunction: self.getDatabases(request:context:)
      )

    case "GetDatabase":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_DatabaseV3>(),
        interceptors: self.interceptors?.makeGetDatabaseInterceptors() ?? [],
        userFunction: self.getDatabase(request:context:)
      )

    case "CreateDatabase":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DatabaseV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateDatabaseInterceptors() ?? [],
        userFunction: self.createDatabase(request:context:)
      )

    case "UpdateDatabase":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DatabaseV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateDatabaseInterceptors() ?? [],
        userFunction: self.updateDatabase(request:context:)
      )

    case "DeleteDatabase":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteDatabaseInterceptors() ?? [],
        userFunction: self.deleteDatabase(request:context:)
      )

    case "DeleteAllDatabases":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllDatabasesInterceptors() ?? [],
        userFunction: self.deleteAllDatabases(request:context:)
      )

    case "GetKubernetesClusters":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_KubernetesClusterV3List>(),
        interceptors: self.interceptors?.makeGetKubernetesClustersInterceptors() ?? [],
        userFunction: self.getKubernetesClusters(request:context:)
      )

    case "GetKubernetesCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_KubernetesClusterV3>(),
        interceptors: self.interceptors?.makeGetKubernetesClusterInterceptors() ?? [],
        userFunction: self.getKubernetesCluster(request:context:)
      )

    case "CreateKubernetesCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_KubernetesClusterV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateKubernetesClusterInterceptors() ?? [],
        userFunction: self.createKubernetesCluster(request:context:)
      )

    case "UpdateKubernetesCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_KubernetesClusterV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateKubernetesClusterInterceptors() ?? [],
        userFunction: self.updateKubernetesCluster(request:context:)
      )

    case "DeleteKubernetesCluster":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteKubernetesClusterInterceptors() ?? [],
        userFunction: self.deleteKubernetesCluster(request:context:)
      )

    case "DeleteAllKubernetesClusters":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllKubernetesClustersInterceptors() ?? [],
        userFunction: self.deleteAllKubernetesClusters(request:context:)
      )

    case "GetWindowsDesktopServices":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetWindowsDesktopServicesResponse>(),
        interceptors: self.interceptors?.makeGetWindowsDesktopServicesInterceptors() ?? [],
        userFunction: self.getWindowsDesktopServices(request:context:)
      )

    case "GetWindowsDesktopService":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetWindowsDesktopServiceRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetWindowsDesktopServiceResponse>(),
        interceptors: self.interceptors?.makeGetWindowsDesktopServiceInterceptors() ?? [],
        userFunction: self.getWindowsDesktopService(request:context:)
      )

    case "UpsertWindowsDesktopService":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopServiceV3>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertWindowsDesktopServiceInterceptors() ?? [],
        userFunction: self.upsertWindowsDesktopService(request:context:)
      )

    case "DeleteWindowsDesktopService":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteWindowsDesktopServiceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWindowsDesktopServiceInterceptors() ?? [],
        userFunction: self.deleteWindowsDesktopService(request:context:)
      )

    case "DeleteAllWindowsDesktopServices":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWindowsDesktopServicesInterceptors() ?? [],
        userFunction: self.deleteAllWindowsDesktopServices(request:context:)
      )

    case "GetWindowsDesktops":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopFilter>(),
        responseSerializer: ProtobufSerializer<Proto_GetWindowsDesktopsResponse>(),
        interceptors: self.interceptors?.makeGetWindowsDesktopsInterceptors() ?? [],
        userFunction: self.getWindowsDesktops(request:context:)
      )

    case "CreateWindowsDesktop":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateWindowsDesktopInterceptors() ?? [],
        userFunction: self.createWindowsDesktop(request:context:)
      )

    case "UpdateWindowsDesktop":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateWindowsDesktopInterceptors() ?? [],
        userFunction: self.updateWindowsDesktop(request:context:)
      )

    case "UpsertWindowsDesktop":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertWindowsDesktopInterceptors() ?? [],
        userFunction: self.upsertWindowsDesktop(request:context:)
      )

    case "DeleteWindowsDesktop":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteWindowsDesktopRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWindowsDesktopInterceptors() ?? [],
        userFunction: self.deleteWindowsDesktop(request:context:)
      )

    case "DeleteAllWindowsDesktops":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWindowsDesktopsInterceptors() ?? [],
        userFunction: self.deleteAllWindowsDesktops(request:context:)
      )

    case "GenerateWindowsDesktopCert":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_WindowsDesktopCertRequest>(),
        responseSerializer: ProtobufSerializer<Proto_WindowsDesktopCertResponse>(),
        interceptors: self.interceptors?.makeGenerateWindowsDesktopCertInterceptors() ?? [],
        userFunction: self.generateWindowsDesktopCert(request:context:)
      )

    case "GenerateCertAuthorityCRL":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CertAuthorityRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CRL>(),
        interceptors: self.interceptors?.makeGenerateCertAuthorityCRLInterceptors() ?? [],
        userFunction: self.generateCertAuthorityCRL(request:context:)
      )

    case "CreateConnectionDiagnostic":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ConnectionDiagnosticV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateConnectionDiagnosticInterceptors() ?? [],
        userFunction: self.createConnectionDiagnostic(request:context:)
      )

    case "UpdateConnectionDiagnostic":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ConnectionDiagnosticV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateConnectionDiagnosticInterceptors() ?? [],
        userFunction: self.updateConnectionDiagnostic(request:context:)
      )

    case "GetConnectionDiagnostic":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetConnectionDiagnosticRequest>(),
        responseSerializer: ProtobufSerializer<Types_ConnectionDiagnosticV1>(),
        interceptors: self.interceptors?.makeGetConnectionDiagnosticInterceptors() ?? [],
        userFunction: self.getConnectionDiagnostic(request:context:)
      )

    case "AppendDiagnosticTrace":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AppendDiagnosticTraceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ConnectionDiagnosticV1>(),
        interceptors: self.interceptors?.makeAppendDiagnosticTraceInterceptors() ?? [],
        userFunction: self.appendDiagnosticTrace(request:context:)
      )

    case "ChangeUserAuthentication":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ChangeUserAuthenticationRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ChangeUserAuthenticationResponse>(),
        interceptors: self.interceptors?.makeChangeUserAuthenticationInterceptors() ?? [],
        userFunction: self.changeUserAuthentication(request:context:)
      )

    case "StartAccountRecovery":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_StartAccountRecoveryRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeStartAccountRecoveryInterceptors() ?? [],
        userFunction: self.startAccountRecovery(request:context:)
      )

    case "VerifyAccountRecovery":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_VerifyAccountRecoveryRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeVerifyAccountRecoveryInterceptors() ?? [],
        userFunction: self.verifyAccountRecovery(request:context:)
      )

    case "CompleteAccountRecovery":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CompleteAccountRecoveryRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCompleteAccountRecoveryInterceptors() ?? [],
        userFunction: self.completeAccountRecovery(request:context:)
      )

    case "CreateAccountRecoveryCodes":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateAccountRecoveryCodesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_RecoveryCodes>(),
        interceptors: self.interceptors?.makeCreateAccountRecoveryCodesInterceptors() ?? [],
        userFunction: self.createAccountRecoveryCodes(request:context:)
      )

    case "GetAccountRecoveryToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAccountRecoveryTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeGetAccountRecoveryTokenInterceptors() ?? [],
        userFunction: self.getAccountRecoveryToken(request:context:)
      )

    case "GetAccountRecoveryCodes":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAccountRecoveryCodesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_RecoveryCodes>(),
        interceptors: self.interceptors?.makeGetAccountRecoveryCodesInterceptors() ?? [],
        userFunction: self.getAccountRecoveryCodes(request:context:)
      )

    case "CreatePrivilegeToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreatePrivilegeTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeCreatePrivilegeTokenInterceptors() ?? [],
        userFunction: self.createPrivilegeToken(request:context:)
      )

    case "GetInstaller":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_InstallerV1>(),
        interceptors: self.interceptors?.makeGetInstallerInterceptors() ?? [],
        userFunction: self.getInstaller(request:context:)
      )

    case "GetInstallers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_InstallerV1List>(),
        interceptors: self.interceptors?.makeGetInstallersInterceptors() ?? [],
        userFunction: self.getInstallers(request:context:)
      )

    case "SetInstaller":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_InstallerV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetInstallerInterceptors() ?? [],
        userFunction: self.setInstaller(request:context:)
      )

    case "DeleteInstaller":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteInstallerInterceptors() ?? [],
        userFunction: self.deleteInstaller(request:context:)
      )

    case "DeleteAllInstallers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllInstallersInterceptors() ?? [],
        userFunction: self.deleteAllInstallers(request:context:)
      )

    case "ListResources":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListResourcesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListResourcesResponse>(),
        interceptors: self.interceptors?.makeListResourcesInterceptors() ?? [],
        userFunction: self.listResources(request:context:)
      )

    case "ListUnifiedResources":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListUnifiedResourcesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListUnifiedResourcesResponse>(),
        interceptors: self.interceptors?.makeListUnifiedResourcesInterceptors() ?? [],
        userFunction: self.listUnifiedResources(request:context:)
      )

    case "GetSSHTargets":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSSHTargetsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetSSHTargetsResponse>(),
        interceptors: self.interceptors?.makeGetSSHTargetsInterceptors() ?? [],
        userFunction: self.getSSHTargets(request:context:)
      )

    case "GetDomainName":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetDomainNameResponse>(),
        interceptors: self.interceptors?.makeGetDomainNameInterceptors() ?? [],
        userFunction: self.getDomainName(request:context:)
      )

    case "GetClusterCACert":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetClusterCACertResponse>(),
        interceptors: self.interceptors?.makeGetClusterCACertInterceptors() ?? [],
        userFunction: self.getClusterCACert(request:context:)
      )

    case "SubmitUsageEvent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_SubmitUsageEventRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSubmitUsageEventInterceptors() ?? [],
        userFunction: self.submitUsageEvent(request:context:)
      )

    case "GetLicense":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetLicenseRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetLicenseResponse>(),
        interceptors: self.interceptors?.makeGetLicenseInterceptors() ?? [],
        userFunction: self.getLicense(request:context:)
      )

    case "ListReleases":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListReleasesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListReleasesResponse>(),
        interceptors: self.interceptors?.makeListReleasesInterceptors() ?? [],
        userFunction: self.listReleases(request:context:)
      )

    case "ListSAMLIdPServiceProviders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListSAMLIdPServiceProvidersRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListSAMLIdPServiceProvidersResponse>(),
        interceptors: self.interceptors?.makeListSAMLIdPServiceProvidersInterceptors() ?? [],
        userFunction: self.listSAMLIdPServiceProviders(request:context:)
      )

    case "GetSAMLIdPServiceProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSAMLIdPServiceProviderRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLIdPServiceProviderV1>(),
        interceptors: self.interceptors?.makeGetSAMLIdPServiceProviderInterceptors() ?? [],
        userFunction: self.getSAMLIdPServiceProvider(request:context:)
      )

    case "CreateSAMLIdPServiceProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLIdPServiceProviderV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateSAMLIdPServiceProviderInterceptors() ?? [],
        userFunction: self.createSAMLIdPServiceProvider(request:context:)
      )

    case "UpdateSAMLIdPServiceProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLIdPServiceProviderV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateSAMLIdPServiceProviderInterceptors() ?? [],
        userFunction: self.updateSAMLIdPServiceProvider(request:context:)
      )

    case "DeleteSAMLIdPServiceProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteSAMLIdPServiceProviderRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSAMLIdPServiceProviderInterceptors() ?? [],
        userFunction: self.deleteSAMLIdPServiceProvider(request:context:)
      )

    case "DeleteAllSAMLIdPServiceProviders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllSAMLIdPServiceProvidersInterceptors() ?? [],
        userFunction: self.deleteAllSAMLIdPServiceProviders(request:context:)
      )

    case "ListUserGroups":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListUserGroupsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListUserGroupsResponse>(),
        interceptors: self.interceptors?.makeListUserGroupsInterceptors() ?? [],
        userFunction: self.listUserGroups(request:context:)
      )

    case "GetUserGroup":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetUserGroupRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserGroupV1>(),
        interceptors: self.interceptors?.makeGetUserGroupInterceptors() ?? [],
        userFunction: self.getUserGroup(request:context:)
      )

    case "CreateUserGroup":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserGroupV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateUserGroupInterceptors() ?? [],
        userFunction: self.createUserGroup(request:context:)
      )

    case "UpdateUserGroup":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserGroupV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateUserGroupInterceptors() ?? [],
        userFunction: self.updateUserGroup(request:context:)
      )

    case "DeleteUserGroup":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserGroupRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserGroupInterceptors() ?? [],
        userFunction: self.deleteUserGroup(request:context:)
      )

    case "DeleteAllUserGroups":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllUserGroupsInterceptors() ?? [],
        userFunction: self.deleteAllUserGroups(request:context:)
      )

    case "GetHeadlessAuthentication":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetHeadlessAuthenticationRequest>(),
        responseSerializer: ProtobufSerializer<Types_HeadlessAuthentication>(),
        interceptors: self.interceptors?.makeGetHeadlessAuthenticationInterceptors() ?? [],
        userFunction: self.getHeadlessAuthentication(request:context:)
      )

    case "WatchPendingHeadlessAuthentications":
      return ServerStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_Event>(),
        interceptors: self.interceptors?.makeWatchPendingHeadlessAuthenticationsInterceptors() ?? [],
        userFunction: self.watchPendingHeadlessAuthentications(request:context:)
      )

    case "UpdateHeadlessAuthenticationState":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateHeadlessAuthenticationStateRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateHeadlessAuthenticationStateInterceptors() ?? [],
        userFunction: self.updateHeadlessAuthenticationState(request:context:)
      )

    case "ExportUpgradeWindows":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ExportUpgradeWindowsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ExportUpgradeWindowsResponse>(),
        interceptors: self.interceptors?.makeExportUpgradeWindowsInterceptors() ?? [],
        userFunction: self.exportUpgradeWindows(request:context:)
      )

    case "GetClusterMaintenanceConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ClusterMaintenanceConfigV1>(),
        interceptors: self.interceptors?.makeGetClusterMaintenanceConfigInterceptors() ?? [],
        userFunction: self.getClusterMaintenanceConfig(request:context:)
      )

    case "UpdateClusterMaintenanceConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ClusterMaintenanceConfigV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateClusterMaintenanceConfigInterceptors() ?? [],
        userFunction: self.updateClusterMaintenanceConfig(request:context:)
      )

    case "DeleteClusterMaintenanceConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteClusterMaintenanceConfigInterceptors() ?? [],
        userFunction: self.deleteClusterMaintenanceConfig(request:context:)
      )

    default:
      return nil
    }
  }
}

/// AuthService is authentication/authorization service implementation
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Proto_AuthServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Proto_AuthServiceServerInterceptorFactoryProtocol? { get }

  /// InventoryControlStream is the per-instance stream used to advertise teleport instance
  /// presence/version/etc to the auth server.
  func inventoryControlStream(
    requestStream: GRPCAsyncRequestStream<Proto_UpstreamInventoryOneOf>,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_DownstreamInventoryOneOf>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetInventoryStatus gets information about current instance inventory.
  func getInventoryStatus(
    request: Proto_InventoryStatusRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_InventoryStatusSummary

  /// GetInventoryConnectedServiceCounts returns the counts of each connected service seen in the inventory.
  func getInventoryConnectedServiceCounts(
    request: Proto_InventoryConnectedServiceCountsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_InventoryConnectedServiceCounts

  /// PingInventory attempts to trigger a downstream inventory ping (used in testing/debug).
  func pingInventory(
    request: Proto_InventoryPingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_InventoryPingResponse

  /// GetInstances streams all instances matching the specified filter.
  func getInstances(
    request: Types_InstanceFilter,
    responseStream: GRPCAsyncResponseStreamWriter<Types_InstanceV1>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetClusterAlerts loads cluster-level alert messages.
  func getClusterAlerts(
    request: Types_GetClusterAlertsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetClusterAlertsResponse

  /// UpsertClusterAlert creates a cluster alert.
  func upsertClusterAlert(
    request: Proto_UpsertClusterAlertRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateAlertAck marks a cluster alert as acknowledged.
  func createAlertAck(
    request: Types_AlertAcknowledgement,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetAlertAcks gets active alert ackowledgements.
  func getAlertAcks(
    request: Proto_GetAlertAcksRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetAlertAcksResponse

  /// ClearAlertAcks clears alert acknowledgments.
  func clearAlertAcks(
    request: Proto_ClearAlertAcksRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// MaintainSessionPresence establishes a channel used to continously verify the presence for a
  /// session.
  func maintainSessionPresence(
    requestStream: GRPCAsyncRequestStream<Proto_PresenceMFAChallengeSend>,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_MFAAuthenticateChallenge>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// CreateSessionTracker creates a new session tracker resource.
  func createSessionTracker(
    request: Proto_CreateSessionTrackerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SessionTrackerV1

  /// GetSessionTracker fetches a session tracker resource.
  func getSessionTracker(
    request: Proto_GetSessionTrackerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SessionTrackerV1

  /// GetActiveSessionTrackers returns a list of active sessions.
  func getActiveSessionTrackers(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    responseStream: GRPCAsyncResponseStreamWriter<Types_SessionTrackerV1>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetActiveSessionTrackersWithFilter returns a list of active sessions filtered by a filter.
  func getActiveSessionTrackersWithFilter(
    request: Types_SessionTrackerFilter,
    responseStream: GRPCAsyncResponseStreamWriter<Types_SessionTrackerV1>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// RemoveSessionTracker removes a session tracker resource.
  func removeSessionTracker(
    request: Proto_RemoveSessionTrackerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateSessionTracker updates some state of a session tracker.
  func updateSessionTracker(
    request: Proto_UpdateSessionTrackerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// SendKeepAlives allows node to send a stream of keep alive requests
  func sendKeepAlives(
    requestStream: GRPCAsyncRequestStream<Types_KeepAlive>,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// WatchEvents returns a new stream of cluster events
  func watchEvents(
    request: Proto_Watch,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_Event>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetNode retrieves a node described by the given request.
  func getNode(
    request: Types_ResourceInNamespaceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ServerV2

  /// UpsertNode upserts a node in a backend.
  func upsertNode(
    request: Types_ServerV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KeepAlive

  /// DeleteNode deletes an existing node in a backend described by the given request.
  func deleteNode(
    request: Types_ResourceInNamespaceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllNodes deletes all nodes.
  func deleteAllNodes(
    request: Types_ResourcesInNamespaceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GenerateUserCerts generates a set of user certificates.
  func generateUserCerts(
    request: Proto_UserCertsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Certs

  /// GenerateHostCerts generates a set of host certificates.
  func generateHostCerts(
    request: Proto_HostCertsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Certs

  /// GenerateUserSingleUseCerts generates a set of single-use user
  /// certificates.
  ///
  /// Deprecated: Superseded by GenerateUserCerts.
  func generateUserSingleUseCerts(
    requestStream: GRPCAsyncRequestStream<Proto_UserSingleUseCertsRequest>,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_UserSingleUseCertsResponse>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GenerateOpenSSHCert signs a SSH certificate that can be used
  /// to connect to Agentless nodes.
  func generateOpenSSHCert(
    request: Proto_OpenSSHCertRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_OpenSSHCert

  /// IsMFARequired checks whether MFA is required to access the specified
  /// target.
  func isMFARequired(
    request: Proto_IsMFARequiredRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_IsMFARequiredResponse

  /// GetAccessRequestsV2 gets all pending access requests.
  func getAccessRequestsV2(
    request: Types_AccessRequestFilter,
    responseStream: GRPCAsyncResponseStreamWriter<Types_AccessRequestV3>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// CreateAccessRequest creates a new access request.
  /// Deprecated: use CreateAccessRequestV2 instead.
  /// DELETE IN v15.0.0.
  func createAccessRequest(
    request: Types_AccessRequestV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateAccessRequestV2 creates a new access request.
  func createAccessRequestV2(
    request: Types_AccessRequestV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_AccessRequestV3

  /// DeleteAccessRequest deletes an access request.
  func deleteAccessRequest(
    request: Proto_RequestID,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// SetAccessRequestState sets the state of an access request.
  func setAccessRequestState(
    request: Proto_RequestStateSetter,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// SubmitAccessReview applies a review to a request and returns the post-application state.
  func submitAccessReview(
    request: Types_AccessReviewSubmission,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_AccessRequestV3

  /// GetAccessCapabilities requests the access capabilities of a user.
  func getAccessCapabilities(
    request: Types_AccessCapabilitiesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_AccessCapabilities

  /// GetAccessRequestAllowedPromotions returns a list of allowed promotions from an access request to an access list.
  func getAccessRequestAllowedPromotions(
    request: Proto_AccessRequestAllowedPromotionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_AccessRequestAllowedPromotionResponse

  /// GetPluginData gets all plugin data matching the supplied filter.
  func getPluginData(
    request: Types_PluginDataFilter,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_PluginDataSeq

  /// UpdatePluginData updates a plugin's resource-specific datastore.
  func updatePluginData(
    request: Types_PluginDataUpdateParams,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// Ping gets basic info about the auth server. This method is intended
  /// to mimic the behavior of the proxy's Ping method, and may be used by
  /// clients for verification or configuration on startup.
  func ping(
    request: Proto_PingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_PingResponse

  /// GetResetPasswordToken returns a reset password token.
  func getResetPasswordToken(
    request: Proto_GetResetPasswordTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserTokenV3

  /// CreateResetPasswordToken resets users current password and second factors and creates a reset
  /// password token.
  func createResetPasswordToken(
    request: Proto_CreateResetPasswordTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserTokenV3

  /// CreateBot creates a new bot user.
  func createBot(
    request: Proto_CreateBotRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_CreateBotResponse

  /// DeleteBot deletes a bot user.
  func deleteBot(
    request: Proto_DeleteBotRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetBotUsers gets all users with bot labels.
  func getBotUsers(
    request: Proto_GetBotUsersRequest,
    responseStream: GRPCAsyncResponseStreamWriter<Types_UserV2>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetUser gets a user resource by name.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func getUser(
    request: Proto_GetUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserV2

  /// GetCurrentUser returns current user as seen by the server.
  /// Useful especially in the context of remote clusters which perform role and trait mapping.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func getCurrentUser(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserV2

  /// GetCurrentUserRoles returns current user's roles.
  func getCurrentUserRoles(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    responseStream: GRPCAsyncResponseStreamWriter<Types_RoleV6>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetUsers gets all current user resources.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func getUsers(
    request: Proto_GetUsersRequest,
    responseStream: GRPCAsyncResponseStreamWriter<Types_UserV2>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// CreateUser inserts a new user entry to a backend.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func createUser(
    request: Types_UserV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateUser updates an existing user in a backend.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func updateUser(
    request: Types_UserV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteUser deletes an existing user in a backend by username.
  ///
  /// Deprecated: Use [teleport.users.v1.UsersService] instead.
  func deleteUser(
    request: Proto_DeleteUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ChangePassword allows a user to change their own password.
  func changePassword(
    request: Proto_ChangePasswordRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// AcquireSemaphore acquires lease with requested resources from semaphore.
  func acquireSemaphore(
    request: Types_AcquireSemaphoreRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SemaphoreLease

  /// KeepAliveSemaphoreLease updates semaphore lease.
  func keepAliveSemaphoreLease(
    request: Types_SemaphoreLease,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CancelSemaphoreLease cancels semaphore lease early.
  func cancelSemaphoreLease(
    request: Types_SemaphoreLease,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetSemaphores returns a list of all semaphores matching the supplied filter.
  func getSemaphores(
    request: Types_SemaphoreFilter,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Semaphores

  /// DeleteSemaphore deletes a semaphore matching the supplied filter.
  func deleteSemaphore(
    request: Types_SemaphoreFilter,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// EmitAuditEvent emits audit event
  func emitAuditEvent(
    request: Events_OneOf,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateAuditStream creates or resumes audit events streams
  func createAuditStream(
    requestStream: GRPCAsyncRequestStream<Proto_AuditStreamRequest>,
    responseStream: GRPCAsyncResponseStreamWriter<Events_StreamStatus>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// UpsertApplicationServer adds an application server.
  func upsertApplicationServer(
    request: Proto_UpsertApplicationServerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KeepAlive

  /// DeleteApplicationServer removes an application server.
  func deleteApplicationServer(
    request: Proto_DeleteApplicationServerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllApplicationServers removes all application servers.
  func deleteAllApplicationServers(
    request: Proto_DeleteAllApplicationServersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GenerateAppToken will generate a JWT token for application access.
  func generateAppToken(
    request: Proto_GenerateAppTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GenerateAppTokenResponse

  /// GetAppSession gets an application web session.
  func getAppSession(
    request: Proto_GetAppSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetAppSessionResponse

  /// ListAppSessions gets all application web sessions.
  func listAppSessions(
    request: Proto_ListAppSessionsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListAppSessionsResponse

  /// CreateAppSession creates an application web session. Application web
  /// sessions represent a browser session the client holds.
  func createAppSession(
    request: Proto_CreateAppSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_CreateAppSessionResponse

  /// DeleteAppSession removes an application web session.
  func deleteAppSession(
    request: Proto_DeleteAppSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllAppSessions removes all application web sessions.
  func deleteAllAppSessions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteUserAppSessions deletes all user’s application sessions.
  func deleteUserAppSessions(
    request: Proto_DeleteUserAppSessionsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateSnowflakeSession creates web session with sub kind Snowflake used by Database access
  /// Snowflake integration.
  func createSnowflakeSession(
    request: Proto_CreateSnowflakeSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_CreateSnowflakeSessionResponse

  /// GetSnowflakeSession returns a web session with sub kind Snowflake.
  func getSnowflakeSession(
    request: Proto_GetSnowflakeSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetSnowflakeSessionResponse

  /// GetSnowflakeSessions gets all Snowflake web sessions.
  func getSnowflakeSessions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetSnowflakeSessionsResponse

  /// DeleteSnowflakeSession removes a Snowflake web session.
  func deleteSnowflakeSession(
    request: Proto_DeleteSnowflakeSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllSnowflakeSessions removes all Snowflake web sessions.
  func deleteAllSnowflakeSessions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateSAMLIdPSession creates web session with sub kind saml_idp used by the SAML IdP.
  func createSAMLIdPSession(
    request: Proto_CreateSAMLIdPSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_CreateSAMLIdPSessionResponse

  /// GetSAMLIdPSession returns a SAML IdP session with sub kind saml_idp.
  func getSAMLIdPSession(
    request: Proto_GetSAMLIdPSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetSAMLIdPSessionResponse

  /// ListSAMLIdPSessions gets all SAML IdP sessions.
  func listSAMLIdPSessions(
    request: Proto_ListSAMLIdPSessionsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListSAMLIdPSessionsResponse

  /// DeleteSAMLIdPSession removes a SAML IdP session.
  func deleteSAMLIdPSession(
    request: Proto_DeleteSAMLIdPSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllSAMLIdPSessions removes all SAML IdP sessions.
  func deleteAllSAMLIdPSessions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteUserSAMLIdPSessions deletes all user’s SAML IdP sessions.
  func deleteUserSAMLIdPSessions(
    request: Proto_DeleteUserSAMLIdPSessionsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetWebSession gets a web session.
  func getWebSession(
    request: Types_GetWebSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWebSessionResponse

  /// GetWebSessions gets all web sessions.
  func getWebSessions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWebSessionsResponse

  /// DeleteWebSession deletes a web session.
  func deleteWebSession(
    request: Types_DeleteWebSessionRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllWebSessions deletes all web sessions.
  func deleteAllWebSessions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetWebToken gets a web token.
  func getWebToken(
    request: Types_GetWebTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWebTokenResponse

  /// GetWebTokens gets all web tokens.
  func getWebTokens(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWebTokensResponse

  /// DeleteWebToken deletes a web token.
  func deleteWebToken(
    request: Types_DeleteWebTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllWebTokens deletes all web tokens.
  func deleteAllWebTokens(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateRemoteCluster updates remote cluster
  func updateRemoteCluster(
    request: Types_RemoteClusterV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertKubernetesServer adds or updates a kubernetes server.
  func upsertKubernetesServer(
    request: Proto_UpsertKubernetesServerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KeepAlive

  /// DeleteKubernetesServer removes a kubernetes server.
  func deleteKubernetesServer(
    request: Proto_DeleteKubernetesServerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllKubernetesServers removes all kubernetes servers.
  func deleteAllKubernetesServers(
    request: Proto_DeleteAllKubernetesServersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertDatabaseServer registers a new database proxy server.
  func upsertDatabaseServer(
    request: Proto_UpsertDatabaseServerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KeepAlive

  /// DeleteDatabaseServer removes the specified database proxy server.
  func deleteDatabaseServer(
    request: Proto_DeleteDatabaseServerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllDatabaseServers removes all registered database proxy servers.
  func deleteAllDatabaseServers(
    request: Proto_DeleteAllDatabaseServersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertDatabaseService registers a new DatabaseService.
  func upsertDatabaseService(
    request: Proto_UpsertDatabaseServiceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KeepAlive

  /// DeleteDatabaseService removes the specified DatabaseService.
  func deleteDatabaseService(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllDatabaseServices removes all registered DatabaseServices.
  /// If there's an error deleting the resources, there's no guarantee of a rollback.
  /// A subset of resources might be deleted while others still exist.
  func deleteAllDatabaseServices(
    request: Proto_DeleteAllDatabaseServicesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// SignDatabaseCSR generates client certificate used by proxy to
  /// authenticate with a remote database service.
  func signDatabaseCSR(
    request: Proto_DatabaseCSRRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_DatabaseCSRResponse

  /// GenerateDatabaseCert generates client certificate used by a database
  /// service to authenticate with the database instance.
  func generateDatabaseCert(
    request: Proto_DatabaseCertRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_DatabaseCertResponse

  //// GenerateSnowflakeJWT generates JWT in the format required by Snowflake.
  func generateSnowflakeJWT(
    request: Proto_SnowflakeJWTRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_SnowflakeJWTResponse

  /// GetRole retrieves a role described by the given request.
  func getRole(
    request: Proto_GetRoleRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_RoleV6

  /// GetRole retrieves all roles.
  func getRoles(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetRolesResponse

  /// CreateRole creates a new role.
  func createRole(
    request: Proto_CreateRoleRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_RoleV6

  /// UpdateRole updates an existing role.
  func updateRole(
    request: Proto_UpdateRoleRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_RoleV6

  /// UpsertRoleV2 creates or overwrites an existing role.
  func upsertRoleV2(
    request: Proto_UpsertRoleRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_RoleV6

  /// UpsertRole upserts a role in a backend.
  ///
  /// Deprecated: use UpsertRoleV2 instead.
  func upsertRole(
    request: Types_RoleV6,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteRole deletes an existing role in a backend described by the given request.
  func deleteRole(
    request: Proto_DeleteRoleRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// AddMFADevice adds an MFA device for the user calling this RPC.
  ///
  /// The RPC is streaming both ways and the message sequence is:
  /// (-> means client-to-server, <- means server-to-client)
  /// -> Init
  /// <- ExistingMFAChallenge
  /// -> ExistingMFAResponse
  /// <- NewMFARegisterChallenge
  /// -> NewMFARegisterResponse
  /// <- Ack
  ///
  /// Deprecated: Use [AddMFADeviceSync] instead.
  func addMFADevice(
    requestStream: GRPCAsyncRequestStream<Proto_AddMFADeviceRequest>,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_AddMFADeviceResponse>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// DeleteMFADevice deletes an MFA device for the user calling this RPC.
  ///
  /// The RPC is streaming both ways and the message sequence is:
  /// (-> means client-to-server, <- means server-to-client)
  /// -> Init
  /// <- MFAChallenge
  /// -> MFAResponse
  /// <- Ack
  ///
  /// Deprecated: Use [DeleteMFADeviceSync] instead.
  func deleteMFADevice(
    requestStream: GRPCAsyncRequestStream<Proto_DeleteMFADeviceRequest>,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_DeleteMFADeviceResponse>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// AddMFADeviceSync adds a new MFA device.
  ///
  /// A typical MFA registration sequence calls the following RPCs:
  ///
  /// 1. CreateAuthenticateChallenge (necessary for registration challenge)
  /// 2. (optional) CreatePrivilegeToken
  /// 3. CreateRegisterChallenge (uses authn challenge and optionally a token)
  /// 4. AddMFADeviceSync
  func addMFADeviceSync(
    request: Proto_AddMFADeviceSyncRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_AddMFADeviceSyncResponse

  /// DeleteMFADeviceSync deletes a users MFA device (nonstream).
  ///
  /// A typical MFA deletion sequence calls the following RPCs:
  ///
  /// 1. (optional) CreateAuthenticateChallenge
  ///    (may be skipped depending on the token used, but is usually called
  ///    regardless)
  /// 2. (optional) CreatePrivilegeToken
  /// 3. DeleteMFADeviceSync (using either authn challenge or token)
  func deleteMFADeviceSync(
    request: Proto_DeleteMFADeviceSyncRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetMFADevices returns all MFA devices registered for the user calling
  /// this RPC.
  func getMFADevices(
    request: Proto_GetMFADevicesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetMFADevicesResponse

  /// CreateAuthenticateChallenge creates and returns MFA challenges for a users registered MFA
  /// devices.
  func createAuthenticateChallenge(
    request: Proto_CreateAuthenticateChallengeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_MFAAuthenticateChallenge

  /// CreateRegisterChallenge creates and returns MFA register challenge for a new MFA device.
  func createRegisterChallenge(
    request: Proto_CreateRegisterChallengeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_MFARegisterChallenge

  /// GetOIDCConnector gets an OIDC connector resource by name.
  func getOIDCConnector(
    request: Types_ResourceWithSecretsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCConnectorV3

  /// GetOIDCConnectors gets all current OIDC connector resources.
  func getOIDCConnectors(
    request: Types_ResourcesWithSecretsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCConnectorV3List

  /// UpsertOIDCConnector creates a new OIDC connector in the backend.
  func createOIDCConnector(
    request: Proto_CreateOIDCConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCConnectorV3

  /// UpsertOIDCConnector updates an existing OIDC connector in the backend.
  func updateOIDCConnector(
    request: Proto_UpdateOIDCConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCConnectorV3

  /// UpsertOIDCConnector upserts an OIDC connector in a backend.
  ///
  /// Deprecated: Use UpsertOIDCConnectorV2 instead.
  func upsertOIDCConnector(
    request: Types_OIDCConnectorV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertOIDCConnectorV2 upserts an OIDC connector in the backend.
  func upsertOIDCConnectorV2(
    request: Proto_UpsertOIDCConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCConnectorV3

  /// DeleteOIDCConnector deletes an existing OIDC connector in a backend by name.
  func deleteOIDCConnector(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateOIDCAuthRequest creates OIDCAuthRequest.
  func createOIDCAuthRequest(
    request: Types_OIDCAuthRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCAuthRequest

  /// GetOIDCAuthRequest returns OIDC auth request if found.
  func getOIDCAuthRequest(
    request: Proto_GetOIDCAuthRequestRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_OIDCAuthRequest

  /// GetSAMLConnector gets a SAML connector resource by name.
  func getSAMLConnector(
    request: Types_ResourceWithSecretsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLConnectorV2

  /// GetSAMLConnectors gets all current SAML connector resources.
  func getSAMLConnectors(
    request: Types_ResourcesWithSecretsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLConnectorV2List

  /// CreateSAMLConnector creates a new SAML connector in the backend.
  func createSAMLConnector(
    request: Proto_CreateSAMLConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLConnectorV2

  /// UpdateSAMLConnector updates an existing SAML connector in the backend.
  func updateSAMLConnector(
    request: Proto_UpdateSAMLConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLConnectorV2

  /// UpsertSAMLConnector upserts a SAML connector in a backend.
  ///
  /// Deprecated: Use UpsertSAMLConnectorV2 instead.
  func upsertSAMLConnector(
    request: Types_SAMLConnectorV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertSAMLConnectorV2 upserts a SAML connector in a backend.
  func upsertSAMLConnectorV2(
    request: Proto_UpsertSAMLConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLConnectorV2

  /// DeleteSAMLConnector deletes an existing SAML connector in a backend by name.
  func deleteSAMLConnector(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateSAMLAuthRequest creates SAMLAuthRequest.
  func createSAMLAuthRequest(
    request: Types_SAMLAuthRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLAuthRequest

  /// GetSAMLAuthRequest returns SAML auth request if found.
  func getSAMLAuthRequest(
    request: Proto_GetSAMLAuthRequestRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLAuthRequest

  /// GetGithubConnector gets a Github connector resource by name.
  func getGithubConnector(
    request: Types_ResourceWithSecretsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubConnectorV3

  /// GetGithubConnectors gets all current Github connector resources.
  func getGithubConnectors(
    request: Types_ResourcesWithSecretsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubConnectorV3List

  /// CreateGithubConnector creates a new Github connector in the backend.
  func createGithubConnector(
    request: Proto_CreateGithubConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubConnectorV3

  /// UpdateGithubConnector updates an existing Github connector in the backend.
  func updateGithubConnector(
    request: Proto_UpdateGithubConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubConnectorV3

  /// UpsertGithubConnector upserts a Github connector in a backend.
  ///
  /// Deprecated: Use UpsertGithubConnectorV2 instead.
  func upsertGithubConnector(
    request: Types_GithubConnectorV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertGithubConnectorV2 upserts a Github connector in a backend.
  func upsertGithubConnectorV2(
    request: Proto_UpsertGithubConnectorRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubConnectorV3

  /// DeleteGithubConnector deletes an existing Github connector in a backend by name.
  func deleteGithubConnector(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateGithubAuthRequest creates GithubAuthRequest.
  func createGithubAuthRequest(
    request: Types_GithubAuthRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubAuthRequest

  /// GetGithubAuthRequest returns Github auth request if found.
  func getGithubAuthRequest(
    request: Proto_GetGithubAuthRequestRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_GithubAuthRequest

  /// GetSSODiagnosticInfo returns SSO diagnostic info records.
  func getSSODiagnosticInfo(
    request: Proto_GetSSODiagnosticInfoRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SSODiagnosticInfo

  /// GetServerInfos returns a stream of ServerInfos.
  func getServerInfos(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    responseStream: GRPCAsyncResponseStreamWriter<Types_ServerInfoV1>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetServerInfo returns a ServerInfo by name.
  func getServerInfo(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ServerInfoV1

  /// UpsertServerInfo upserts a ServerInfo.
  func upsertServerInfo(
    request: Types_ServerInfoV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteServerInfo deletes a ServerInfo by name.
  func deleteServerInfo(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllServerInfos deletes all ServerInfos.
  func deleteAllServerInfos(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetTrustedCluster gets a Trusted Cluster resource by name.
  func getTrustedCluster(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_TrustedClusterV2

  /// GetTrustedClusters gets all current Trusted Cluster resources.
  func getTrustedClusters(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_TrustedClusterV2List

  /// UpsertTrustedCluster upserts a Trusted Cluster in a backend.
  func upsertTrustedCluster(
    request: Types_TrustedClusterV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_TrustedClusterV2

  /// DeleteTrustedCluster deletes an existing Trusted Cluster in a backend by name.
  func deleteTrustedCluster(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetToken retrieves a token described by the given request.
  func getToken(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ProvisionTokenV2

  /// GetToken retrieves all tokens.
  func getTokens(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ProvisionTokenV2List

  /// CreateTokenV2 creates a token in a backend.
  func createTokenV2(
    request: Proto_CreateTokenV2Request,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertTokenV2 upserts a token in a backend.
  func upsertTokenV2(
    request: Proto_UpsertTokenV2Request,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteToken deletes an existing token in a backend described by the given request.
  func deleteToken(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetClusterAuditConfig gets cluster audit configuration.
  func getClusterAuditConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ClusterAuditConfigV2

  /// GetClusterNetworkingConfig gets cluster networking configuration.
  func getClusterNetworkingConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ClusterNetworkingConfigV2

  /// SetClusterNetworkingConfig sets cluster networking configuration.
  func setClusterNetworkingConfig(
    request: Types_ClusterNetworkingConfigV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ResetClusterNetworkingConfig resets cluster networking configuration to defaults.
  func resetClusterNetworkingConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetSessionRecordingConfig gets session recording configuration.
  func getSessionRecordingConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SessionRecordingConfigV2

  /// SetSessionRecordingConfig sets session recording configuration.
  func setSessionRecordingConfig(
    request: Types_SessionRecordingConfigV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ResetSessionRecordingConfig resets session recording configuration to defaults.
  func resetSessionRecordingConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetAuthPreference gets cluster auth preference.
  func getAuthPreference(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_AuthPreferenceV2

  /// SetAuthPreference sets cluster auth preference.
  func setAuthPreference(
    request: Types_AuthPreferenceV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ResetAuthPreference resets cluster auth preference to defaults.
  func resetAuthPreference(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetUIConfig gets the configuration for the UI served by the proxy service
  func getUIConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UIConfigV1

  /// SetUIConfig sets the configuration for the UI served by the proxy service
  func setUIConfig(
    request: Types_UIConfigV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteUIConfig deletes the custom configuration for the UI served by the proxy service
  func deleteUIConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetEvents gets events from the audit log.
  func getEvents(
    request: Proto_GetEventsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Events

  /// GetSessionEvents gets completed session events from the audit log.
  func getSessionEvents(
    request: Proto_GetSessionEventsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Events

  /// GetLock gets a lock by name.
  func getLock(
    request: Proto_GetLockRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_LockV2

  /// GetLocks gets all/in-force locks that match at least one of the targets when specified.
  func getLocks(
    request: Proto_GetLocksRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetLocksResponse

  /// UpsertLock upserts a lock.
  func upsertLock(
    request: Types_LockV2,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteLock deletes a lock.
  func deleteLock(
    request: Proto_DeleteLockRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ReplaceRemoteLocks replaces the set of locks associated with a remote cluster.
  func replaceRemoteLocks(
    request: Proto_ReplaceRemoteLocksRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// StreamSessionEvents streams audit events from a given session recording.
  func streamSessionEvents(
    request: Proto_StreamSessionEventsRequest,
    responseStream: GRPCAsyncResponseStreamWriter<Events_OneOf>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// GetNetworkRestrictions retrieves all the network restrictions (allow/deny lists).
  func getNetworkRestrictions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_NetworkRestrictionsV4

  /// SetNetworkRestrictions updates the network restrictions.
  func setNetworkRestrictions(
    request: Types_NetworkRestrictionsV4,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteNetworkRestrictions delete the network restrictions.
  func deleteNetworkRestrictions(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetApps returns all registered applications.
  func getApps(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_AppV3List

  /// GetApp returns an application by name.
  func getApp(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_AppV3

  /// CreateApp creates a new application resource.
  func createApp(
    request: Types_AppV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateApp updates existing application resource.
  func updateApp(
    request: Types_AppV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteApp removes specified application resource.
  func deleteApp(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllApps removes all application resources.
  func deleteAllApps(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetDatabases returns all registered databases.
  func getDatabases(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_DatabaseV3List

  /// GetDatabase returns a database by name.
  func getDatabase(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_DatabaseV3

  /// CreateDatabase creates a new database resource.
  func createDatabase(
    request: Types_DatabaseV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateDatabase updates existing database resource.
  func updateDatabase(
    request: Types_DatabaseV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteDatabase removes specified database resource.
  func deleteDatabase(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllDatabases removes all database resources.
  func deleteAllDatabases(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetKubernetesClusters returns all registered kubernetes clusters.
  func getKubernetesClusters(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KubernetesClusterV3List

  /// GetKubernetesCluster returns a kubernetes cluster by name.
  func getKubernetesCluster(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KubernetesClusterV3

  /// CreateKubernetesCluster creates a new kubernetes cluster resource.
  func createKubernetesCluster(
    request: Types_KubernetesClusterV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateKubernetesCluster updates existing kubernetes cluster resource.
  func updateKubernetesCluster(
    request: Types_KubernetesClusterV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteKubernetesCluster removes specified kubernetes cluster resource.
  func deleteKubernetesCluster(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllKubernetesClusters removes all kubernetes cluster resources.
  func deleteAllKubernetesClusters(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetWindowsDesktopServices returns all registered Windows desktop services.
  func getWindowsDesktopServices(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWindowsDesktopServicesResponse

  /// GetWindowsDesktopService gets a Windows desktop service by name.
  func getWindowsDesktopService(
    request: Proto_GetWindowsDesktopServiceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWindowsDesktopServiceResponse

  /// UpsertWindowsDesktopService registers a new Windows desktop service.
  func upsertWindowsDesktopService(
    request: Types_WindowsDesktopServiceV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_KeepAlive

  /// DeleteWindowsDesktopService removes the specified Windows desktop service.
  func deleteWindowsDesktopService(
    request: Proto_DeleteWindowsDesktopServiceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllWindowsDesktopServices removes all registered Windows desktop services.
  func deleteAllWindowsDesktopServices(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetWindowsDesktops returns all registered Windows desktop hosts matching the supplied filter.
  func getWindowsDesktops(
    request: Types_WindowsDesktopFilter,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetWindowsDesktopsResponse

  /// CreateWindowsDesktop registers a new Windows desktop host.
  func createWindowsDesktop(
    request: Types_WindowsDesktopV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateWindowsDesktop updates an existing Windows desktop host.
  func updateWindowsDesktop(
    request: Types_WindowsDesktopV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpsertWindowsDesktop updates a Windows desktop host, creating it if it doesn't exist.
  func upsertWindowsDesktop(
    request: Types_WindowsDesktopV3,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteWindowsDesktop removes the specified Windows desktop host.
  /// Unlike GetWindowsDesktops, this call will delete at-most 1 desktop.
  /// To delete all desktops, use DeleteAllWindowsDesktops.
  func deleteWindowsDesktop(
    request: Proto_DeleteWindowsDesktopRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllWindowsDesktops removes all registered Windows desktop hosts.
  func deleteAllWindowsDesktops(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GenerateWindowsDesktopCert generates client smartcard certificate used
  /// by an RDP client to authenticate with Windows.
  func generateWindowsDesktopCert(
    request: Proto_WindowsDesktopCertRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_WindowsDesktopCertResponse

  /// GenerateCertAuthorityCRL creates an empty CRL for the specified CA.
  func generateCertAuthorityCRL(
    request: Proto_CertAuthorityRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_CRL

  /// CreateConnectionDiagnostic creates a new connection diagnostic.
  func createConnectionDiagnostic(
    request: Types_ConnectionDiagnosticV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateConnectionDiagnostic updates a connection diagnostic.
  func updateConnectionDiagnostic(
    request: Types_ConnectionDiagnosticV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetConnectionDiagnostic reads a connection diagnostic.
  func getConnectionDiagnostic(
    request: Proto_GetConnectionDiagnosticRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ConnectionDiagnosticV1

  /// AppendDiagnosticTrace appends a Trace to the ConnectionDiagnostic.
  func appendDiagnosticTrace(
    request: Proto_AppendDiagnosticTraceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ConnectionDiagnosticV1

  /// ChangeUserAuthentication allows a user to change their password and if enabled,
  /// also adds a new MFA device. After successful invocation, a new web session is created as well
  /// as a new set of recovery codes (if user meets the requirements to receive them), invalidating
  /// any existing codes the user previously had.
  func changeUserAuthentication(
    request: Proto_ChangeUserAuthenticationRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ChangeUserAuthenticationResponse

  /// StartAccountRecovery (exclusive to cloud users) is the first out of two step user
  /// verification needed to allow a user to recover their account. The first form of verification
  /// is a user's username and a recovery code. After successful verification, a recovery start
  /// token is created for the user which its ID will be used as part of a URL that will be emailed
  /// to the user (not done in this request). The user will be able to finish their second form of
  /// verification by clicking on this URL and following the prompts.
  ///
  /// If a valid user fails to provide correct recovery code for MaxAccountRecoveryAttempts,
  /// user account gets temporarily locked from further recovery attempts and from logging in.
  ///
  /// Start tokens last RecoveryStartTokenTTL.
  func startAccountRecovery(
    request: Proto_StartAccountRecoveryRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserTokenV3

  /// VerifyAccountRecovery (exclusive to cloud users) is the second step of the two step
  /// verification needed to allow a user to recover their account, after RPC StartAccountRecovery.
  /// The second form of verification is a user's password or their second factor (depending on
  /// what authentication they needed to recover). After successful verification, a recovery
  /// approved token is created which allows a user to request protected actions while not logged
  /// in e.g: setting a new password or a mfa device, viewing their MFA devices, deleting their MFA
  /// devices, and generating new recovery codes.
  ///
  /// The recovery start token to verify this request becomes deleted before
  /// creating a recovery approved token, which invalidates the recovery link users received
  /// to finish their verification.
  ///
  /// If user fails to verify themselves for MaxAccountRecoveryAttempts
  /// (combined attempts with RPC StartAccountRecovery), users account will be temporarily locked
  /// from logging in. If users still have unused recovery codes left, they still have
  /// opportunities to recover their account. To allow this, users recovery attempts are also
  /// deleted along with all user tokens which will force the user to restart the recovery process
  /// from step 1 (RPC StartAccountRecovery).
  ///
  /// Recovery approved tokens last RecoveryApprovedTokenTTL.
  func verifyAccountRecovery(
    request: Proto_VerifyAccountRecoveryRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserTokenV3

  /// CompleteAccountRecovery (exclusive to cloud users) is the last step in account
  /// recovery, after RPC's StartAccountRecovery and VerifyAccountRecovery. This step sets a new
  /// password or adds a new mfa device, allowing the user to regain access to their account with
  /// the new credentials. When the new authentication is successfully set, any user lock is
  /// removed so the user can login immediately afterwards.
  func completeAccountRecovery(
    request: Proto_CompleteAccountRecoveryRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// CreateAccountRecoveryCodes (exclusive to cloud users) creates new set of recovery codes for a
  /// user, replacing and invalidating any previously owned codes. Users can only get recovery
  /// codes if their username is in a valid email format.
  func createAccountRecoveryCodes(
    request: Proto_CreateAccountRecoveryCodesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_RecoveryCodes

  /// GetAccountRecoveryToken (exclusive to cloud users) returns a user token resource after
  /// verifying that the token requested has not expired and is of the correct recovery kind.
  /// Besides checking for validity of a token ID, it is also used to get basic information from
  /// the token e.g: username, state of recovery (started or approved) and the type of recovery
  /// requested (password or second factor).
  func getAccountRecoveryToken(
    request: Proto_GetAccountRecoveryTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserTokenV3

  /// GetAccountRecoveryCodes (exclusive to cloud users) is a request to return the user in context
  /// their recovery codes. This request will not return any secrets (the values of recovery
  /// codes), but instead returns non-sensitive data eg. when the recovery codes were created.
  func getAccountRecoveryCodes(
    request: Proto_GetAccountRecoveryCodesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_RecoveryCodes

  /// CreatePrivilegeToken returns a new privilege token after a logged in user successfully
  /// re-authenticates with their second factor device. Privilege token lasts PrivilegeTokenTTL and
  /// is used to gain access to privileged actions eg: deleting/adding a MFA device.
  func createPrivilegeToken(
    request: Proto_CreatePrivilegeTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserTokenV3

  /// GetInstaller retrieves the installer script resource
  func getInstaller(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_InstallerV1

  /// GetInstallers retrieves all of installer script resources.
  func getInstallers(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_InstallerV1List

  /// SetInstaller sets the installer script resource
  func setInstaller(
    request: Types_InstallerV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteInstaller removes the specified installer script resource
  func deleteInstaller(
    request: Types_ResourceRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllInstallers removes all installer script resources
  func deleteAllInstallers(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ListResources retrieves a paginated list of resources.
  func listResources(
    request: Proto_ListResourcesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListResourcesResponse

  /// ListUnifiedResources retrieves a paginated list of all resource types displayable in the UI.
  func listUnifiedResources(
    request: Proto_ListUnifiedResourcesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListUnifiedResourcesResponse

  /// GetSSHTargets gets all servers that would match an equivalent ssh dial request. Note that this method
  /// returns all resources directly accessible to the user *and* all resources available via 'SearchAsRoles',
  /// which is what we want when handling things like ambiguous host errors and resource-based access requests,
  /// but may result in confusing behavior if it is used outside of those contexts.
  func getSSHTargets(
    request: Proto_GetSSHTargetsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetSSHTargetsResponse

  /// GetDomainName returns local auth domain of the current auth server
  func getDomainName(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetDomainNameResponse

  /// GetClusterCACert returns the PEM-encoded TLS certs for the local cluster
  /// without signing keys. If the cluster has multiple TLS certs, they will
  /// all be appended.
  func getClusterCACert(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetClusterCACertResponse

  /// SubmitUsageEvent submits an external usage event.
  func submitUsageEvent(
    request: Proto_SubmitUsageEventRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetLicense returns the license used to start the auth server.
  func getLicense(
    request: Proto_GetLicenseRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_GetLicenseResponse

  /// ListReleases returns a list of Teleport Enterprise releases.
  func listReleases(
    request: Proto_ListReleasesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListReleasesResponse

  /// ListSAMLIdPServiceProviders returns a paginated list of SAML IdP service provider resources.
  func listSAMLIdPServiceProviders(
    request: Proto_ListSAMLIdPServiceProvidersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListSAMLIdPServiceProvidersResponse

  /// GetSAMLIdPServiceProvider returns the specified SAML IdP service provider resources.
  func getSAMLIdPServiceProvider(
    request: Proto_GetSAMLIdPServiceProviderRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_SAMLIdPServiceProviderV1

  /// CreateSAMLIdPServiceProvider creates a new SAML IdP service provider resource.
  func createSAMLIdPServiceProvider(
    request: Types_SAMLIdPServiceProviderV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateSAMLIdPServiceProvider updates an existing SAML IdP service provider resource.
  func updateSAMLIdPServiceProvider(
    request: Types_SAMLIdPServiceProviderV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteSAMLIdPServiceProvider removes the specified SAML IdP service provider resource.
  func deleteSAMLIdPServiceProvider(
    request: Proto_DeleteSAMLIdPServiceProviderRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllSAMLIdPServiceProviders removes all SAML IdP service providers.
  func deleteAllSAMLIdPServiceProviders(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ListUserGroups returns a paginated list of user group resources.
  func listUserGroups(
    request: Proto_ListUserGroupsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ListUserGroupsResponse

  /// GetUserGroup returns the specified user group resource.
  func getUserGroup(
    request: Proto_GetUserGroupRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_UserGroupV1

  /// CreateUserGroup creates a new user group resource.
  func createUserGroup(
    request: Types_UserGroupV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// UpdateUserGroup updates an existing user group resource.
  func updateUserGroup(
    request: Types_UserGroupV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteUserGroup removes the specified user group resource.
  func deleteUserGroup(
    request: Proto_DeleteUserGroupRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteAllUserGroups removes all user groups.
  func deleteAllUserGroups(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// GetHeadlessAuthentication is a request to retrieve a headless authentication from the backend.
  func getHeadlessAuthentication(
    request: Proto_GetHeadlessAuthenticationRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_HeadlessAuthentication

  /// WatchPendingHeadlessAuthentications watches the backend for pending headless authentication requests for the user.
  func watchPendingHeadlessAuthentications(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    responseStream: GRPCAsyncResponseStreamWriter<Proto_Event>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// UpdateHeadlessAuthenticationState is a request to update a headless authentication's state.
  func updateHeadlessAuthenticationState(
    request: Proto_UpdateHeadlessAuthenticationStateRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// ExportUpgradeWindows is used to load derived maintenance window values for agents that
  /// need to export schedules to external upgraders.
  func exportUpgradeWindows(
    request: Proto_ExportUpgradeWindowsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_ExportUpgradeWindowsResponse

  /// GetClusterMaintenanceConfig gets the current maintenance window config singleton.
  func getClusterMaintenanceConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> Types_ClusterMaintenanceConfigV1

  /// UpdateClusterMaintenanceConfig updates the current maintenance window config singleton.
  func updateClusterMaintenanceConfig(
    request: Types_ClusterMaintenanceConfigV1,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  /// DeleteClusterMaintenanceConfig deletes the current maintenance window config singleton.
  func deleteClusterMaintenanceConfig(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Proto_AuthServiceAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Proto_AuthServiceServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Proto_AuthServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Proto_AuthServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "InventoryControlStream":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpstreamInventoryOneOf>(),
        responseSerializer: ProtobufSerializer<Proto_DownstreamInventoryOneOf>(),
        interceptors: self.interceptors?.makeInventoryControlStreamInterceptors() ?? [],
        wrapping: { try await self.inventoryControlStream(requestStream: $0, responseStream: $1, context: $2) }
      )

    case "GetInventoryStatus":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_InventoryStatusRequest>(),
        responseSerializer: ProtobufSerializer<Proto_InventoryStatusSummary>(),
        interceptors: self.interceptors?.makeGetInventoryStatusInterceptors() ?? [],
        wrapping: { try await self.getInventoryStatus(request: $0, context: $1) }
      )

    case "GetInventoryConnectedServiceCounts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_InventoryConnectedServiceCountsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_InventoryConnectedServiceCounts>(),
        interceptors: self.interceptors?.makeGetInventoryConnectedServiceCountsInterceptors() ?? [],
        wrapping: { try await self.getInventoryConnectedServiceCounts(request: $0, context: $1) }
      )

    case "PingInventory":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_InventoryPingRequest>(),
        responseSerializer: ProtobufSerializer<Proto_InventoryPingResponse>(),
        interceptors: self.interceptors?.makePingInventoryInterceptors() ?? [],
        wrapping: { try await self.pingInventory(request: $0, context: $1) }
      )

    case "GetInstances":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_InstanceFilter>(),
        responseSerializer: ProtobufSerializer<Types_InstanceV1>(),
        interceptors: self.interceptors?.makeGetInstancesInterceptors() ?? [],
        wrapping: { try await self.getInstances(request: $0, responseStream: $1, context: $2) }
      )

    case "GetClusterAlerts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GetClusterAlertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetClusterAlertsResponse>(),
        interceptors: self.interceptors?.makeGetClusterAlertsInterceptors() ?? [],
        wrapping: { try await self.getClusterAlerts(request: $0, context: $1) }
      )

    case "UpsertClusterAlert":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertClusterAlertRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertClusterAlertInterceptors() ?? [],
        wrapping: { try await self.upsertClusterAlert(request: $0, context: $1) }
      )

    case "CreateAlertAck":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AlertAcknowledgement>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateAlertAckInterceptors() ?? [],
        wrapping: { try await self.createAlertAck(request: $0, context: $1) }
      )

    case "GetAlertAcks":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAlertAcksRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetAlertAcksResponse>(),
        interceptors: self.interceptors?.makeGetAlertAcksInterceptors() ?? [],
        wrapping: { try await self.getAlertAcks(request: $0, context: $1) }
      )

    case "ClearAlertAcks":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ClearAlertAcksRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeClearAlertAcksInterceptors() ?? [],
        wrapping: { try await self.clearAlertAcks(request: $0, context: $1) }
      )

    case "MaintainSessionPresence":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_PresenceMFAChallengeSend>(),
        responseSerializer: ProtobufSerializer<Proto_MFAAuthenticateChallenge>(),
        interceptors: self.interceptors?.makeMaintainSessionPresenceInterceptors() ?? [],
        wrapping: { try await self.maintainSessionPresence(requestStream: $0, responseStream: $1, context: $2) }
      )

    case "CreateSessionTracker":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeCreateSessionTrackerInterceptors() ?? [],
        wrapping: { try await self.createSessionTracker(request: $0, context: $1) }
      )

    case "GetSessionTracker":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeGetSessionTrackerInterceptors() ?? [],
        wrapping: { try await self.getSessionTracker(request: $0, context: $1) }
      )

    case "GetActiveSessionTrackers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeGetActiveSessionTrackersInterceptors() ?? [],
        wrapping: { try await self.getActiveSessionTrackers(request: $0, responseStream: $1, context: $2) }
      )

    case "GetActiveSessionTrackersWithFilter":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SessionTrackerFilter>(),
        responseSerializer: ProtobufSerializer<Types_SessionTrackerV1>(),
        interceptors: self.interceptors?.makeGetActiveSessionTrackersWithFilterInterceptors() ?? [],
        wrapping: { try await self.getActiveSessionTrackersWithFilter(request: $0, responseStream: $1, context: $2) }
      )

    case "RemoveSessionTracker":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_RemoveSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeRemoveSessionTrackerInterceptors() ?? [],
        wrapping: { try await self.removeSessionTracker(request: $0, context: $1) }
      )

    case "UpdateSessionTracker":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateSessionTrackerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateSessionTrackerInterceptors() ?? [],
        wrapping: { try await self.updateSessionTracker(request: $0, context: $1) }
      )

    case "SendKeepAlives":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_KeepAlive>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSendKeepAlivesInterceptors() ?? [],
        wrapping: { try await self.sendKeepAlives(requestStream: $0, context: $1) }
      )

    case "WatchEvents":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Watch>(),
        responseSerializer: ProtobufSerializer<Proto_Event>(),
        interceptors: self.interceptors?.makeWatchEventsInterceptors() ?? [],
        wrapping: { try await self.watchEvents(request: $0, responseStream: $1, context: $2) }
      )

    case "GetNode":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceInNamespaceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ServerV2>(),
        interceptors: self.interceptors?.makeGetNodeInterceptors() ?? [],
        wrapping: { try await self.getNode(request: $0, context: $1) }
      )

    case "UpsertNode":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ServerV2>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertNodeInterceptors() ?? [],
        wrapping: { try await self.upsertNode(request: $0, context: $1) }
      )

    case "DeleteNode":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceInNamespaceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteNodeInterceptors() ?? [],
        wrapping: { try await self.deleteNode(request: $0, context: $1) }
      )

    case "DeleteAllNodes":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesInNamespaceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllNodesInterceptors() ?? [],
        wrapping: { try await self.deleteAllNodes(request: $0, context: $1) }
      )

    case "GenerateUserCerts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UserCertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Certs>(),
        interceptors: self.interceptors?.makeGenerateUserCertsInterceptors() ?? [],
        wrapping: { try await self.generateUserCerts(request: $0, context: $1) }
      )

    case "GenerateHostCerts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_HostCertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Certs>(),
        interceptors: self.interceptors?.makeGenerateHostCertsInterceptors() ?? [],
        wrapping: { try await self.generateHostCerts(request: $0, context: $1) }
      )

    case "GenerateUserSingleUseCerts":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UserSingleUseCertsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_UserSingleUseCertsResponse>(),
        interceptors: self.interceptors?.makeGenerateUserSingleUseCertsInterceptors() ?? [],
        wrapping: { try await self.generateUserSingleUseCerts(requestStream: $0, responseStream: $1, context: $2) }
      )

    case "GenerateOpenSSHCert":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_OpenSSHCertRequest>(),
        responseSerializer: ProtobufSerializer<Proto_OpenSSHCert>(),
        interceptors: self.interceptors?.makeGenerateOpenSSHCertInterceptors() ?? [],
        wrapping: { try await self.generateOpenSSHCert(request: $0, context: $1) }
      )

    case "IsMFARequired":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_IsMFARequiredRequest>(),
        responseSerializer: ProtobufSerializer<Proto_IsMFARequiredResponse>(),
        interceptors: self.interceptors?.makeIsMFARequiredInterceptors() ?? [],
        wrapping: { try await self.isMFARequired(request: $0, context: $1) }
      )

    case "GetAccessRequestsV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessRequestFilter>(),
        responseSerializer: ProtobufSerializer<Types_AccessRequestV3>(),
        interceptors: self.interceptors?.makeGetAccessRequestsV2Interceptors() ?? [],
        wrapping: { try await self.getAccessRequestsV2(request: $0, responseStream: $1, context: $2) }
      )

    case "CreateAccessRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessRequestV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateAccessRequestInterceptors() ?? [],
        wrapping: { try await self.createAccessRequest(request: $0, context: $1) }
      )

    case "CreateAccessRequestV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessRequestV3>(),
        responseSerializer: ProtobufSerializer<Types_AccessRequestV3>(),
        interceptors: self.interceptors?.makeCreateAccessRequestV2Interceptors() ?? [],
        wrapping: { try await self.createAccessRequestV2(request: $0, context: $1) }
      )

    case "DeleteAccessRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_RequestID>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAccessRequestInterceptors() ?? [],
        wrapping: { try await self.deleteAccessRequest(request: $0, context: $1) }
      )

    case "SetAccessRequestState":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_RequestStateSetter>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetAccessRequestStateInterceptors() ?? [],
        wrapping: { try await self.setAccessRequestState(request: $0, context: $1) }
      )

    case "SubmitAccessReview":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessReviewSubmission>(),
        responseSerializer: ProtobufSerializer<Types_AccessRequestV3>(),
        interceptors: self.interceptors?.makeSubmitAccessReviewInterceptors() ?? [],
        wrapping: { try await self.submitAccessReview(request: $0, context: $1) }
      )

    case "GetAccessCapabilities":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AccessCapabilitiesRequest>(),
        responseSerializer: ProtobufSerializer<Types_AccessCapabilities>(),
        interceptors: self.interceptors?.makeGetAccessCapabilitiesInterceptors() ?? [],
        wrapping: { try await self.getAccessCapabilities(request: $0, context: $1) }
      )

    case "GetAccessRequestAllowedPromotions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AccessRequestAllowedPromotionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_AccessRequestAllowedPromotionResponse>(),
        interceptors: self.interceptors?.makeGetAccessRequestAllowedPromotionsInterceptors() ?? [],
        wrapping: { try await self.getAccessRequestAllowedPromotions(request: $0, context: $1) }
      )

    case "GetPluginData":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_PluginDataFilter>(),
        responseSerializer: ProtobufSerializer<Proto_PluginDataSeq>(),
        interceptors: self.interceptors?.makeGetPluginDataInterceptors() ?? [],
        wrapping: { try await self.getPluginData(request: $0, context: $1) }
      )

    case "UpdatePluginData":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_PluginDataUpdateParams>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdatePluginDataInterceptors() ?? [],
        wrapping: { try await self.updatePluginData(request: $0, context: $1) }
      )

    case "Ping":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_PingRequest>(),
        responseSerializer: ProtobufSerializer<Proto_PingResponse>(),
        interceptors: self.interceptors?.makePingInterceptors() ?? [],
        wrapping: { try await self.ping(request: $0, context: $1) }
      )

    case "GetResetPasswordToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetResetPasswordTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeGetResetPasswordTokenInterceptors() ?? [],
        wrapping: { try await self.getResetPasswordToken(request: $0, context: $1) }
      )

    case "CreateResetPasswordToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateResetPasswordTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeCreateResetPasswordTokenInterceptors() ?? [],
        wrapping: { try await self.createResetPasswordToken(request: $0, context: $1) }
      )

    case "CreateBot":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateBotRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateBotResponse>(),
        interceptors: self.interceptors?.makeCreateBotInterceptors() ?? [],
        wrapping: { try await self.createBot(request: $0, context: $1) }
      )

    case "DeleteBot":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteBotRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteBotInterceptors() ?? [],
        wrapping: { try await self.deleteBot(request: $0, context: $1) }
      )

    case "GetBotUsers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetBotUsersRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetBotUsersInterceptors() ?? [],
        wrapping: { try await self.getBotUsers(request: $0, responseStream: $1, context: $2) }
      )

    case "GetUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetUserRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetUserInterceptors() ?? [],
        wrapping: { try await self.getUser(request: $0, context: $1) }
      )

    case "GetCurrentUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetCurrentUserInterceptors() ?? [],
        wrapping: { try await self.getCurrentUser(request: $0, context: $1) }
      )

    case "GetCurrentUserRoles":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeGetCurrentUserRolesInterceptors() ?? [],
        wrapping: { try await self.getCurrentUserRoles(request: $0, responseStream: $1, context: $2) }
      )

    case "GetUsers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetUsersRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserV2>(),
        interceptors: self.interceptors?.makeGetUsersInterceptors() ?? [],
        wrapping: { try await self.getUsers(request: $0, responseStream: $1, context: $2) }
      )

    case "CreateUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateUserInterceptors() ?? [],
        wrapping: { try await self.createUser(request: $0, context: $1) }
      )

    case "UpdateUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateUserInterceptors() ?? [],
        wrapping: { try await self.updateUser(request: $0, context: $1) }
      )

    case "DeleteUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? [],
        wrapping: { try await self.deleteUser(request: $0, context: $1) }
      )

    case "ChangePassword":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ChangePasswordRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeChangePasswordInterceptors() ?? [],
        wrapping: { try await self.changePassword(request: $0, context: $1) }
      )

    case "AcquireSemaphore":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AcquireSemaphoreRequest>(),
        responseSerializer: ProtobufSerializer<Types_SemaphoreLease>(),
        interceptors: self.interceptors?.makeAcquireSemaphoreInterceptors() ?? [],
        wrapping: { try await self.acquireSemaphore(request: $0, context: $1) }
      )

    case "KeepAliveSemaphoreLease":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreLease>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeKeepAliveSemaphoreLeaseInterceptors() ?? [],
        wrapping: { try await self.keepAliveSemaphoreLease(request: $0, context: $1) }
      )

    case "CancelSemaphoreLease":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreLease>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCancelSemaphoreLeaseInterceptors() ?? [],
        wrapping: { try await self.cancelSemaphoreLease(request: $0, context: $1) }
      )

    case "GetSemaphores":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreFilter>(),
        responseSerializer: ProtobufSerializer<Proto_Semaphores>(),
        interceptors: self.interceptors?.makeGetSemaphoresInterceptors() ?? [],
        wrapping: { try await self.getSemaphores(request: $0, context: $1) }
      )

    case "DeleteSemaphore":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SemaphoreFilter>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSemaphoreInterceptors() ?? [],
        wrapping: { try await self.deleteSemaphore(request: $0, context: $1) }
      )

    case "EmitAuditEvent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Events_OneOf>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeEmitAuditEventInterceptors() ?? [],
        wrapping: { try await self.emitAuditEvent(request: $0, context: $1) }
      )

    case "CreateAuditStream":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AuditStreamRequest>(),
        responseSerializer: ProtobufSerializer<Events_StreamStatus>(),
        interceptors: self.interceptors?.makeCreateAuditStreamInterceptors() ?? [],
        wrapping: { try await self.createAuditStream(requestStream: $0, responseStream: $1, context: $2) }
      )

    case "UpsertApplicationServer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertApplicationServerRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertApplicationServerInterceptors() ?? [],
        wrapping: { try await self.upsertApplicationServer(request: $0, context: $1) }
      )

    case "DeleteApplicationServer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteApplicationServerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteApplicationServerInterceptors() ?? [],
        wrapping: { try await self.deleteApplicationServer(request: $0, context: $1) }
      )

    case "DeleteAllApplicationServers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllApplicationServersRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllApplicationServersInterceptors() ?? [],
        wrapping: { try await self.deleteAllApplicationServers(request: $0, context: $1) }
      )

    case "GenerateAppToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GenerateAppTokenRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GenerateAppTokenResponse>(),
        interceptors: self.interceptors?.makeGenerateAppTokenInterceptors() ?? [],
        wrapping: { try await self.generateAppToken(request: $0, context: $1) }
      )

    case "GetAppSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAppSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetAppSessionResponse>(),
        interceptors: self.interceptors?.makeGetAppSessionInterceptors() ?? [],
        wrapping: { try await self.getAppSession(request: $0, context: $1) }
      )

    case "ListAppSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListAppSessionsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListAppSessionsResponse>(),
        interceptors: self.interceptors?.makeListAppSessionsInterceptors() ?? [],
        wrapping: { try await self.listAppSessions(request: $0, context: $1) }
      )

    case "CreateAppSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateAppSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateAppSessionResponse>(),
        interceptors: self.interceptors?.makeCreateAppSessionInterceptors() ?? [],
        wrapping: { try await self.createAppSession(request: $0, context: $1) }
      )

    case "DeleteAppSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAppSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAppSessionInterceptors() ?? [],
        wrapping: { try await self.deleteAppSession(request: $0, context: $1) }
      )

    case "DeleteAllAppSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllAppSessionsInterceptors() ?? [],
        wrapping: { try await self.deleteAllAppSessions(request: $0, context: $1) }
      )

    case "DeleteUserAppSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserAppSessionsRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserAppSessionsInterceptors() ?? [],
        wrapping: { try await self.deleteUserAppSessions(request: $0, context: $1) }
      )

    case "CreateSnowflakeSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSnowflakeSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateSnowflakeSessionResponse>(),
        interceptors: self.interceptors?.makeCreateSnowflakeSessionInterceptors() ?? [],
        wrapping: { try await self.createSnowflakeSession(request: $0, context: $1) }
      )

    case "GetSnowflakeSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSnowflakeSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetSnowflakeSessionResponse>(),
        interceptors: self.interceptors?.makeGetSnowflakeSessionInterceptors() ?? [],
        wrapping: { try await self.getSnowflakeSession(request: $0, context: $1) }
      )

    case "GetSnowflakeSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetSnowflakeSessionsResponse>(),
        interceptors: self.interceptors?.makeGetSnowflakeSessionsInterceptors() ?? [],
        wrapping: { try await self.getSnowflakeSessions(request: $0, context: $1) }
      )

    case "DeleteSnowflakeSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteSnowflakeSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSnowflakeSessionInterceptors() ?? [],
        wrapping: { try await self.deleteSnowflakeSession(request: $0, context: $1) }
      )

    case "DeleteAllSnowflakeSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllSnowflakeSessionsInterceptors() ?? [],
        wrapping: { try await self.deleteAllSnowflakeSessions(request: $0, context: $1) }
      )

    case "CreateSAMLIdPSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSAMLIdPSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CreateSAMLIdPSessionResponse>(),
        interceptors: self.interceptors?.makeCreateSAMLIdPSessionInterceptors() ?? [],
        wrapping: { try await self.createSAMLIdPSession(request: $0, context: $1) }
      )

    case "GetSAMLIdPSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSAMLIdPSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetSAMLIdPSessionResponse>(),
        interceptors: self.interceptors?.makeGetSAMLIdPSessionInterceptors() ?? [],
        wrapping: { try await self.getSAMLIdPSession(request: $0, context: $1) }
      )

    case "ListSAMLIdPSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListSAMLIdPSessionsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListSAMLIdPSessionsResponse>(),
        interceptors: self.interceptors?.makeListSAMLIdPSessionsInterceptors() ?? [],
        wrapping: { try await self.listSAMLIdPSessions(request: $0, context: $1) }
      )

    case "DeleteSAMLIdPSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteSAMLIdPSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSAMLIdPSessionInterceptors() ?? [],
        wrapping: { try await self.deleteSAMLIdPSession(request: $0, context: $1) }
      )

    case "DeleteAllSAMLIdPSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllSAMLIdPSessionsInterceptors() ?? [],
        wrapping: { try await self.deleteAllSAMLIdPSessions(request: $0, context: $1) }
      )

    case "DeleteUserSAMLIdPSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserSAMLIdPSessionsRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserSAMLIdPSessionsInterceptors() ?? [],
        wrapping: { try await self.deleteUserSAMLIdPSessions(request: $0, context: $1) }
      )

    case "GetWebSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GetWebSessionRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebSessionResponse>(),
        interceptors: self.interceptors?.makeGetWebSessionInterceptors() ?? [],
        wrapping: { try await self.getWebSession(request: $0, context: $1) }
      )

    case "GetWebSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebSessionsResponse>(),
        interceptors: self.interceptors?.makeGetWebSessionsInterceptors() ?? [],
        wrapping: { try await self.getWebSessions(request: $0, context: $1) }
      )

    case "DeleteWebSession":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DeleteWebSessionRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWebSessionInterceptors() ?? [],
        wrapping: { try await self.deleteWebSession(request: $0, context: $1) }
      )

    case "DeleteAllWebSessions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWebSessionsInterceptors() ?? [],
        wrapping: { try await self.deleteAllWebSessions(request: $0, context: $1) }
      )

    case "GetWebToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GetWebTokenRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebTokenResponse>(),
        interceptors: self.interceptors?.makeGetWebTokenInterceptors() ?? [],
        wrapping: { try await self.getWebToken(request: $0, context: $1) }
      )

    case "GetWebTokens":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetWebTokensResponse>(),
        interceptors: self.interceptors?.makeGetWebTokensInterceptors() ?? [],
        wrapping: { try await self.getWebTokens(request: $0, context: $1) }
      )

    case "DeleteWebToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DeleteWebTokenRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWebTokenInterceptors() ?? [],
        wrapping: { try await self.deleteWebToken(request: $0, context: $1) }
      )

    case "DeleteAllWebTokens":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWebTokensInterceptors() ?? [],
        wrapping: { try await self.deleteAllWebTokens(request: $0, context: $1) }
      )

    case "UpdateRemoteCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_RemoteClusterV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateRemoteClusterInterceptors() ?? [],
        wrapping: { try await self.updateRemoteCluster(request: $0, context: $1) }
      )

    case "UpsertKubernetesServer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertKubernetesServerRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertKubernetesServerInterceptors() ?? [],
        wrapping: { try await self.upsertKubernetesServer(request: $0, context: $1) }
      )

    case "DeleteKubernetesServer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteKubernetesServerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteKubernetesServerInterceptors() ?? [],
        wrapping: { try await self.deleteKubernetesServer(request: $0, context: $1) }
      )

    case "DeleteAllKubernetesServers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllKubernetesServersRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllKubernetesServersInterceptors() ?? [],
        wrapping: { try await self.deleteAllKubernetesServers(request: $0, context: $1) }
      )

    case "UpsertDatabaseServer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertDatabaseServerRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertDatabaseServerInterceptors() ?? [],
        wrapping: { try await self.upsertDatabaseServer(request: $0, context: $1) }
      )

    case "DeleteDatabaseServer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteDatabaseServerRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteDatabaseServerInterceptors() ?? [],
        wrapping: { try await self.deleteDatabaseServer(request: $0, context: $1) }
      )

    case "DeleteAllDatabaseServers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllDatabaseServersRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllDatabaseServersInterceptors() ?? [],
        wrapping: { try await self.deleteAllDatabaseServers(request: $0, context: $1) }
      )

    case "UpsertDatabaseService":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertDatabaseServiceRequest>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertDatabaseServiceInterceptors() ?? [],
        wrapping: { try await self.upsertDatabaseService(request: $0, context: $1) }
      )

    case "DeleteDatabaseService":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteDatabaseServiceInterceptors() ?? [],
        wrapping: { try await self.deleteDatabaseService(request: $0, context: $1) }
      )

    case "DeleteAllDatabaseServices":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteAllDatabaseServicesRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllDatabaseServicesInterceptors() ?? [],
        wrapping: { try await self.deleteAllDatabaseServices(request: $0, context: $1) }
      )

    case "SignDatabaseCSR":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DatabaseCSRRequest>(),
        responseSerializer: ProtobufSerializer<Proto_DatabaseCSRResponse>(),
        interceptors: self.interceptors?.makeSignDatabaseCSRInterceptors() ?? [],
        wrapping: { try await self.signDatabaseCSR(request: $0, context: $1) }
      )

    case "GenerateDatabaseCert":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DatabaseCertRequest>(),
        responseSerializer: ProtobufSerializer<Proto_DatabaseCertResponse>(),
        interceptors: self.interceptors?.makeGenerateDatabaseCertInterceptors() ?? [],
        wrapping: { try await self.generateDatabaseCert(request: $0, context: $1) }
      )

    case "GenerateSnowflakeJWT":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_SnowflakeJWTRequest>(),
        responseSerializer: ProtobufSerializer<Proto_SnowflakeJWTResponse>(),
        interceptors: self.interceptors?.makeGenerateSnowflakeJWTInterceptors() ?? [],
        wrapping: { try await self.generateSnowflakeJWT(request: $0, context: $1) }
      )

    case "GetRole":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeGetRoleInterceptors() ?? [],
        wrapping: { try await self.getRole(request: $0, context: $1) }
      )

    case "GetRoles":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetRolesResponse>(),
        interceptors: self.interceptors?.makeGetRolesInterceptors() ?? [],
        wrapping: { try await self.getRoles(request: $0, context: $1) }
      )

    case "CreateRole":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeCreateRoleInterceptors() ?? [],
        wrapping: { try await self.createRole(request: $0, context: $1) }
      )

    case "UpdateRole":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeUpdateRoleInterceptors() ?? [],
        wrapping: { try await self.updateRole(request: $0, context: $1) }
      )

    case "UpsertRoleV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertRoleRequest>(),
        responseSerializer: ProtobufSerializer<Types_RoleV6>(),
        interceptors: self.interceptors?.makeUpsertRoleV2Interceptors() ?? [],
        wrapping: { try await self.upsertRoleV2(request: $0, context: $1) }
      )

    case "UpsertRole":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_RoleV6>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertRoleInterceptors() ?? [],
        wrapping: { try await self.upsertRole(request: $0, context: $1) }
      )

    case "DeleteRole":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteRoleRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteRoleInterceptors() ?? [],
        wrapping: { try await self.deleteRole(request: $0, context: $1) }
      )

    case "AddMFADevice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AddMFADeviceRequest>(),
        responseSerializer: ProtobufSerializer<Proto_AddMFADeviceResponse>(),
        interceptors: self.interceptors?.makeAddMFADeviceInterceptors() ?? [],
        wrapping: { try await self.addMFADevice(requestStream: $0, responseStream: $1, context: $2) }
      )

    case "DeleteMFADevice":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteMFADeviceRequest>(),
        responseSerializer: ProtobufSerializer<Proto_DeleteMFADeviceResponse>(),
        interceptors: self.interceptors?.makeDeleteMFADeviceInterceptors() ?? [],
        wrapping: { try await self.deleteMFADevice(requestStream: $0, responseStream: $1, context: $2) }
      )

    case "AddMFADeviceSync":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AddMFADeviceSyncRequest>(),
        responseSerializer: ProtobufSerializer<Proto_AddMFADeviceSyncResponse>(),
        interceptors: self.interceptors?.makeAddMFADeviceSyncInterceptors() ?? [],
        wrapping: { try await self.addMFADeviceSync(request: $0, context: $1) }
      )

    case "DeleteMFADeviceSync":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteMFADeviceSyncRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteMFADeviceSyncInterceptors() ?? [],
        wrapping: { try await self.deleteMFADeviceSync(request: $0, context: $1) }
      )

    case "GetMFADevices":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetMFADevicesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetMFADevicesResponse>(),
        interceptors: self.interceptors?.makeGetMFADevicesInterceptors() ?? [],
        wrapping: { try await self.getMFADevices(request: $0, context: $1) }
      )

    case "CreateAuthenticateChallenge":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateAuthenticateChallengeRequest>(),
        responseSerializer: ProtobufSerializer<Proto_MFAAuthenticateChallenge>(),
        interceptors: self.interceptors?.makeCreateAuthenticateChallengeInterceptors() ?? [],
        wrapping: { try await self.createAuthenticateChallenge(request: $0, context: $1) }
      )

    case "CreateRegisterChallenge":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateRegisterChallengeRequest>(),
        responseSerializer: ProtobufSerializer<Proto_MFARegisterChallenge>(),
        interceptors: self.interceptors?.makeCreateRegisterChallengeInterceptors() ?? [],
        wrapping: { try await self.createRegisterChallenge(request: $0, context: $1) }
      )

    case "GetOIDCConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeGetOIDCConnectorInterceptors() ?? [],
        wrapping: { try await self.getOIDCConnector(request: $0, context: $1) }
      )

    case "GetOIDCConnectors":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3List>(),
        interceptors: self.interceptors?.makeGetOIDCConnectorsInterceptors() ?? [],
        wrapping: { try await self.getOIDCConnectors(request: $0, context: $1) }
      )

    case "CreateOIDCConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateOIDCConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeCreateOIDCConnectorInterceptors() ?? [],
        wrapping: { try await self.createOIDCConnector(request: $0, context: $1) }
      )

    case "UpdateOIDCConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateOIDCConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeUpdateOIDCConnectorInterceptors() ?? [],
        wrapping: { try await self.updateOIDCConnector(request: $0, context: $1) }
      )

    case "UpsertOIDCConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_OIDCConnectorV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertOIDCConnectorInterceptors() ?? [],
        wrapping: { try await self.upsertOIDCConnector(request: $0, context: $1) }
      )

    case "UpsertOIDCConnectorV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertOIDCConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCConnectorV3>(),
        interceptors: self.interceptors?.makeUpsertOIDCConnectorV2Interceptors() ?? [],
        wrapping: { try await self.upsertOIDCConnectorV2(request: $0, context: $1) }
      )

    case "DeleteOIDCConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteOIDCConnectorInterceptors() ?? [],
        wrapping: { try await self.deleteOIDCConnector(request: $0, context: $1) }
      )

    case "CreateOIDCAuthRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_OIDCAuthRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCAuthRequest>(),
        interceptors: self.interceptors?.makeCreateOIDCAuthRequestInterceptors() ?? [],
        wrapping: { try await self.createOIDCAuthRequest(request: $0, context: $1) }
      )

    case "GetOIDCAuthRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetOIDCAuthRequestRequest>(),
        responseSerializer: ProtobufSerializer<Types_OIDCAuthRequest>(),
        interceptors: self.interceptors?.makeGetOIDCAuthRequestInterceptors() ?? [],
        wrapping: { try await self.getOIDCAuthRequest(request: $0, context: $1) }
      )

    case "GetSAMLConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeGetSAMLConnectorInterceptors() ?? [],
        wrapping: { try await self.getSAMLConnector(request: $0, context: $1) }
      )

    case "GetSAMLConnectors":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2List>(),
        interceptors: self.interceptors?.makeGetSAMLConnectorsInterceptors() ?? [],
        wrapping: { try await self.getSAMLConnectors(request: $0, context: $1) }
      )

    case "CreateSAMLConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateSAMLConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeCreateSAMLConnectorInterceptors() ?? [],
        wrapping: { try await self.createSAMLConnector(request: $0, context: $1) }
      )

    case "UpdateSAMLConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateSAMLConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeUpdateSAMLConnectorInterceptors() ?? [],
        wrapping: { try await self.updateSAMLConnector(request: $0, context: $1) }
      )

    case "UpsertSAMLConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLConnectorV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertSAMLConnectorInterceptors() ?? [],
        wrapping: { try await self.upsertSAMLConnector(request: $0, context: $1) }
      )

    case "UpsertSAMLConnectorV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertSAMLConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLConnectorV2>(),
        interceptors: self.interceptors?.makeUpsertSAMLConnectorV2Interceptors() ?? [],
        wrapping: { try await self.upsertSAMLConnectorV2(request: $0, context: $1) }
      )

    case "DeleteSAMLConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSAMLConnectorInterceptors() ?? [],
        wrapping: { try await self.deleteSAMLConnector(request: $0, context: $1) }
      )

    case "CreateSAMLAuthRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLAuthRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLAuthRequest>(),
        interceptors: self.interceptors?.makeCreateSAMLAuthRequestInterceptors() ?? [],
        wrapping: { try await self.createSAMLAuthRequest(request: $0, context: $1) }
      )

    case "GetSAMLAuthRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSAMLAuthRequestRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLAuthRequest>(),
        interceptors: self.interceptors?.makeGetSAMLAuthRequestInterceptors() ?? [],
        wrapping: { try await self.getSAMLAuthRequest(request: $0, context: $1) }
      )

    case "GetGithubConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeGetGithubConnectorInterceptors() ?? [],
        wrapping: { try await self.getGithubConnector(request: $0, context: $1) }
      )

    case "GetGithubConnectors":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourcesWithSecretsRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3List>(),
        interceptors: self.interceptors?.makeGetGithubConnectorsInterceptors() ?? [],
        wrapping: { try await self.getGithubConnectors(request: $0, context: $1) }
      )

    case "CreateGithubConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateGithubConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeCreateGithubConnectorInterceptors() ?? [],
        wrapping: { try await self.createGithubConnector(request: $0, context: $1) }
      )

    case "UpdateGithubConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateGithubConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeUpdateGithubConnectorInterceptors() ?? [],
        wrapping: { try await self.updateGithubConnector(request: $0, context: $1) }
      )

    case "UpsertGithubConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GithubConnectorV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertGithubConnectorInterceptors() ?? [],
        wrapping: { try await self.upsertGithubConnector(request: $0, context: $1) }
      )

    case "UpsertGithubConnectorV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertGithubConnectorRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubConnectorV3>(),
        interceptors: self.interceptors?.makeUpsertGithubConnectorV2Interceptors() ?? [],
        wrapping: { try await self.upsertGithubConnectorV2(request: $0, context: $1) }
      )

    case "DeleteGithubConnector":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteGithubConnectorInterceptors() ?? [],
        wrapping: { try await self.deleteGithubConnector(request: $0, context: $1) }
      )

    case "CreateGithubAuthRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_GithubAuthRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubAuthRequest>(),
        interceptors: self.interceptors?.makeCreateGithubAuthRequestInterceptors() ?? [],
        wrapping: { try await self.createGithubAuthRequest(request: $0, context: $1) }
      )

    case "GetGithubAuthRequest":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetGithubAuthRequestRequest>(),
        responseSerializer: ProtobufSerializer<Types_GithubAuthRequest>(),
        interceptors: self.interceptors?.makeGetGithubAuthRequestInterceptors() ?? [],
        wrapping: { try await self.getGithubAuthRequest(request: $0, context: $1) }
      )

    case "GetSSODiagnosticInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSSODiagnosticInfoRequest>(),
        responseSerializer: ProtobufSerializer<Types_SSODiagnosticInfo>(),
        interceptors: self.interceptors?.makeGetSSODiagnosticInfoInterceptors() ?? [],
        wrapping: { try await self.getSSODiagnosticInfo(request: $0, context: $1) }
      )

    case "GetServerInfos":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ServerInfoV1>(),
        interceptors: self.interceptors?.makeGetServerInfosInterceptors() ?? [],
        wrapping: { try await self.getServerInfos(request: $0, responseStream: $1, context: $2) }
      )

    case "GetServerInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ServerInfoV1>(),
        interceptors: self.interceptors?.makeGetServerInfoInterceptors() ?? [],
        wrapping: { try await self.getServerInfo(request: $0, context: $1) }
      )

    case "UpsertServerInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ServerInfoV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertServerInfoInterceptors() ?? [],
        wrapping: { try await self.upsertServerInfo(request: $0, context: $1) }
      )

    case "DeleteServerInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteServerInfoInterceptors() ?? [],
        wrapping: { try await self.deleteServerInfo(request: $0, context: $1) }
      )

    case "DeleteAllServerInfos":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllServerInfosInterceptors() ?? [],
        wrapping: { try await self.deleteAllServerInfos(request: $0, context: $1) }
      )

    case "GetTrustedCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_TrustedClusterV2>(),
        interceptors: self.interceptors?.makeGetTrustedClusterInterceptors() ?? [],
        wrapping: { try await self.getTrustedCluster(request: $0, context: $1) }
      )

    case "GetTrustedClusters":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_TrustedClusterV2List>(),
        interceptors: self.interceptors?.makeGetTrustedClustersInterceptors() ?? [],
        wrapping: { try await self.getTrustedClusters(request: $0, context: $1) }
      )

    case "UpsertTrustedCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_TrustedClusterV2>(),
        responseSerializer: ProtobufSerializer<Types_TrustedClusterV2>(),
        interceptors: self.interceptors?.makeUpsertTrustedClusterInterceptors() ?? [],
        wrapping: { try await self.upsertTrustedCluster(request: $0, context: $1) }
      )

    case "DeleteTrustedCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteTrustedClusterInterceptors() ?? [],
        wrapping: { try await self.deleteTrustedCluster(request: $0, context: $1) }
      )

    case "GetToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ProvisionTokenV2>(),
        interceptors: self.interceptors?.makeGetTokenInterceptors() ?? [],
        wrapping: { try await self.getToken(request: $0, context: $1) }
      )

    case "GetTokens":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ProvisionTokenV2List>(),
        interceptors: self.interceptors?.makeGetTokensInterceptors() ?? [],
        wrapping: { try await self.getTokens(request: $0, context: $1) }
      )

    case "CreateTokenV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateTokenV2Request>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateTokenV2Interceptors() ?? [],
        wrapping: { try await self.createTokenV2(request: $0, context: $1) }
      )

    case "UpsertTokenV2":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpsertTokenV2Request>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertTokenV2Interceptors() ?? [],
        wrapping: { try await self.upsertTokenV2(request: $0, context: $1) }
      )

    case "DeleteToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteTokenInterceptors() ?? [],
        wrapping: { try await self.deleteToken(request: $0, context: $1) }
      )

    case "GetClusterAuditConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ClusterAuditConfigV2>(),
        interceptors: self.interceptors?.makeGetClusterAuditConfigInterceptors() ?? [],
        wrapping: { try await self.getClusterAuditConfig(request: $0, context: $1) }
      )

    case "GetClusterNetworkingConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ClusterNetworkingConfigV2>(),
        interceptors: self.interceptors?.makeGetClusterNetworkingConfigInterceptors() ?? [],
        wrapping: { try await self.getClusterNetworkingConfig(request: $0, context: $1) }
      )

    case "SetClusterNetworkingConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ClusterNetworkingConfigV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetClusterNetworkingConfigInterceptors() ?? [],
        wrapping: { try await self.setClusterNetworkingConfig(request: $0, context: $1) }
      )

    case "ResetClusterNetworkingConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeResetClusterNetworkingConfigInterceptors() ?? [],
        wrapping: { try await self.resetClusterNetworkingConfig(request: $0, context: $1) }
      )

    case "GetSessionRecordingConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_SessionRecordingConfigV2>(),
        interceptors: self.interceptors?.makeGetSessionRecordingConfigInterceptors() ?? [],
        wrapping: { try await self.getSessionRecordingConfig(request: $0, context: $1) }
      )

    case "SetSessionRecordingConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SessionRecordingConfigV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetSessionRecordingConfigInterceptors() ?? [],
        wrapping: { try await self.setSessionRecordingConfig(request: $0, context: $1) }
      )

    case "ResetSessionRecordingConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeResetSessionRecordingConfigInterceptors() ?? [],
        wrapping: { try await self.resetSessionRecordingConfig(request: $0, context: $1) }
      )

    case "GetAuthPreference":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_AuthPreferenceV2>(),
        interceptors: self.interceptors?.makeGetAuthPreferenceInterceptors() ?? [],
        wrapping: { try await self.getAuthPreference(request: $0, context: $1) }
      )

    case "SetAuthPreference":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AuthPreferenceV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetAuthPreferenceInterceptors() ?? [],
        wrapping: { try await self.setAuthPreference(request: $0, context: $1) }
      )

    case "ResetAuthPreference":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeResetAuthPreferenceInterceptors() ?? [],
        wrapping: { try await self.resetAuthPreference(request: $0, context: $1) }
      )

    case "GetUIConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_UIConfigV1>(),
        interceptors: self.interceptors?.makeGetUIConfigInterceptors() ?? [],
        wrapping: { try await self.getUIConfig(request: $0, context: $1) }
      )

    case "SetUIConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UIConfigV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetUIConfigInterceptors() ?? [],
        wrapping: { try await self.setUIConfig(request: $0, context: $1) }
      )

    case "DeleteUIConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUIConfigInterceptors() ?? [],
        wrapping: { try await self.deleteUIConfig(request: $0, context: $1) }
      )

    case "GetEvents":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetEventsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Events>(),
        interceptors: self.interceptors?.makeGetEventsInterceptors() ?? [],
        wrapping: { try await self.getEvents(request: $0, context: $1) }
      )

    case "GetSessionEvents":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSessionEventsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Events>(),
        interceptors: self.interceptors?.makeGetSessionEventsInterceptors() ?? [],
        wrapping: { try await self.getSessionEvents(request: $0, context: $1) }
      )

    case "GetLock":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetLockRequest>(),
        responseSerializer: ProtobufSerializer<Types_LockV2>(),
        interceptors: self.interceptors?.makeGetLockInterceptors() ?? [],
        wrapping: { try await self.getLock(request: $0, context: $1) }
      )

    case "GetLocks":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetLocksRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetLocksResponse>(),
        interceptors: self.interceptors?.makeGetLocksInterceptors() ?? [],
        wrapping: { try await self.getLocks(request: $0, context: $1) }
      )

    case "UpsertLock":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_LockV2>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertLockInterceptors() ?? [],
        wrapping: { try await self.upsertLock(request: $0, context: $1) }
      )

    case "DeleteLock":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteLockRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteLockInterceptors() ?? [],
        wrapping: { try await self.deleteLock(request: $0, context: $1) }
      )

    case "ReplaceRemoteLocks":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ReplaceRemoteLocksRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeReplaceRemoteLocksInterceptors() ?? [],
        wrapping: { try await self.replaceRemoteLocks(request: $0, context: $1) }
      )

    case "StreamSessionEvents":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_StreamSessionEventsRequest>(),
        responseSerializer: ProtobufSerializer<Events_OneOf>(),
        interceptors: self.interceptors?.makeStreamSessionEventsInterceptors() ?? [],
        wrapping: { try await self.streamSessionEvents(request: $0, responseStream: $1, context: $2) }
      )

    case "GetNetworkRestrictions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_NetworkRestrictionsV4>(),
        interceptors: self.interceptors?.makeGetNetworkRestrictionsInterceptors() ?? [],
        wrapping: { try await self.getNetworkRestrictions(request: $0, context: $1) }
      )

    case "SetNetworkRestrictions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_NetworkRestrictionsV4>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetNetworkRestrictionsInterceptors() ?? [],
        wrapping: { try await self.setNetworkRestrictions(request: $0, context: $1) }
      )

    case "DeleteNetworkRestrictions":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteNetworkRestrictionsInterceptors() ?? [],
        wrapping: { try await self.deleteNetworkRestrictions(request: $0, context: $1) }
      )

    case "GetApps":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_AppV3List>(),
        interceptors: self.interceptors?.makeGetAppsInterceptors() ?? [],
        wrapping: { try await self.getApps(request: $0, context: $1) }
      )

    case "GetApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_AppV3>(),
        interceptors: self.interceptors?.makeGetAppInterceptors() ?? [],
        wrapping: { try await self.getApp(request: $0, context: $1) }
      )

    case "CreateApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AppV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateAppInterceptors() ?? [],
        wrapping: { try await self.createApp(request: $0, context: $1) }
      )

    case "UpdateApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_AppV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateAppInterceptors() ?? [],
        wrapping: { try await self.updateApp(request: $0, context: $1) }
      )

    case "DeleteApp":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAppInterceptors() ?? [],
        wrapping: { try await self.deleteApp(request: $0, context: $1) }
      )

    case "DeleteAllApps":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllAppsInterceptors() ?? [],
        wrapping: { try await self.deleteAllApps(request: $0, context: $1) }
      )

    case "GetDatabases":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_DatabaseV3List>(),
        interceptors: self.interceptors?.makeGetDatabasesInterceptors() ?? [],
        wrapping: { try await self.getDatabases(request: $0, context: $1) }
      )

    case "GetDatabase":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_DatabaseV3>(),
        interceptors: self.interceptors?.makeGetDatabaseInterceptors() ?? [],
        wrapping: { try await self.getDatabase(request: $0, context: $1) }
      )

    case "CreateDatabase":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DatabaseV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateDatabaseInterceptors() ?? [],
        wrapping: { try await self.createDatabase(request: $0, context: $1) }
      )

    case "UpdateDatabase":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_DatabaseV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateDatabaseInterceptors() ?? [],
        wrapping: { try await self.updateDatabase(request: $0, context: $1) }
      )

    case "DeleteDatabase":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteDatabaseInterceptors() ?? [],
        wrapping: { try await self.deleteDatabase(request: $0, context: $1) }
      )

    case "DeleteAllDatabases":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllDatabasesInterceptors() ?? [],
        wrapping: { try await self.deleteAllDatabases(request: $0, context: $1) }
      )

    case "GetKubernetesClusters":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_KubernetesClusterV3List>(),
        interceptors: self.interceptors?.makeGetKubernetesClustersInterceptors() ?? [],
        wrapping: { try await self.getKubernetesClusters(request: $0, context: $1) }
      )

    case "GetKubernetesCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_KubernetesClusterV3>(),
        interceptors: self.interceptors?.makeGetKubernetesClusterInterceptors() ?? [],
        wrapping: { try await self.getKubernetesCluster(request: $0, context: $1) }
      )

    case "CreateKubernetesCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_KubernetesClusterV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateKubernetesClusterInterceptors() ?? [],
        wrapping: { try await self.createKubernetesCluster(request: $0, context: $1) }
      )

    case "UpdateKubernetesCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_KubernetesClusterV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateKubernetesClusterInterceptors() ?? [],
        wrapping: { try await self.updateKubernetesCluster(request: $0, context: $1) }
      )

    case "DeleteKubernetesCluster":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteKubernetesClusterInterceptors() ?? [],
        wrapping: { try await self.deleteKubernetesCluster(request: $0, context: $1) }
      )

    case "DeleteAllKubernetesClusters":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllKubernetesClustersInterceptors() ?? [],
        wrapping: { try await self.deleteAllKubernetesClusters(request: $0, context: $1) }
      )

    case "GetWindowsDesktopServices":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetWindowsDesktopServicesResponse>(),
        interceptors: self.interceptors?.makeGetWindowsDesktopServicesInterceptors() ?? [],
        wrapping: { try await self.getWindowsDesktopServices(request: $0, context: $1) }
      )

    case "GetWindowsDesktopService":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetWindowsDesktopServiceRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetWindowsDesktopServiceResponse>(),
        interceptors: self.interceptors?.makeGetWindowsDesktopServiceInterceptors() ?? [],
        wrapping: { try await self.getWindowsDesktopService(request: $0, context: $1) }
      )

    case "UpsertWindowsDesktopService":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopServiceV3>(),
        responseSerializer: ProtobufSerializer<Types_KeepAlive>(),
        interceptors: self.interceptors?.makeUpsertWindowsDesktopServiceInterceptors() ?? [],
        wrapping: { try await self.upsertWindowsDesktopService(request: $0, context: $1) }
      )

    case "DeleteWindowsDesktopService":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteWindowsDesktopServiceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWindowsDesktopServiceInterceptors() ?? [],
        wrapping: { try await self.deleteWindowsDesktopService(request: $0, context: $1) }
      )

    case "DeleteAllWindowsDesktopServices":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWindowsDesktopServicesInterceptors() ?? [],
        wrapping: { try await self.deleteAllWindowsDesktopServices(request: $0, context: $1) }
      )

    case "GetWindowsDesktops":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopFilter>(),
        responseSerializer: ProtobufSerializer<Proto_GetWindowsDesktopsResponse>(),
        interceptors: self.interceptors?.makeGetWindowsDesktopsInterceptors() ?? [],
        wrapping: { try await self.getWindowsDesktops(request: $0, context: $1) }
      )

    case "CreateWindowsDesktop":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateWindowsDesktopInterceptors() ?? [],
        wrapping: { try await self.createWindowsDesktop(request: $0, context: $1) }
      )

    case "UpdateWindowsDesktop":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateWindowsDesktopInterceptors() ?? [],
        wrapping: { try await self.updateWindowsDesktop(request: $0, context: $1) }
      )

    case "UpsertWindowsDesktop":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_WindowsDesktopV3>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpsertWindowsDesktopInterceptors() ?? [],
        wrapping: { try await self.upsertWindowsDesktop(request: $0, context: $1) }
      )

    case "DeleteWindowsDesktop":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteWindowsDesktopRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteWindowsDesktopInterceptors() ?? [],
        wrapping: { try await self.deleteWindowsDesktop(request: $0, context: $1) }
      )

    case "DeleteAllWindowsDesktops":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllWindowsDesktopsInterceptors() ?? [],
        wrapping: { try await self.deleteAllWindowsDesktops(request: $0, context: $1) }
      )

    case "GenerateWindowsDesktopCert":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_WindowsDesktopCertRequest>(),
        responseSerializer: ProtobufSerializer<Proto_WindowsDesktopCertResponse>(),
        interceptors: self.interceptors?.makeGenerateWindowsDesktopCertInterceptors() ?? [],
        wrapping: { try await self.generateWindowsDesktopCert(request: $0, context: $1) }
      )

    case "GenerateCertAuthorityCRL":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CertAuthorityRequest>(),
        responseSerializer: ProtobufSerializer<Proto_CRL>(),
        interceptors: self.interceptors?.makeGenerateCertAuthorityCRLInterceptors() ?? [],
        wrapping: { try await self.generateCertAuthorityCRL(request: $0, context: $1) }
      )

    case "CreateConnectionDiagnostic":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ConnectionDiagnosticV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateConnectionDiagnosticInterceptors() ?? [],
        wrapping: { try await self.createConnectionDiagnostic(request: $0, context: $1) }
      )

    case "UpdateConnectionDiagnostic":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ConnectionDiagnosticV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateConnectionDiagnosticInterceptors() ?? [],
        wrapping: { try await self.updateConnectionDiagnostic(request: $0, context: $1) }
      )

    case "GetConnectionDiagnostic":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetConnectionDiagnosticRequest>(),
        responseSerializer: ProtobufSerializer<Types_ConnectionDiagnosticV1>(),
        interceptors: self.interceptors?.makeGetConnectionDiagnosticInterceptors() ?? [],
        wrapping: { try await self.getConnectionDiagnostic(request: $0, context: $1) }
      )

    case "AppendDiagnosticTrace":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_AppendDiagnosticTraceRequest>(),
        responseSerializer: ProtobufSerializer<Types_ConnectionDiagnosticV1>(),
        interceptors: self.interceptors?.makeAppendDiagnosticTraceInterceptors() ?? [],
        wrapping: { try await self.appendDiagnosticTrace(request: $0, context: $1) }
      )

    case "ChangeUserAuthentication":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ChangeUserAuthenticationRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ChangeUserAuthenticationResponse>(),
        interceptors: self.interceptors?.makeChangeUserAuthenticationInterceptors() ?? [],
        wrapping: { try await self.changeUserAuthentication(request: $0, context: $1) }
      )

    case "StartAccountRecovery":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_StartAccountRecoveryRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeStartAccountRecoveryInterceptors() ?? [],
        wrapping: { try await self.startAccountRecovery(request: $0, context: $1) }
      )

    case "VerifyAccountRecovery":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_VerifyAccountRecoveryRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeVerifyAccountRecoveryInterceptors() ?? [],
        wrapping: { try await self.verifyAccountRecovery(request: $0, context: $1) }
      )

    case "CompleteAccountRecovery":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CompleteAccountRecoveryRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCompleteAccountRecoveryInterceptors() ?? [],
        wrapping: { try await self.completeAccountRecovery(request: $0, context: $1) }
      )

    case "CreateAccountRecoveryCodes":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreateAccountRecoveryCodesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_RecoveryCodes>(),
        interceptors: self.interceptors?.makeCreateAccountRecoveryCodesInterceptors() ?? [],
        wrapping: { try await self.createAccountRecoveryCodes(request: $0, context: $1) }
      )

    case "GetAccountRecoveryToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAccountRecoveryTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeGetAccountRecoveryTokenInterceptors() ?? [],
        wrapping: { try await self.getAccountRecoveryToken(request: $0, context: $1) }
      )

    case "GetAccountRecoveryCodes":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetAccountRecoveryCodesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_RecoveryCodes>(),
        interceptors: self.interceptors?.makeGetAccountRecoveryCodesInterceptors() ?? [],
        wrapping: { try await self.getAccountRecoveryCodes(request: $0, context: $1) }
      )

    case "CreatePrivilegeToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_CreatePrivilegeTokenRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserTokenV3>(),
        interceptors: self.interceptors?.makeCreatePrivilegeTokenInterceptors() ?? [],
        wrapping: { try await self.createPrivilegeToken(request: $0, context: $1) }
      )

    case "GetInstaller":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<Types_InstallerV1>(),
        interceptors: self.interceptors?.makeGetInstallerInterceptors() ?? [],
        wrapping: { try await self.getInstaller(request: $0, context: $1) }
      )

    case "GetInstallers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_InstallerV1List>(),
        interceptors: self.interceptors?.makeGetInstallersInterceptors() ?? [],
        wrapping: { try await self.getInstallers(request: $0, context: $1) }
      )

    case "SetInstaller":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_InstallerV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSetInstallerInterceptors() ?? [],
        wrapping: { try await self.setInstaller(request: $0, context: $1) }
      )

    case "DeleteInstaller":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ResourceRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteInstallerInterceptors() ?? [],
        wrapping: { try await self.deleteInstaller(request: $0, context: $1) }
      )

    case "DeleteAllInstallers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllInstallersInterceptors() ?? [],
        wrapping: { try await self.deleteAllInstallers(request: $0, context: $1) }
      )

    case "ListResources":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListResourcesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListResourcesResponse>(),
        interceptors: self.interceptors?.makeListResourcesInterceptors() ?? [],
        wrapping: { try await self.listResources(request: $0, context: $1) }
      )

    case "ListUnifiedResources":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListUnifiedResourcesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListUnifiedResourcesResponse>(),
        interceptors: self.interceptors?.makeListUnifiedResourcesInterceptors() ?? [],
        wrapping: { try await self.listUnifiedResources(request: $0, context: $1) }
      )

    case "GetSSHTargets":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSSHTargetsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetSSHTargetsResponse>(),
        interceptors: self.interceptors?.makeGetSSHTargetsInterceptors() ?? [],
        wrapping: { try await self.getSSHTargets(request: $0, context: $1) }
      )

    case "GetDomainName":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetDomainNameResponse>(),
        interceptors: self.interceptors?.makeGetDomainNameInterceptors() ?? [],
        wrapping: { try await self.getDomainName(request: $0, context: $1) }
      )

    case "GetClusterCACert":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_GetClusterCACertResponse>(),
        interceptors: self.interceptors?.makeGetClusterCACertInterceptors() ?? [],
        wrapping: { try await self.getClusterCACert(request: $0, context: $1) }
      )

    case "SubmitUsageEvent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_SubmitUsageEventRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSubmitUsageEventInterceptors() ?? [],
        wrapping: { try await self.submitUsageEvent(request: $0, context: $1) }
      )

    case "GetLicense":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetLicenseRequest>(),
        responseSerializer: ProtobufSerializer<Proto_GetLicenseResponse>(),
        interceptors: self.interceptors?.makeGetLicenseInterceptors() ?? [],
        wrapping: { try await self.getLicense(request: $0, context: $1) }
      )

    case "ListReleases":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListReleasesRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListReleasesResponse>(),
        interceptors: self.interceptors?.makeListReleasesInterceptors() ?? [],
        wrapping: { try await self.listReleases(request: $0, context: $1) }
      )

    case "ListSAMLIdPServiceProviders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListSAMLIdPServiceProvidersRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListSAMLIdPServiceProvidersResponse>(),
        interceptors: self.interceptors?.makeListSAMLIdPServiceProvidersInterceptors() ?? [],
        wrapping: { try await self.listSAMLIdPServiceProviders(request: $0, context: $1) }
      )

    case "GetSAMLIdPServiceProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetSAMLIdPServiceProviderRequest>(),
        responseSerializer: ProtobufSerializer<Types_SAMLIdPServiceProviderV1>(),
        interceptors: self.interceptors?.makeGetSAMLIdPServiceProviderInterceptors() ?? [],
        wrapping: { try await self.getSAMLIdPServiceProvider(request: $0, context: $1) }
      )

    case "CreateSAMLIdPServiceProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLIdPServiceProviderV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateSAMLIdPServiceProviderInterceptors() ?? [],
        wrapping: { try await self.createSAMLIdPServiceProvider(request: $0, context: $1) }
      )

    case "UpdateSAMLIdPServiceProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_SAMLIdPServiceProviderV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateSAMLIdPServiceProviderInterceptors() ?? [],
        wrapping: { try await self.updateSAMLIdPServiceProvider(request: $0, context: $1) }
      )

    case "DeleteSAMLIdPServiceProvider":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteSAMLIdPServiceProviderRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteSAMLIdPServiceProviderInterceptors() ?? [],
        wrapping: { try await self.deleteSAMLIdPServiceProvider(request: $0, context: $1) }
      )

    case "DeleteAllSAMLIdPServiceProviders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllSAMLIdPServiceProvidersInterceptors() ?? [],
        wrapping: { try await self.deleteAllSAMLIdPServiceProviders(request: $0, context: $1) }
      )

    case "ListUserGroups":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ListUserGroupsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ListUserGroupsResponse>(),
        interceptors: self.interceptors?.makeListUserGroupsInterceptors() ?? [],
        wrapping: { try await self.listUserGroups(request: $0, context: $1) }
      )

    case "GetUserGroup":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetUserGroupRequest>(),
        responseSerializer: ProtobufSerializer<Types_UserGroupV1>(),
        interceptors: self.interceptors?.makeGetUserGroupInterceptors() ?? [],
        wrapping: { try await self.getUserGroup(request: $0, context: $1) }
      )

    case "CreateUserGroup":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserGroupV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeCreateUserGroupInterceptors() ?? [],
        wrapping: { try await self.createUserGroup(request: $0, context: $1) }
      )

    case "UpdateUserGroup":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_UserGroupV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateUserGroupInterceptors() ?? [],
        wrapping: { try await self.updateUserGroup(request: $0, context: $1) }
      )

    case "DeleteUserGroup":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_DeleteUserGroupRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteUserGroupInterceptors() ?? [],
        wrapping: { try await self.deleteUserGroup(request: $0, context: $1) }
      )

    case "DeleteAllUserGroups":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteAllUserGroupsInterceptors() ?? [],
        wrapping: { try await self.deleteAllUserGroups(request: $0, context: $1) }
      )

    case "GetHeadlessAuthentication":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_GetHeadlessAuthenticationRequest>(),
        responseSerializer: ProtobufSerializer<Types_HeadlessAuthentication>(),
        interceptors: self.interceptors?.makeGetHeadlessAuthenticationInterceptors() ?? [],
        wrapping: { try await self.getHeadlessAuthentication(request: $0, context: $1) }
      )

    case "WatchPendingHeadlessAuthentications":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Proto_Event>(),
        interceptors: self.interceptors?.makeWatchPendingHeadlessAuthenticationsInterceptors() ?? [],
        wrapping: { try await self.watchPendingHeadlessAuthentications(request: $0, responseStream: $1, context: $2) }
      )

    case "UpdateHeadlessAuthenticationState":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_UpdateHeadlessAuthenticationStateRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateHeadlessAuthenticationStateInterceptors() ?? [],
        wrapping: { try await self.updateHeadlessAuthenticationState(request: $0, context: $1) }
      )

    case "ExportUpgradeWindows":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_ExportUpgradeWindowsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_ExportUpgradeWindowsResponse>(),
        interceptors: self.interceptors?.makeExportUpgradeWindowsInterceptors() ?? [],
        wrapping: { try await self.exportUpgradeWindows(request: $0, context: $1) }
      )

    case "GetClusterMaintenanceConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Types_ClusterMaintenanceConfigV1>(),
        interceptors: self.interceptors?.makeGetClusterMaintenanceConfigInterceptors() ?? [],
        wrapping: { try await self.getClusterMaintenanceConfig(request: $0, context: $1) }
      )

    case "UpdateClusterMaintenanceConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Types_ClusterMaintenanceConfigV1>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdateClusterMaintenanceConfigInterceptors() ?? [],
        wrapping: { try await self.updateClusterMaintenanceConfig(request: $0, context: $1) }
      )

    case "DeleteClusterMaintenanceConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeDeleteClusterMaintenanceConfigInterceptors() ?? [],
        wrapping: { try await self.deleteClusterMaintenanceConfig(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

internal protocol Proto_AuthServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'inventoryControlStream'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInventoryControlStreamInterceptors() -> [ServerInterceptor<Proto_UpstreamInventoryOneOf, Proto_DownstreamInventoryOneOf>]

  /// - Returns: Interceptors to use when handling 'getInventoryStatus'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInventoryStatusInterceptors() -> [ServerInterceptor<Proto_InventoryStatusRequest, Proto_InventoryStatusSummary>]

  /// - Returns: Interceptors to use when handling 'getInventoryConnectedServiceCounts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInventoryConnectedServiceCountsInterceptors() -> [ServerInterceptor<Proto_InventoryConnectedServiceCountsRequest, Proto_InventoryConnectedServiceCounts>]

  /// - Returns: Interceptors to use when handling 'pingInventory'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePingInventoryInterceptors() -> [ServerInterceptor<Proto_InventoryPingRequest, Proto_InventoryPingResponse>]

  /// - Returns: Interceptors to use when handling 'getInstances'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInstancesInterceptors() -> [ServerInterceptor<Types_InstanceFilter, Types_InstanceV1>]

  /// - Returns: Interceptors to use when handling 'getClusterAlerts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetClusterAlertsInterceptors() -> [ServerInterceptor<Types_GetClusterAlertsRequest, Proto_GetClusterAlertsResponse>]

  /// - Returns: Interceptors to use when handling 'upsertClusterAlert'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertClusterAlertInterceptors() -> [ServerInterceptor<Proto_UpsertClusterAlertRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createAlertAck'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAlertAckInterceptors() -> [ServerInterceptor<Types_AlertAcknowledgement, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getAlertAcks'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAlertAcksInterceptors() -> [ServerInterceptor<Proto_GetAlertAcksRequest, Proto_GetAlertAcksResponse>]

  /// - Returns: Interceptors to use when handling 'clearAlertAcks'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeClearAlertAcksInterceptors() -> [ServerInterceptor<Proto_ClearAlertAcksRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'maintainSessionPresence'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMaintainSessionPresenceInterceptors() -> [ServerInterceptor<Proto_PresenceMFAChallengeSend, Proto_MFAAuthenticateChallenge>]

  /// - Returns: Interceptors to use when handling 'createSessionTracker'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSessionTrackerInterceptors() -> [ServerInterceptor<Proto_CreateSessionTrackerRequest, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when handling 'getSessionTracker'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSessionTrackerInterceptors() -> [ServerInterceptor<Proto_GetSessionTrackerRequest, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when handling 'getActiveSessionTrackers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetActiveSessionTrackersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when handling 'getActiveSessionTrackersWithFilter'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetActiveSessionTrackersWithFilterInterceptors() -> [ServerInterceptor<Types_SessionTrackerFilter, Types_SessionTrackerV1>]

  /// - Returns: Interceptors to use when handling 'removeSessionTracker'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRemoveSessionTrackerInterceptors() -> [ServerInterceptor<Proto_RemoveSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateSessionTracker'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateSessionTrackerInterceptors() -> [ServerInterceptor<Proto_UpdateSessionTrackerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'sendKeepAlives'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSendKeepAlivesInterceptors() -> [ServerInterceptor<Types_KeepAlive, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'watchEvents'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWatchEventsInterceptors() -> [ServerInterceptor<Proto_Watch, Proto_Event>]

  /// - Returns: Interceptors to use when handling 'getNode'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetNodeInterceptors() -> [ServerInterceptor<Types_ResourceInNamespaceRequest, Types_ServerV2>]

  /// - Returns: Interceptors to use when handling 'upsertNode'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertNodeInterceptors() -> [ServerInterceptor<Types_ServerV2, Types_KeepAlive>]

  /// - Returns: Interceptors to use when handling 'deleteNode'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteNodeInterceptors() -> [ServerInterceptor<Types_ResourceInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllNodes'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllNodesInterceptors() -> [ServerInterceptor<Types_ResourcesInNamespaceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'generateUserCerts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateUserCertsInterceptors() -> [ServerInterceptor<Proto_UserCertsRequest, Proto_Certs>]

  /// - Returns: Interceptors to use when handling 'generateHostCerts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateHostCertsInterceptors() -> [ServerInterceptor<Proto_HostCertsRequest, Proto_Certs>]

  /// - Returns: Interceptors to use when handling 'generateUserSingleUseCerts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateUserSingleUseCertsInterceptors() -> [ServerInterceptor<Proto_UserSingleUseCertsRequest, Proto_UserSingleUseCertsResponse>]

  /// - Returns: Interceptors to use when handling 'generateOpenSSHCert'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateOpenSSHCertInterceptors() -> [ServerInterceptor<Proto_OpenSSHCertRequest, Proto_OpenSSHCert>]

  /// - Returns: Interceptors to use when handling 'isMFARequired'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeIsMFARequiredInterceptors() -> [ServerInterceptor<Proto_IsMFARequiredRequest, Proto_IsMFARequiredResponse>]

  /// - Returns: Interceptors to use when handling 'getAccessRequestsV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccessRequestsV2Interceptors() -> [ServerInterceptor<Types_AccessRequestFilter, Types_AccessRequestV3>]

  /// - Returns: Interceptors to use when handling 'createAccessRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAccessRequestInterceptors() -> [ServerInterceptor<Types_AccessRequestV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createAccessRequestV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAccessRequestV2Interceptors() -> [ServerInterceptor<Types_AccessRequestV3, Types_AccessRequestV3>]

  /// - Returns: Interceptors to use when handling 'deleteAccessRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAccessRequestInterceptors() -> [ServerInterceptor<Proto_RequestID, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'setAccessRequestState'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetAccessRequestStateInterceptors() -> [ServerInterceptor<Proto_RequestStateSetter, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'submitAccessReview'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSubmitAccessReviewInterceptors() -> [ServerInterceptor<Types_AccessReviewSubmission, Types_AccessRequestV3>]

  /// - Returns: Interceptors to use when handling 'getAccessCapabilities'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccessCapabilitiesInterceptors() -> [ServerInterceptor<Types_AccessCapabilitiesRequest, Types_AccessCapabilities>]

  /// - Returns: Interceptors to use when handling 'getAccessRequestAllowedPromotions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccessRequestAllowedPromotionsInterceptors() -> [ServerInterceptor<Proto_AccessRequestAllowedPromotionRequest, Proto_AccessRequestAllowedPromotionResponse>]

  /// - Returns: Interceptors to use when handling 'getPluginData'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetPluginDataInterceptors() -> [ServerInterceptor<Types_PluginDataFilter, Proto_PluginDataSeq>]

  /// - Returns: Interceptors to use when handling 'updatePluginData'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdatePluginDataInterceptors() -> [ServerInterceptor<Types_PluginDataUpdateParams, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'ping'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePingInterceptors() -> [ServerInterceptor<Proto_PingRequest, Proto_PingResponse>]

  /// - Returns: Interceptors to use when handling 'getResetPasswordToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetResetPasswordTokenInterceptors() -> [ServerInterceptor<Proto_GetResetPasswordTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when handling 'createResetPasswordToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateResetPasswordTokenInterceptors() -> [ServerInterceptor<Proto_CreateResetPasswordTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when handling 'createBot'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateBotInterceptors() -> [ServerInterceptor<Proto_CreateBotRequest, Proto_CreateBotResponse>]

  /// - Returns: Interceptors to use when handling 'deleteBot'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteBotInterceptors() -> [ServerInterceptor<Proto_DeleteBotRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getBotUsers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetBotUsersInterceptors() -> [ServerInterceptor<Proto_GetBotUsersRequest, Types_UserV2>]

  /// - Returns: Interceptors to use when handling 'getUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetUserInterceptors() -> [ServerInterceptor<Proto_GetUserRequest, Types_UserV2>]

  /// - Returns: Interceptors to use when handling 'getCurrentUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetCurrentUserInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_UserV2>]

  /// - Returns: Interceptors to use when handling 'getCurrentUserRoles'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetCurrentUserRolesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_RoleV6>]

  /// - Returns: Interceptors to use when handling 'getUsers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetUsersInterceptors() -> [ServerInterceptor<Proto_GetUsersRequest, Types_UserV2>]

  /// - Returns: Interceptors to use when handling 'createUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateUserInterceptors() -> [ServerInterceptor<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateUserInterceptors() -> [ServerInterceptor<Types_UserV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUserInterceptors() -> [ServerInterceptor<Proto_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'changePassword'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeChangePasswordInterceptors() -> [ServerInterceptor<Proto_ChangePasswordRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'acquireSemaphore'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAcquireSemaphoreInterceptors() -> [ServerInterceptor<Types_AcquireSemaphoreRequest, Types_SemaphoreLease>]

  /// - Returns: Interceptors to use when handling 'keepAliveSemaphoreLease'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeKeepAliveSemaphoreLeaseInterceptors() -> [ServerInterceptor<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'cancelSemaphoreLease'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelSemaphoreLeaseInterceptors() -> [ServerInterceptor<Types_SemaphoreLease, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getSemaphores'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSemaphoresInterceptors() -> [ServerInterceptor<Types_SemaphoreFilter, Proto_Semaphores>]

  /// - Returns: Interceptors to use when handling 'deleteSemaphore'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteSemaphoreInterceptors() -> [ServerInterceptor<Types_SemaphoreFilter, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'emitAuditEvent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEmitAuditEventInterceptors() -> [ServerInterceptor<Events_OneOf, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createAuditStream'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAuditStreamInterceptors() -> [ServerInterceptor<Proto_AuditStreamRequest, Events_StreamStatus>]

  /// - Returns: Interceptors to use when handling 'upsertApplicationServer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertApplicationServerInterceptors() -> [ServerInterceptor<Proto_UpsertApplicationServerRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when handling 'deleteApplicationServer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteApplicationServerInterceptors() -> [ServerInterceptor<Proto_DeleteApplicationServerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllApplicationServers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllApplicationServersInterceptors() -> [ServerInterceptor<Proto_DeleteAllApplicationServersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'generateAppToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateAppTokenInterceptors() -> [ServerInterceptor<Proto_GenerateAppTokenRequest, Proto_GenerateAppTokenResponse>]

  /// - Returns: Interceptors to use when handling 'getAppSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAppSessionInterceptors() -> [ServerInterceptor<Proto_GetAppSessionRequest, Proto_GetAppSessionResponse>]

  /// - Returns: Interceptors to use when handling 'listAppSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListAppSessionsInterceptors() -> [ServerInterceptor<Proto_ListAppSessionsRequest, Proto_ListAppSessionsResponse>]

  /// - Returns: Interceptors to use when handling 'createAppSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAppSessionInterceptors() -> [ServerInterceptor<Proto_CreateAppSessionRequest, Proto_CreateAppSessionResponse>]

  /// - Returns: Interceptors to use when handling 'deleteAppSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAppSessionInterceptors() -> [ServerInterceptor<Proto_DeleteAppSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllAppSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllAppSessionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteUserAppSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUserAppSessionsInterceptors() -> [ServerInterceptor<Proto_DeleteUserAppSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createSnowflakeSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSnowflakeSessionInterceptors() -> [ServerInterceptor<Proto_CreateSnowflakeSessionRequest, Proto_CreateSnowflakeSessionResponse>]

  /// - Returns: Interceptors to use when handling 'getSnowflakeSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSnowflakeSessionInterceptors() -> [ServerInterceptor<Proto_GetSnowflakeSessionRequest, Proto_GetSnowflakeSessionResponse>]

  /// - Returns: Interceptors to use when handling 'getSnowflakeSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSnowflakeSessionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetSnowflakeSessionsResponse>]

  /// - Returns: Interceptors to use when handling 'deleteSnowflakeSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteSnowflakeSessionInterceptors() -> [ServerInterceptor<Proto_DeleteSnowflakeSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllSnowflakeSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllSnowflakeSessionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createSAMLIdPSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSAMLIdPSessionInterceptors() -> [ServerInterceptor<Proto_CreateSAMLIdPSessionRequest, Proto_CreateSAMLIdPSessionResponse>]

  /// - Returns: Interceptors to use when handling 'getSAMLIdPSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSAMLIdPSessionInterceptors() -> [ServerInterceptor<Proto_GetSAMLIdPSessionRequest, Proto_GetSAMLIdPSessionResponse>]

  /// - Returns: Interceptors to use when handling 'listSAMLIdPSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListSAMLIdPSessionsInterceptors() -> [ServerInterceptor<Proto_ListSAMLIdPSessionsRequest, Proto_ListSAMLIdPSessionsResponse>]

  /// - Returns: Interceptors to use when handling 'deleteSAMLIdPSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteSAMLIdPSessionInterceptors() -> [ServerInterceptor<Proto_DeleteSAMLIdPSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllSAMLIdPSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllSAMLIdPSessionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteUserSAMLIdPSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUserSAMLIdPSessionsInterceptors() -> [ServerInterceptor<Proto_DeleteUserSAMLIdPSessionsRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getWebSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWebSessionInterceptors() -> [ServerInterceptor<Types_GetWebSessionRequest, Proto_GetWebSessionResponse>]

  /// - Returns: Interceptors to use when handling 'getWebSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWebSessionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebSessionsResponse>]

  /// - Returns: Interceptors to use when handling 'deleteWebSession'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteWebSessionInterceptors() -> [ServerInterceptor<Types_DeleteWebSessionRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllWebSessions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllWebSessionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getWebToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWebTokenInterceptors() -> [ServerInterceptor<Types_GetWebTokenRequest, Proto_GetWebTokenResponse>]

  /// - Returns: Interceptors to use when handling 'getWebTokens'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWebTokensInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWebTokensResponse>]

  /// - Returns: Interceptors to use when handling 'deleteWebToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteWebTokenInterceptors() -> [ServerInterceptor<Types_DeleteWebTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllWebTokens'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllWebTokensInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateRemoteCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateRemoteClusterInterceptors() -> [ServerInterceptor<Types_RemoteClusterV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertKubernetesServer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertKubernetesServerInterceptors() -> [ServerInterceptor<Proto_UpsertKubernetesServerRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when handling 'deleteKubernetesServer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteKubernetesServerInterceptors() -> [ServerInterceptor<Proto_DeleteKubernetesServerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllKubernetesServers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllKubernetesServersInterceptors() -> [ServerInterceptor<Proto_DeleteAllKubernetesServersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertDatabaseServer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertDatabaseServerInterceptors() -> [ServerInterceptor<Proto_UpsertDatabaseServerRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when handling 'deleteDatabaseServer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteDatabaseServerInterceptors() -> [ServerInterceptor<Proto_DeleteDatabaseServerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllDatabaseServers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllDatabaseServersInterceptors() -> [ServerInterceptor<Proto_DeleteAllDatabaseServersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertDatabaseService'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertDatabaseServiceInterceptors() -> [ServerInterceptor<Proto_UpsertDatabaseServiceRequest, Types_KeepAlive>]

  /// - Returns: Interceptors to use when handling 'deleteDatabaseService'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteDatabaseServiceInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllDatabaseServices'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllDatabaseServicesInterceptors() -> [ServerInterceptor<Proto_DeleteAllDatabaseServicesRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'signDatabaseCSR'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSignDatabaseCSRInterceptors() -> [ServerInterceptor<Proto_DatabaseCSRRequest, Proto_DatabaseCSRResponse>]

  /// - Returns: Interceptors to use when handling 'generateDatabaseCert'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateDatabaseCertInterceptors() -> [ServerInterceptor<Proto_DatabaseCertRequest, Proto_DatabaseCertResponse>]

  /// - Returns: Interceptors to use when handling 'generateSnowflakeJWT'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateSnowflakeJWTInterceptors() -> [ServerInterceptor<Proto_SnowflakeJWTRequest, Proto_SnowflakeJWTResponse>]

  /// - Returns: Interceptors to use when handling 'getRole'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRoleInterceptors() -> [ServerInterceptor<Proto_GetRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when handling 'getRoles'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRolesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetRolesResponse>]

  /// - Returns: Interceptors to use when handling 'createRole'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateRoleInterceptors() -> [ServerInterceptor<Proto_CreateRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when handling 'updateRole'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateRoleInterceptors() -> [ServerInterceptor<Proto_UpdateRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when handling 'upsertRoleV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertRoleV2Interceptors() -> [ServerInterceptor<Proto_UpsertRoleRequest, Types_RoleV6>]

  /// - Returns: Interceptors to use when handling 'upsertRole'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertRoleInterceptors() -> [ServerInterceptor<Types_RoleV6, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteRole'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteRoleInterceptors() -> [ServerInterceptor<Proto_DeleteRoleRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'addMFADevice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddMFADeviceInterceptors() -> [ServerInterceptor<Proto_AddMFADeviceRequest, Proto_AddMFADeviceResponse>]

  /// - Returns: Interceptors to use when handling 'deleteMFADevice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteMFADeviceInterceptors() -> [ServerInterceptor<Proto_DeleteMFADeviceRequest, Proto_DeleteMFADeviceResponse>]

  /// - Returns: Interceptors to use when handling 'addMFADeviceSync'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddMFADeviceSyncInterceptors() -> [ServerInterceptor<Proto_AddMFADeviceSyncRequest, Proto_AddMFADeviceSyncResponse>]

  /// - Returns: Interceptors to use when handling 'deleteMFADeviceSync'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteMFADeviceSyncInterceptors() -> [ServerInterceptor<Proto_DeleteMFADeviceSyncRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getMFADevices'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetMFADevicesInterceptors() -> [ServerInterceptor<Proto_GetMFADevicesRequest, Proto_GetMFADevicesResponse>]

  /// - Returns: Interceptors to use when handling 'createAuthenticateChallenge'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAuthenticateChallengeInterceptors() -> [ServerInterceptor<Proto_CreateAuthenticateChallengeRequest, Proto_MFAAuthenticateChallenge>]

  /// - Returns: Interceptors to use when handling 'createRegisterChallenge'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateRegisterChallengeInterceptors() -> [ServerInterceptor<Proto_CreateRegisterChallengeRequest, Proto_MFARegisterChallenge>]

  /// - Returns: Interceptors to use when handling 'getOIDCConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetOIDCConnectorInterceptors() -> [ServerInterceptor<Types_ResourceWithSecretsRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when handling 'getOIDCConnectors'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetOIDCConnectorsInterceptors() -> [ServerInterceptor<Types_ResourcesWithSecretsRequest, Types_OIDCConnectorV3List>]

  /// - Returns: Interceptors to use when handling 'createOIDCConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateOIDCConnectorInterceptors() -> [ServerInterceptor<Proto_CreateOIDCConnectorRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when handling 'updateOIDCConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateOIDCConnectorInterceptors() -> [ServerInterceptor<Proto_UpdateOIDCConnectorRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when handling 'upsertOIDCConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertOIDCConnectorInterceptors() -> [ServerInterceptor<Types_OIDCConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertOIDCConnectorV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertOIDCConnectorV2Interceptors() -> [ServerInterceptor<Proto_UpsertOIDCConnectorRequest, Types_OIDCConnectorV3>]

  /// - Returns: Interceptors to use when handling 'deleteOIDCConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteOIDCConnectorInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createOIDCAuthRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateOIDCAuthRequestInterceptors() -> [ServerInterceptor<Types_OIDCAuthRequest, Types_OIDCAuthRequest>]

  /// - Returns: Interceptors to use when handling 'getOIDCAuthRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetOIDCAuthRequestInterceptors() -> [ServerInterceptor<Proto_GetOIDCAuthRequestRequest, Types_OIDCAuthRequest>]

  /// - Returns: Interceptors to use when handling 'getSAMLConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSAMLConnectorInterceptors() -> [ServerInterceptor<Types_ResourceWithSecretsRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when handling 'getSAMLConnectors'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSAMLConnectorsInterceptors() -> [ServerInterceptor<Types_ResourcesWithSecretsRequest, Types_SAMLConnectorV2List>]

  /// - Returns: Interceptors to use when handling 'createSAMLConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSAMLConnectorInterceptors() -> [ServerInterceptor<Proto_CreateSAMLConnectorRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when handling 'updateSAMLConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateSAMLConnectorInterceptors() -> [ServerInterceptor<Proto_UpdateSAMLConnectorRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when handling 'upsertSAMLConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertSAMLConnectorInterceptors() -> [ServerInterceptor<Types_SAMLConnectorV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertSAMLConnectorV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertSAMLConnectorV2Interceptors() -> [ServerInterceptor<Proto_UpsertSAMLConnectorRequest, Types_SAMLConnectorV2>]

  /// - Returns: Interceptors to use when handling 'deleteSAMLConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteSAMLConnectorInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createSAMLAuthRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSAMLAuthRequestInterceptors() -> [ServerInterceptor<Types_SAMLAuthRequest, Types_SAMLAuthRequest>]

  /// - Returns: Interceptors to use when handling 'getSAMLAuthRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSAMLAuthRequestInterceptors() -> [ServerInterceptor<Proto_GetSAMLAuthRequestRequest, Types_SAMLAuthRequest>]

  /// - Returns: Interceptors to use when handling 'getGithubConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetGithubConnectorInterceptors() -> [ServerInterceptor<Types_ResourceWithSecretsRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when handling 'getGithubConnectors'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetGithubConnectorsInterceptors() -> [ServerInterceptor<Types_ResourcesWithSecretsRequest, Types_GithubConnectorV3List>]

  /// - Returns: Interceptors to use when handling 'createGithubConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateGithubConnectorInterceptors() -> [ServerInterceptor<Proto_CreateGithubConnectorRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when handling 'updateGithubConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateGithubConnectorInterceptors() -> [ServerInterceptor<Proto_UpdateGithubConnectorRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when handling 'upsertGithubConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertGithubConnectorInterceptors() -> [ServerInterceptor<Types_GithubConnectorV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertGithubConnectorV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertGithubConnectorV2Interceptors() -> [ServerInterceptor<Proto_UpsertGithubConnectorRequest, Types_GithubConnectorV3>]

  /// - Returns: Interceptors to use when handling 'deleteGithubConnector'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteGithubConnectorInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createGithubAuthRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateGithubAuthRequestInterceptors() -> [ServerInterceptor<Types_GithubAuthRequest, Types_GithubAuthRequest>]

  /// - Returns: Interceptors to use when handling 'getGithubAuthRequest'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetGithubAuthRequestInterceptors() -> [ServerInterceptor<Proto_GetGithubAuthRequestRequest, Types_GithubAuthRequest>]

  /// - Returns: Interceptors to use when handling 'getSSODiagnosticInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSSODiagnosticInfoInterceptors() -> [ServerInterceptor<Proto_GetSSODiagnosticInfoRequest, Types_SSODiagnosticInfo>]

  /// - Returns: Interceptors to use when handling 'getServerInfos'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetServerInfosInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ServerInfoV1>]

  /// - Returns: Interceptors to use when handling 'getServerInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetServerInfoInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_ServerInfoV1>]

  /// - Returns: Interceptors to use when handling 'upsertServerInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertServerInfoInterceptors() -> [ServerInterceptor<Types_ServerInfoV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteServerInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteServerInfoInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllServerInfos'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllServerInfosInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getTrustedCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetTrustedClusterInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_TrustedClusterV2>]

  /// - Returns: Interceptors to use when handling 'getTrustedClusters'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetTrustedClustersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_TrustedClusterV2List>]

  /// - Returns: Interceptors to use when handling 'upsertTrustedCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertTrustedClusterInterceptors() -> [ServerInterceptor<Types_TrustedClusterV2, Types_TrustedClusterV2>]

  /// - Returns: Interceptors to use when handling 'deleteTrustedCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteTrustedClusterInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetTokenInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_ProvisionTokenV2>]

  /// - Returns: Interceptors to use when handling 'getTokens'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetTokensInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ProvisionTokenV2List>]

  /// - Returns: Interceptors to use when handling 'createTokenV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateTokenV2Interceptors() -> [ServerInterceptor<Proto_CreateTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertTokenV2'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertTokenV2Interceptors() -> [ServerInterceptor<Proto_UpsertTokenV2Request, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteTokenInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getClusterAuditConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetClusterAuditConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterAuditConfigV2>]

  /// - Returns: Interceptors to use when handling 'getClusterNetworkingConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetClusterNetworkingConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterNetworkingConfigV2>]

  /// - Returns: Interceptors to use when handling 'setClusterNetworkingConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetClusterNetworkingConfigInterceptors() -> [ServerInterceptor<Types_ClusterNetworkingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'resetClusterNetworkingConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeResetClusterNetworkingConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getSessionRecordingConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSessionRecordingConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_SessionRecordingConfigV2>]

  /// - Returns: Interceptors to use when handling 'setSessionRecordingConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetSessionRecordingConfigInterceptors() -> [ServerInterceptor<Types_SessionRecordingConfigV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'resetSessionRecordingConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeResetSessionRecordingConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getAuthPreference'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAuthPreferenceInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_AuthPreferenceV2>]

  /// - Returns: Interceptors to use when handling 'setAuthPreference'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetAuthPreferenceInterceptors() -> [ServerInterceptor<Types_AuthPreferenceV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'resetAuthPreference'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeResetAuthPreferenceInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getUIConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetUIConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_UIConfigV1>]

  /// - Returns: Interceptors to use when handling 'setUIConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetUIConfigInterceptors() -> [ServerInterceptor<Types_UIConfigV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteUIConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUIConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getEvents'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetEventsInterceptors() -> [ServerInterceptor<Proto_GetEventsRequest, Proto_Events>]

  /// - Returns: Interceptors to use when handling 'getSessionEvents'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSessionEventsInterceptors() -> [ServerInterceptor<Proto_GetSessionEventsRequest, Proto_Events>]

  /// - Returns: Interceptors to use when handling 'getLock'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetLockInterceptors() -> [ServerInterceptor<Proto_GetLockRequest, Types_LockV2>]

  /// - Returns: Interceptors to use when handling 'getLocks'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetLocksInterceptors() -> [ServerInterceptor<Proto_GetLocksRequest, Proto_GetLocksResponse>]

  /// - Returns: Interceptors to use when handling 'upsertLock'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertLockInterceptors() -> [ServerInterceptor<Types_LockV2, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteLock'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteLockInterceptors() -> [ServerInterceptor<Proto_DeleteLockRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'replaceRemoteLocks'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReplaceRemoteLocksInterceptors() -> [ServerInterceptor<Proto_ReplaceRemoteLocksRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'streamSessionEvents'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeStreamSessionEventsInterceptors() -> [ServerInterceptor<Proto_StreamSessionEventsRequest, Events_OneOf>]

  /// - Returns: Interceptors to use when handling 'getNetworkRestrictions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetNetworkRestrictionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_NetworkRestrictionsV4>]

  /// - Returns: Interceptors to use when handling 'setNetworkRestrictions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetNetworkRestrictionsInterceptors() -> [ServerInterceptor<Types_NetworkRestrictionsV4, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteNetworkRestrictions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteNetworkRestrictionsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getApps'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAppsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_AppV3List>]

  /// - Returns: Interceptors to use when handling 'getApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAppInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_AppV3>]

  /// - Returns: Interceptors to use when handling 'createApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAppInterceptors() -> [ServerInterceptor<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateAppInterceptors() -> [ServerInterceptor<Types_AppV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteApp'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAppInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllApps'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllAppsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getDatabases'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDatabasesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_DatabaseV3List>]

  /// - Returns: Interceptors to use when handling 'getDatabase'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDatabaseInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_DatabaseV3>]

  /// - Returns: Interceptors to use when handling 'createDatabase'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateDatabaseInterceptors() -> [ServerInterceptor<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateDatabase'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateDatabaseInterceptors() -> [ServerInterceptor<Types_DatabaseV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteDatabase'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteDatabaseInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllDatabases'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllDatabasesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getKubernetesClusters'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetKubernetesClustersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_KubernetesClusterV3List>]

  /// - Returns: Interceptors to use when handling 'getKubernetesCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetKubernetesClusterInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_KubernetesClusterV3>]

  /// - Returns: Interceptors to use when handling 'createKubernetesCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateKubernetesClusterInterceptors() -> [ServerInterceptor<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateKubernetesCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateKubernetesClusterInterceptors() -> [ServerInterceptor<Types_KubernetesClusterV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteKubernetesCluster'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteKubernetesClusterInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllKubernetesClusters'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllKubernetesClustersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getWindowsDesktopServices'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWindowsDesktopServicesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetWindowsDesktopServicesResponse>]

  /// - Returns: Interceptors to use when handling 'getWindowsDesktopService'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWindowsDesktopServiceInterceptors() -> [ServerInterceptor<Proto_GetWindowsDesktopServiceRequest, Proto_GetWindowsDesktopServiceResponse>]

  /// - Returns: Interceptors to use when handling 'upsertWindowsDesktopService'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertWindowsDesktopServiceInterceptors() -> [ServerInterceptor<Types_WindowsDesktopServiceV3, Types_KeepAlive>]

  /// - Returns: Interceptors to use when handling 'deleteWindowsDesktopService'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteWindowsDesktopServiceInterceptors() -> [ServerInterceptor<Proto_DeleteWindowsDesktopServiceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllWindowsDesktopServices'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllWindowsDesktopServicesInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getWindowsDesktops'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetWindowsDesktopsInterceptors() -> [ServerInterceptor<Types_WindowsDesktopFilter, Proto_GetWindowsDesktopsResponse>]

  /// - Returns: Interceptors to use when handling 'createWindowsDesktop'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateWindowsDesktopInterceptors() -> [ServerInterceptor<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateWindowsDesktop'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateWindowsDesktopInterceptors() -> [ServerInterceptor<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'upsertWindowsDesktop'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpsertWindowsDesktopInterceptors() -> [ServerInterceptor<Types_WindowsDesktopV3, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteWindowsDesktop'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteWindowsDesktopInterceptors() -> [ServerInterceptor<Proto_DeleteWindowsDesktopRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllWindowsDesktops'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllWindowsDesktopsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'generateWindowsDesktopCert'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateWindowsDesktopCertInterceptors() -> [ServerInterceptor<Proto_WindowsDesktopCertRequest, Proto_WindowsDesktopCertResponse>]

  /// - Returns: Interceptors to use when handling 'generateCertAuthorityCRL'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGenerateCertAuthorityCRLInterceptors() -> [ServerInterceptor<Proto_CertAuthorityRequest, Proto_CRL>]

  /// - Returns: Interceptors to use when handling 'createConnectionDiagnostic'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateConnectionDiagnosticInterceptors() -> [ServerInterceptor<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateConnectionDiagnostic'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateConnectionDiagnosticInterceptors() -> [ServerInterceptor<Types_ConnectionDiagnosticV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getConnectionDiagnostic'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetConnectionDiagnosticInterceptors() -> [ServerInterceptor<Proto_GetConnectionDiagnosticRequest, Types_ConnectionDiagnosticV1>]

  /// - Returns: Interceptors to use when handling 'appendDiagnosticTrace'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAppendDiagnosticTraceInterceptors() -> [ServerInterceptor<Proto_AppendDiagnosticTraceRequest, Types_ConnectionDiagnosticV1>]

  /// - Returns: Interceptors to use when handling 'changeUserAuthentication'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeChangeUserAuthenticationInterceptors() -> [ServerInterceptor<Proto_ChangeUserAuthenticationRequest, Proto_ChangeUserAuthenticationResponse>]

  /// - Returns: Interceptors to use when handling 'startAccountRecovery'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeStartAccountRecoveryInterceptors() -> [ServerInterceptor<Proto_StartAccountRecoveryRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when handling 'verifyAccountRecovery'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVerifyAccountRecoveryInterceptors() -> [ServerInterceptor<Proto_VerifyAccountRecoveryRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when handling 'completeAccountRecovery'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCompleteAccountRecoveryInterceptors() -> [ServerInterceptor<Proto_CompleteAccountRecoveryRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'createAccountRecoveryCodes'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateAccountRecoveryCodesInterceptors() -> [ServerInterceptor<Proto_CreateAccountRecoveryCodesRequest, Proto_RecoveryCodes>]

  /// - Returns: Interceptors to use when handling 'getAccountRecoveryToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccountRecoveryTokenInterceptors() -> [ServerInterceptor<Proto_GetAccountRecoveryTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when handling 'getAccountRecoveryCodes'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccountRecoveryCodesInterceptors() -> [ServerInterceptor<Proto_GetAccountRecoveryCodesRequest, Proto_RecoveryCodes>]

  /// - Returns: Interceptors to use when handling 'createPrivilegeToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreatePrivilegeTokenInterceptors() -> [ServerInterceptor<Proto_CreatePrivilegeTokenRequest, Types_UserTokenV3>]

  /// - Returns: Interceptors to use when handling 'getInstaller'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInstallerInterceptors() -> [ServerInterceptor<Types_ResourceRequest, Types_InstallerV1>]

  /// - Returns: Interceptors to use when handling 'getInstallers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInstallersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_InstallerV1List>]

  /// - Returns: Interceptors to use when handling 'setInstaller'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetInstallerInterceptors() -> [ServerInterceptor<Types_InstallerV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteInstaller'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteInstallerInterceptors() -> [ServerInterceptor<Types_ResourceRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllInstallers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllInstallersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'listResources'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListResourcesInterceptors() -> [ServerInterceptor<Proto_ListResourcesRequest, Proto_ListResourcesResponse>]

  /// - Returns: Interceptors to use when handling 'listUnifiedResources'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListUnifiedResourcesInterceptors() -> [ServerInterceptor<Proto_ListUnifiedResourcesRequest, Proto_ListUnifiedResourcesResponse>]

  /// - Returns: Interceptors to use when handling 'getSSHTargets'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSSHTargetsInterceptors() -> [ServerInterceptor<Proto_GetSSHTargetsRequest, Proto_GetSSHTargetsResponse>]

  /// - Returns: Interceptors to use when handling 'getDomainName'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDomainNameInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetDomainNameResponse>]

  /// - Returns: Interceptors to use when handling 'getClusterCACert'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetClusterCACertInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_GetClusterCACertResponse>]

  /// - Returns: Interceptors to use when handling 'submitUsageEvent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSubmitUsageEventInterceptors() -> [ServerInterceptor<Proto_SubmitUsageEventRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getLicense'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetLicenseInterceptors() -> [ServerInterceptor<Proto_GetLicenseRequest, Proto_GetLicenseResponse>]

  /// - Returns: Interceptors to use when handling 'listReleases'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListReleasesInterceptors() -> [ServerInterceptor<Proto_ListReleasesRequest, Proto_ListReleasesResponse>]

  /// - Returns: Interceptors to use when handling 'listSAMLIdPServiceProviders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListSAMLIdPServiceProvidersInterceptors() -> [ServerInterceptor<Proto_ListSAMLIdPServiceProvidersRequest, Proto_ListSAMLIdPServiceProvidersResponse>]

  /// - Returns: Interceptors to use when handling 'getSAMLIdPServiceProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSAMLIdPServiceProviderInterceptors() -> [ServerInterceptor<Proto_GetSAMLIdPServiceProviderRequest, Types_SAMLIdPServiceProviderV1>]

  /// - Returns: Interceptors to use when handling 'createSAMLIdPServiceProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSAMLIdPServiceProviderInterceptors() -> [ServerInterceptor<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateSAMLIdPServiceProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateSAMLIdPServiceProviderInterceptors() -> [ServerInterceptor<Types_SAMLIdPServiceProviderV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteSAMLIdPServiceProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteSAMLIdPServiceProviderInterceptors() -> [ServerInterceptor<Proto_DeleteSAMLIdPServiceProviderRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllSAMLIdPServiceProviders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllSAMLIdPServiceProvidersInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'listUserGroups'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListUserGroupsInterceptors() -> [ServerInterceptor<Proto_ListUserGroupsRequest, Proto_ListUserGroupsResponse>]

  /// - Returns: Interceptors to use when handling 'getUserGroup'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetUserGroupInterceptors() -> [ServerInterceptor<Proto_GetUserGroupRequest, Types_UserGroupV1>]

  /// - Returns: Interceptors to use when handling 'createUserGroup'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateUserGroupInterceptors() -> [ServerInterceptor<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'updateUserGroup'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateUserGroupInterceptors() -> [ServerInterceptor<Types_UserGroupV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteUserGroup'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUserGroupInterceptors() -> [ServerInterceptor<Proto_DeleteUserGroupRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteAllUserGroups'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteAllUserGroupsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'getHeadlessAuthentication'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetHeadlessAuthenticationInterceptors() -> [ServerInterceptor<Proto_GetHeadlessAuthenticationRequest, Types_HeadlessAuthentication>]

  /// - Returns: Interceptors to use when handling 'watchPendingHeadlessAuthentications'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWatchPendingHeadlessAuthenticationsInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Proto_Event>]

  /// - Returns: Interceptors to use when handling 'updateHeadlessAuthenticationState'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateHeadlessAuthenticationStateInterceptors() -> [ServerInterceptor<Proto_UpdateHeadlessAuthenticationStateRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'exportUpgradeWindows'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExportUpgradeWindowsInterceptors() -> [ServerInterceptor<Proto_ExportUpgradeWindowsRequest, Proto_ExportUpgradeWindowsResponse>]

  /// - Returns: Interceptors to use when handling 'getClusterMaintenanceConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetClusterMaintenanceConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Types_ClusterMaintenanceConfigV1>]

  /// - Returns: Interceptors to use when handling 'updateClusterMaintenanceConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateClusterMaintenanceConfigInterceptors() -> [ServerInterceptor<Types_ClusterMaintenanceConfigV1, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'deleteClusterMaintenanceConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteClusterMaintenanceConfigInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum Proto_AuthServiceServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "AuthService",
    fullName: "proto.AuthService",
    methods: [
      Proto_AuthServiceServerMetadata.Methods.inventoryControlStream,
      Proto_AuthServiceServerMetadata.Methods.getInventoryStatus,
      Proto_AuthServiceServerMetadata.Methods.getInventoryConnectedServiceCounts,
      Proto_AuthServiceServerMetadata.Methods.pingInventory,
      Proto_AuthServiceServerMetadata.Methods.getInstances,
      Proto_AuthServiceServerMetadata.Methods.getClusterAlerts,
      Proto_AuthServiceServerMetadata.Methods.upsertClusterAlert,
      Proto_AuthServiceServerMetadata.Methods.createAlertAck,
      Proto_AuthServiceServerMetadata.Methods.getAlertAcks,
      Proto_AuthServiceServerMetadata.Methods.clearAlertAcks,
      Proto_AuthServiceServerMetadata.Methods.maintainSessionPresence,
      Proto_AuthServiceServerMetadata.Methods.createSessionTracker,
      Proto_AuthServiceServerMetadata.Methods.getSessionTracker,
      Proto_AuthServiceServerMetadata.Methods.getActiveSessionTrackers,
      Proto_AuthServiceServerMetadata.Methods.getActiveSessionTrackersWithFilter,
      Proto_AuthServiceServerMetadata.Methods.removeSessionTracker,
      Proto_AuthServiceServerMetadata.Methods.updateSessionTracker,
      Proto_AuthServiceServerMetadata.Methods.sendKeepAlives,
      Proto_AuthServiceServerMetadata.Methods.watchEvents,
      Proto_AuthServiceServerMetadata.Methods.getNode,
      Proto_AuthServiceServerMetadata.Methods.upsertNode,
      Proto_AuthServiceServerMetadata.Methods.deleteNode,
      Proto_AuthServiceServerMetadata.Methods.deleteAllNodes,
      Proto_AuthServiceServerMetadata.Methods.generateUserCerts,
      Proto_AuthServiceServerMetadata.Methods.generateHostCerts,
      Proto_AuthServiceServerMetadata.Methods.generateUserSingleUseCerts,
      Proto_AuthServiceServerMetadata.Methods.generateOpenSSHCert,
      Proto_AuthServiceServerMetadata.Methods.isMFARequired,
      Proto_AuthServiceServerMetadata.Methods.getAccessRequestsV2,
      Proto_AuthServiceServerMetadata.Methods.createAccessRequest,
      Proto_AuthServiceServerMetadata.Methods.createAccessRequestV2,
      Proto_AuthServiceServerMetadata.Methods.deleteAccessRequest,
      Proto_AuthServiceServerMetadata.Methods.setAccessRequestState,
      Proto_AuthServiceServerMetadata.Methods.submitAccessReview,
      Proto_AuthServiceServerMetadata.Methods.getAccessCapabilities,
      Proto_AuthServiceServerMetadata.Methods.getAccessRequestAllowedPromotions,
      Proto_AuthServiceServerMetadata.Methods.getPluginData,
      Proto_AuthServiceServerMetadata.Methods.updatePluginData,
      Proto_AuthServiceServerMetadata.Methods.ping,
      Proto_AuthServiceServerMetadata.Methods.getResetPasswordToken,
      Proto_AuthServiceServerMetadata.Methods.createResetPasswordToken,
      Proto_AuthServiceServerMetadata.Methods.createBot,
      Proto_AuthServiceServerMetadata.Methods.deleteBot,
      Proto_AuthServiceServerMetadata.Methods.getBotUsers,
      Proto_AuthServiceServerMetadata.Methods.getUser,
      Proto_AuthServiceServerMetadata.Methods.getCurrentUser,
      Proto_AuthServiceServerMetadata.Methods.getCurrentUserRoles,
      Proto_AuthServiceServerMetadata.Methods.getUsers,
      Proto_AuthServiceServerMetadata.Methods.createUser,
      Proto_AuthServiceServerMetadata.Methods.updateUser,
      Proto_AuthServiceServerMetadata.Methods.deleteUser,
      Proto_AuthServiceServerMetadata.Methods.changePassword,
      Proto_AuthServiceServerMetadata.Methods.acquireSemaphore,
      Proto_AuthServiceServerMetadata.Methods.keepAliveSemaphoreLease,
      Proto_AuthServiceServerMetadata.Methods.cancelSemaphoreLease,
      Proto_AuthServiceServerMetadata.Methods.getSemaphores,
      Proto_AuthServiceServerMetadata.Methods.deleteSemaphore,
      Proto_AuthServiceServerMetadata.Methods.emitAuditEvent,
      Proto_AuthServiceServerMetadata.Methods.createAuditStream,
      Proto_AuthServiceServerMetadata.Methods.upsertApplicationServer,
      Proto_AuthServiceServerMetadata.Methods.deleteApplicationServer,
      Proto_AuthServiceServerMetadata.Methods.deleteAllApplicationServers,
      Proto_AuthServiceServerMetadata.Methods.generateAppToken,
      Proto_AuthServiceServerMetadata.Methods.getAppSession,
      Proto_AuthServiceServerMetadata.Methods.listAppSessions,
      Proto_AuthServiceServerMetadata.Methods.createAppSession,
      Proto_AuthServiceServerMetadata.Methods.deleteAppSession,
      Proto_AuthServiceServerMetadata.Methods.deleteAllAppSessions,
      Proto_AuthServiceServerMetadata.Methods.deleteUserAppSessions,
      Proto_AuthServiceServerMetadata.Methods.createSnowflakeSession,
      Proto_AuthServiceServerMetadata.Methods.getSnowflakeSession,
      Proto_AuthServiceServerMetadata.Methods.getSnowflakeSessions,
      Proto_AuthServiceServerMetadata.Methods.deleteSnowflakeSession,
      Proto_AuthServiceServerMetadata.Methods.deleteAllSnowflakeSessions,
      Proto_AuthServiceServerMetadata.Methods.createSAMLIdPSession,
      Proto_AuthServiceServerMetadata.Methods.getSAMLIdPSession,
      Proto_AuthServiceServerMetadata.Methods.listSAMLIdPSessions,
      Proto_AuthServiceServerMetadata.Methods.deleteSAMLIdPSession,
      Proto_AuthServiceServerMetadata.Methods.deleteAllSAMLIdPSessions,
      Proto_AuthServiceServerMetadata.Methods.deleteUserSAMLIdPSessions,
      Proto_AuthServiceServerMetadata.Methods.getWebSession,
      Proto_AuthServiceServerMetadata.Methods.getWebSessions,
      Proto_AuthServiceServerMetadata.Methods.deleteWebSession,
      Proto_AuthServiceServerMetadata.Methods.deleteAllWebSessions,
      Proto_AuthServiceServerMetadata.Methods.getWebToken,
      Proto_AuthServiceServerMetadata.Methods.getWebTokens,
      Proto_AuthServiceServerMetadata.Methods.deleteWebToken,
      Proto_AuthServiceServerMetadata.Methods.deleteAllWebTokens,
      Proto_AuthServiceServerMetadata.Methods.updateRemoteCluster,
      Proto_AuthServiceServerMetadata.Methods.upsertKubernetesServer,
      Proto_AuthServiceServerMetadata.Methods.deleteKubernetesServer,
      Proto_AuthServiceServerMetadata.Methods.deleteAllKubernetesServers,
      Proto_AuthServiceServerMetadata.Methods.upsertDatabaseServer,
      Proto_AuthServiceServerMetadata.Methods.deleteDatabaseServer,
      Proto_AuthServiceServerMetadata.Methods.deleteAllDatabaseServers,
      Proto_AuthServiceServerMetadata.Methods.upsertDatabaseService,
      Proto_AuthServiceServerMetadata.Methods.deleteDatabaseService,
      Proto_AuthServiceServerMetadata.Methods.deleteAllDatabaseServices,
      Proto_AuthServiceServerMetadata.Methods.signDatabaseCSR,
      Proto_AuthServiceServerMetadata.Methods.generateDatabaseCert,
      Proto_AuthServiceServerMetadata.Methods.generateSnowflakeJWT,
      Proto_AuthServiceServerMetadata.Methods.getRole,
      Proto_AuthServiceServerMetadata.Methods.getRoles,
      Proto_AuthServiceServerMetadata.Methods.createRole,
      Proto_AuthServiceServerMetadata.Methods.updateRole,
      Proto_AuthServiceServerMetadata.Methods.upsertRoleV2,
      Proto_AuthServiceServerMetadata.Methods.upsertRole,
      Proto_AuthServiceServerMetadata.Methods.deleteRole,
      Proto_AuthServiceServerMetadata.Methods.addMFADevice,
      Proto_AuthServiceServerMetadata.Methods.deleteMFADevice,
      Proto_AuthServiceServerMetadata.Methods.addMFADeviceSync,
      Proto_AuthServiceServerMetadata.Methods.deleteMFADeviceSync,
      Proto_AuthServiceServerMetadata.Methods.getMFADevices,
      Proto_AuthServiceServerMetadata.Methods.createAuthenticateChallenge,
      Proto_AuthServiceServerMetadata.Methods.createRegisterChallenge,
      Proto_AuthServiceServerMetadata.Methods.getOIDCConnector,
      Proto_AuthServiceServerMetadata.Methods.getOIDCConnectors,
      Proto_AuthServiceServerMetadata.Methods.createOIDCConnector,
      Proto_AuthServiceServerMetadata.Methods.updateOIDCConnector,
      Proto_AuthServiceServerMetadata.Methods.upsertOIDCConnector,
      Proto_AuthServiceServerMetadata.Methods.upsertOIDCConnectorV2,
      Proto_AuthServiceServerMetadata.Methods.deleteOIDCConnector,
      Proto_AuthServiceServerMetadata.Methods.createOIDCAuthRequest,
      Proto_AuthServiceServerMetadata.Methods.getOIDCAuthRequest,
      Proto_AuthServiceServerMetadata.Methods.getSAMLConnector,
      Proto_AuthServiceServerMetadata.Methods.getSAMLConnectors,
      Proto_AuthServiceServerMetadata.Methods.createSAMLConnector,
      Proto_AuthServiceServerMetadata.Methods.updateSAMLConnector,
      Proto_AuthServiceServerMetadata.Methods.upsertSAMLConnector,
      Proto_AuthServiceServerMetadata.Methods.upsertSAMLConnectorV2,
      Proto_AuthServiceServerMetadata.Methods.deleteSAMLConnector,
      Proto_AuthServiceServerMetadata.Methods.createSAMLAuthRequest,
      Proto_AuthServiceServerMetadata.Methods.getSAMLAuthRequest,
      Proto_AuthServiceServerMetadata.Methods.getGithubConnector,
      Proto_AuthServiceServerMetadata.Methods.getGithubConnectors,
      Proto_AuthServiceServerMetadata.Methods.createGithubConnector,
      Proto_AuthServiceServerMetadata.Methods.updateGithubConnector,
      Proto_AuthServiceServerMetadata.Methods.upsertGithubConnector,
      Proto_AuthServiceServerMetadata.Methods.upsertGithubConnectorV2,
      Proto_AuthServiceServerMetadata.Methods.deleteGithubConnector,
      Proto_AuthServiceServerMetadata.Methods.createGithubAuthRequest,
      Proto_AuthServiceServerMetadata.Methods.getGithubAuthRequest,
      Proto_AuthServiceServerMetadata.Methods.getSSODiagnosticInfo,
      Proto_AuthServiceServerMetadata.Methods.getServerInfos,
      Proto_AuthServiceServerMetadata.Methods.getServerInfo,
      Proto_AuthServiceServerMetadata.Methods.upsertServerInfo,
      Proto_AuthServiceServerMetadata.Methods.deleteServerInfo,
      Proto_AuthServiceServerMetadata.Methods.deleteAllServerInfos,
      Proto_AuthServiceServerMetadata.Methods.getTrustedCluster,
      Proto_AuthServiceServerMetadata.Methods.getTrustedClusters,
      Proto_AuthServiceServerMetadata.Methods.upsertTrustedCluster,
      Proto_AuthServiceServerMetadata.Methods.deleteTrustedCluster,
      Proto_AuthServiceServerMetadata.Methods.getToken,
      Proto_AuthServiceServerMetadata.Methods.getTokens,
      Proto_AuthServiceServerMetadata.Methods.createTokenV2,
      Proto_AuthServiceServerMetadata.Methods.upsertTokenV2,
      Proto_AuthServiceServerMetadata.Methods.deleteToken,
      Proto_AuthServiceServerMetadata.Methods.getClusterAuditConfig,
      Proto_AuthServiceServerMetadata.Methods.getClusterNetworkingConfig,
      Proto_AuthServiceServerMetadata.Methods.setClusterNetworkingConfig,
      Proto_AuthServiceServerMetadata.Methods.resetClusterNetworkingConfig,
      Proto_AuthServiceServerMetadata.Methods.getSessionRecordingConfig,
      Proto_AuthServiceServerMetadata.Methods.setSessionRecordingConfig,
      Proto_AuthServiceServerMetadata.Methods.resetSessionRecordingConfig,
      Proto_AuthServiceServerMetadata.Methods.getAuthPreference,
      Proto_AuthServiceServerMetadata.Methods.setAuthPreference,
      Proto_AuthServiceServerMetadata.Methods.resetAuthPreference,
      Proto_AuthServiceServerMetadata.Methods.getUIConfig,
      Proto_AuthServiceServerMetadata.Methods.setUIConfig,
      Proto_AuthServiceServerMetadata.Methods.deleteUIConfig,
      Proto_AuthServiceServerMetadata.Methods.getEvents,
      Proto_AuthServiceServerMetadata.Methods.getSessionEvents,
      Proto_AuthServiceServerMetadata.Methods.getLock,
      Proto_AuthServiceServerMetadata.Methods.getLocks,
      Proto_AuthServiceServerMetadata.Methods.upsertLock,
      Proto_AuthServiceServerMetadata.Methods.deleteLock,
      Proto_AuthServiceServerMetadata.Methods.replaceRemoteLocks,
      Proto_AuthServiceServerMetadata.Methods.streamSessionEvents,
      Proto_AuthServiceServerMetadata.Methods.getNetworkRestrictions,
      Proto_AuthServiceServerMetadata.Methods.setNetworkRestrictions,
      Proto_AuthServiceServerMetadata.Methods.deleteNetworkRestrictions,
      Proto_AuthServiceServerMetadata.Methods.getApps,
      Proto_AuthServiceServerMetadata.Methods.getApp,
      Proto_AuthServiceServerMetadata.Methods.createApp,
      Proto_AuthServiceServerMetadata.Methods.updateApp,
      Proto_AuthServiceServerMetadata.Methods.deleteApp,
      Proto_AuthServiceServerMetadata.Methods.deleteAllApps,
      Proto_AuthServiceServerMetadata.Methods.getDatabases,
      Proto_AuthServiceServerMetadata.Methods.getDatabase,
      Proto_AuthServiceServerMetadata.Methods.createDatabase,
      Proto_AuthServiceServerMetadata.Methods.updateDatabase,
      Proto_AuthServiceServerMetadata.Methods.deleteDatabase,
      Proto_AuthServiceServerMetadata.Methods.deleteAllDatabases,
      Proto_AuthServiceServerMetadata.Methods.getKubernetesClusters,
      Proto_AuthServiceServerMetadata.Methods.getKubernetesCluster,
      Proto_AuthServiceServerMetadata.Methods.createKubernetesCluster,
      Proto_AuthServiceServerMetadata.Methods.updateKubernetesCluster,
      Proto_AuthServiceServerMetadata.Methods.deleteKubernetesCluster,
      Proto_AuthServiceServerMetadata.Methods.deleteAllKubernetesClusters,
      Proto_AuthServiceServerMetadata.Methods.getWindowsDesktopServices,
      Proto_AuthServiceServerMetadata.Methods.getWindowsDesktopService,
      Proto_AuthServiceServerMetadata.Methods.upsertWindowsDesktopService,
      Proto_AuthServiceServerMetadata.Methods.deleteWindowsDesktopService,
      Proto_AuthServiceServerMetadata.Methods.deleteAllWindowsDesktopServices,
      Proto_AuthServiceServerMetadata.Methods.getWindowsDesktops,
      Proto_AuthServiceServerMetadata.Methods.createWindowsDesktop,
      Proto_AuthServiceServerMetadata.Methods.updateWindowsDesktop,
      Proto_AuthServiceServerMetadata.Methods.upsertWindowsDesktop,
      Proto_AuthServiceServerMetadata.Methods.deleteWindowsDesktop,
      Proto_AuthServiceServerMetadata.Methods.deleteAllWindowsDesktops,
      Proto_AuthServiceServerMetadata.Methods.generateWindowsDesktopCert,
      Proto_AuthServiceServerMetadata.Methods.generateCertAuthorityCRL,
      Proto_AuthServiceServerMetadata.Methods.createConnectionDiagnostic,
      Proto_AuthServiceServerMetadata.Methods.updateConnectionDiagnostic,
      Proto_AuthServiceServerMetadata.Methods.getConnectionDiagnostic,
      Proto_AuthServiceServerMetadata.Methods.appendDiagnosticTrace,
      Proto_AuthServiceServerMetadata.Methods.changeUserAuthentication,
      Proto_AuthServiceServerMetadata.Methods.startAccountRecovery,
      Proto_AuthServiceServerMetadata.Methods.verifyAccountRecovery,
      Proto_AuthServiceServerMetadata.Methods.completeAccountRecovery,
      Proto_AuthServiceServerMetadata.Methods.createAccountRecoveryCodes,
      Proto_AuthServiceServerMetadata.Methods.getAccountRecoveryToken,
      Proto_AuthServiceServerMetadata.Methods.getAccountRecoveryCodes,
      Proto_AuthServiceServerMetadata.Methods.createPrivilegeToken,
      Proto_AuthServiceServerMetadata.Methods.getInstaller,
      Proto_AuthServiceServerMetadata.Methods.getInstallers,
      Proto_AuthServiceServerMetadata.Methods.setInstaller,
      Proto_AuthServiceServerMetadata.Methods.deleteInstaller,
      Proto_AuthServiceServerMetadata.Methods.deleteAllInstallers,
      Proto_AuthServiceServerMetadata.Methods.listResources,
      Proto_AuthServiceServerMetadata.Methods.listUnifiedResources,
      Proto_AuthServiceServerMetadata.Methods.getSSHTargets,
      Proto_AuthServiceServerMetadata.Methods.getDomainName,
      Proto_AuthServiceServerMetadata.Methods.getClusterCACert,
      Proto_AuthServiceServerMetadata.Methods.submitUsageEvent,
      Proto_AuthServiceServerMetadata.Methods.getLicense,
      Proto_AuthServiceServerMetadata.Methods.listReleases,
      Proto_AuthServiceServerMetadata.Methods.listSAMLIdPServiceProviders,
      Proto_AuthServiceServerMetadata.Methods.getSAMLIdPServiceProvider,
      Proto_AuthServiceServerMetadata.Methods.createSAMLIdPServiceProvider,
      Proto_AuthServiceServerMetadata.Methods.updateSAMLIdPServiceProvider,
      Proto_AuthServiceServerMetadata.Methods.deleteSAMLIdPServiceProvider,
      Proto_AuthServiceServerMetadata.Methods.deleteAllSAMLIdPServiceProviders,
      Proto_AuthServiceServerMetadata.Methods.listUserGroups,
      Proto_AuthServiceServerMetadata.Methods.getUserGroup,
      Proto_AuthServiceServerMetadata.Methods.createUserGroup,
      Proto_AuthServiceServerMetadata.Methods.updateUserGroup,
      Proto_AuthServiceServerMetadata.Methods.deleteUserGroup,
      Proto_AuthServiceServerMetadata.Methods.deleteAllUserGroups,
      Proto_AuthServiceServerMetadata.Methods.getHeadlessAuthentication,
      Proto_AuthServiceServerMetadata.Methods.watchPendingHeadlessAuthentications,
      Proto_AuthServiceServerMetadata.Methods.updateHeadlessAuthenticationState,
      Proto_AuthServiceServerMetadata.Methods.exportUpgradeWindows,
      Proto_AuthServiceServerMetadata.Methods.getClusterMaintenanceConfig,
      Proto_AuthServiceServerMetadata.Methods.updateClusterMaintenanceConfig,
      Proto_AuthServiceServerMetadata.Methods.deleteClusterMaintenanceConfig,
    ]
  )

  internal enum Methods {
    internal static let inventoryControlStream = GRPCMethodDescriptor(
      name: "InventoryControlStream",
      path: "/proto.AuthService/InventoryControlStream",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let getInventoryStatus = GRPCMethodDescriptor(
      name: "GetInventoryStatus",
      path: "/proto.AuthService/GetInventoryStatus",
      type: GRPCCallType.unary
    )

    internal static let getInventoryConnectedServiceCounts = GRPCMethodDescriptor(
      name: "GetInventoryConnectedServiceCounts",
      path: "/proto.AuthService/GetInventoryConnectedServiceCounts",
      type: GRPCCallType.unary
    )

    internal static let pingInventory = GRPCMethodDescriptor(
      name: "PingInventory",
      path: "/proto.AuthService/PingInventory",
      type: GRPCCallType.unary
    )

    internal static let getInstances = GRPCMethodDescriptor(
      name: "GetInstances",
      path: "/proto.AuthService/GetInstances",
      type: GRPCCallType.serverStreaming
    )

    internal static let getClusterAlerts = GRPCMethodDescriptor(
      name: "GetClusterAlerts",
      path: "/proto.AuthService/GetClusterAlerts",
      type: GRPCCallType.unary
    )

    internal static let upsertClusterAlert = GRPCMethodDescriptor(
      name: "UpsertClusterAlert",
      path: "/proto.AuthService/UpsertClusterAlert",
      type: GRPCCallType.unary
    )

    internal static let createAlertAck = GRPCMethodDescriptor(
      name: "CreateAlertAck",
      path: "/proto.AuthService/CreateAlertAck",
      type: GRPCCallType.unary
    )

    internal static let getAlertAcks = GRPCMethodDescriptor(
      name: "GetAlertAcks",
      path: "/proto.AuthService/GetAlertAcks",
      type: GRPCCallType.unary
    )

    internal static let clearAlertAcks = GRPCMethodDescriptor(
      name: "ClearAlertAcks",
      path: "/proto.AuthService/ClearAlertAcks",
      type: GRPCCallType.unary
    )

    internal static let maintainSessionPresence = GRPCMethodDescriptor(
      name: "MaintainSessionPresence",
      path: "/proto.AuthService/MaintainSessionPresence",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let createSessionTracker = GRPCMethodDescriptor(
      name: "CreateSessionTracker",
      path: "/proto.AuthService/CreateSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let getSessionTracker = GRPCMethodDescriptor(
      name: "GetSessionTracker",
      path: "/proto.AuthService/GetSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let getActiveSessionTrackers = GRPCMethodDescriptor(
      name: "GetActiveSessionTrackers",
      path: "/proto.AuthService/GetActiveSessionTrackers",
      type: GRPCCallType.serverStreaming
    )

    internal static let getActiveSessionTrackersWithFilter = GRPCMethodDescriptor(
      name: "GetActiveSessionTrackersWithFilter",
      path: "/proto.AuthService/GetActiveSessionTrackersWithFilter",
      type: GRPCCallType.serverStreaming
    )

    internal static let removeSessionTracker = GRPCMethodDescriptor(
      name: "RemoveSessionTracker",
      path: "/proto.AuthService/RemoveSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let updateSessionTracker = GRPCMethodDescriptor(
      name: "UpdateSessionTracker",
      path: "/proto.AuthService/UpdateSessionTracker",
      type: GRPCCallType.unary
    )

    internal static let sendKeepAlives = GRPCMethodDescriptor(
      name: "SendKeepAlives",
      path: "/proto.AuthService/SendKeepAlives",
      type: GRPCCallType.clientStreaming
    )

    internal static let watchEvents = GRPCMethodDescriptor(
      name: "WatchEvents",
      path: "/proto.AuthService/WatchEvents",
      type: GRPCCallType.serverStreaming
    )

    internal static let getNode = GRPCMethodDescriptor(
      name: "GetNode",
      path: "/proto.AuthService/GetNode",
      type: GRPCCallType.unary
    )

    internal static let upsertNode = GRPCMethodDescriptor(
      name: "UpsertNode",
      path: "/proto.AuthService/UpsertNode",
      type: GRPCCallType.unary
    )

    internal static let deleteNode = GRPCMethodDescriptor(
      name: "DeleteNode",
      path: "/proto.AuthService/DeleteNode",
      type: GRPCCallType.unary
    )

    internal static let deleteAllNodes = GRPCMethodDescriptor(
      name: "DeleteAllNodes",
      path: "/proto.AuthService/DeleteAllNodes",
      type: GRPCCallType.unary
    )

    internal static let generateUserCerts = GRPCMethodDescriptor(
      name: "GenerateUserCerts",
      path: "/proto.AuthService/GenerateUserCerts",
      type: GRPCCallType.unary
    )

    internal static let generateHostCerts = GRPCMethodDescriptor(
      name: "GenerateHostCerts",
      path: "/proto.AuthService/GenerateHostCerts",
      type: GRPCCallType.unary
    )

    internal static let generateUserSingleUseCerts = GRPCMethodDescriptor(
      name: "GenerateUserSingleUseCerts",
      path: "/proto.AuthService/GenerateUserSingleUseCerts",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let generateOpenSSHCert = GRPCMethodDescriptor(
      name: "GenerateOpenSSHCert",
      path: "/proto.AuthService/GenerateOpenSSHCert",
      type: GRPCCallType.unary
    )

    internal static let isMFARequired = GRPCMethodDescriptor(
      name: "IsMFARequired",
      path: "/proto.AuthService/IsMFARequired",
      type: GRPCCallType.unary
    )

    internal static let getAccessRequestsV2 = GRPCMethodDescriptor(
      name: "GetAccessRequestsV2",
      path: "/proto.AuthService/GetAccessRequestsV2",
      type: GRPCCallType.serverStreaming
    )

    internal static let createAccessRequest = GRPCMethodDescriptor(
      name: "CreateAccessRequest",
      path: "/proto.AuthService/CreateAccessRequest",
      type: GRPCCallType.unary
    )

    internal static let createAccessRequestV2 = GRPCMethodDescriptor(
      name: "CreateAccessRequestV2",
      path: "/proto.AuthService/CreateAccessRequestV2",
      type: GRPCCallType.unary
    )

    internal static let deleteAccessRequest = GRPCMethodDescriptor(
      name: "DeleteAccessRequest",
      path: "/proto.AuthService/DeleteAccessRequest",
      type: GRPCCallType.unary
    )

    internal static let setAccessRequestState = GRPCMethodDescriptor(
      name: "SetAccessRequestState",
      path: "/proto.AuthService/SetAccessRequestState",
      type: GRPCCallType.unary
    )

    internal static let submitAccessReview = GRPCMethodDescriptor(
      name: "SubmitAccessReview",
      path: "/proto.AuthService/SubmitAccessReview",
      type: GRPCCallType.unary
    )

    internal static let getAccessCapabilities = GRPCMethodDescriptor(
      name: "GetAccessCapabilities",
      path: "/proto.AuthService/GetAccessCapabilities",
      type: GRPCCallType.unary
    )

    internal static let getAccessRequestAllowedPromotions = GRPCMethodDescriptor(
      name: "GetAccessRequestAllowedPromotions",
      path: "/proto.AuthService/GetAccessRequestAllowedPromotions",
      type: GRPCCallType.unary
    )

    internal static let getPluginData = GRPCMethodDescriptor(
      name: "GetPluginData",
      path: "/proto.AuthService/GetPluginData",
      type: GRPCCallType.unary
    )

    internal static let updatePluginData = GRPCMethodDescriptor(
      name: "UpdatePluginData",
      path: "/proto.AuthService/UpdatePluginData",
      type: GRPCCallType.unary
    )

    internal static let ping = GRPCMethodDescriptor(
      name: "Ping",
      path: "/proto.AuthService/Ping",
      type: GRPCCallType.unary
    )

    internal static let getResetPasswordToken = GRPCMethodDescriptor(
      name: "GetResetPasswordToken",
      path: "/proto.AuthService/GetResetPasswordToken",
      type: GRPCCallType.unary
    )

    internal static let createResetPasswordToken = GRPCMethodDescriptor(
      name: "CreateResetPasswordToken",
      path: "/proto.AuthService/CreateResetPasswordToken",
      type: GRPCCallType.unary
    )

    internal static let createBot = GRPCMethodDescriptor(
      name: "CreateBot",
      path: "/proto.AuthService/CreateBot",
      type: GRPCCallType.unary
    )

    internal static let deleteBot = GRPCMethodDescriptor(
      name: "DeleteBot",
      path: "/proto.AuthService/DeleteBot",
      type: GRPCCallType.unary
    )

    internal static let getBotUsers = GRPCMethodDescriptor(
      name: "GetBotUsers",
      path: "/proto.AuthService/GetBotUsers",
      type: GRPCCallType.serverStreaming
    )

    internal static let getUser = GRPCMethodDescriptor(
      name: "GetUser",
      path: "/proto.AuthService/GetUser",
      type: GRPCCallType.unary
    )

    internal static let getCurrentUser = GRPCMethodDescriptor(
      name: "GetCurrentUser",
      path: "/proto.AuthService/GetCurrentUser",
      type: GRPCCallType.unary
    )

    internal static let getCurrentUserRoles = GRPCMethodDescriptor(
      name: "GetCurrentUserRoles",
      path: "/proto.AuthService/GetCurrentUserRoles",
      type: GRPCCallType.serverStreaming
    )

    internal static let getUsers = GRPCMethodDescriptor(
      name: "GetUsers",
      path: "/proto.AuthService/GetUsers",
      type: GRPCCallType.serverStreaming
    )

    internal static let createUser = GRPCMethodDescriptor(
      name: "CreateUser",
      path: "/proto.AuthService/CreateUser",
      type: GRPCCallType.unary
    )

    internal static let updateUser = GRPCMethodDescriptor(
      name: "UpdateUser",
      path: "/proto.AuthService/UpdateUser",
      type: GRPCCallType.unary
    )

    internal static let deleteUser = GRPCMethodDescriptor(
      name: "DeleteUser",
      path: "/proto.AuthService/DeleteUser",
      type: GRPCCallType.unary
    )

    internal static let changePassword = GRPCMethodDescriptor(
      name: "ChangePassword",
      path: "/proto.AuthService/ChangePassword",
      type: GRPCCallType.unary
    )

    internal static let acquireSemaphore = GRPCMethodDescriptor(
      name: "AcquireSemaphore",
      path: "/proto.AuthService/AcquireSemaphore",
      type: GRPCCallType.unary
    )

    internal static let keepAliveSemaphoreLease = GRPCMethodDescriptor(
      name: "KeepAliveSemaphoreLease",
      path: "/proto.AuthService/KeepAliveSemaphoreLease",
      type: GRPCCallType.unary
    )

    internal static let cancelSemaphoreLease = GRPCMethodDescriptor(
      name: "CancelSemaphoreLease",
      path: "/proto.AuthService/CancelSemaphoreLease",
      type: GRPCCallType.unary
    )

    internal static let getSemaphores = GRPCMethodDescriptor(
      name: "GetSemaphores",
      path: "/proto.AuthService/GetSemaphores",
      type: GRPCCallType.unary
    )

    internal static let deleteSemaphore = GRPCMethodDescriptor(
      name: "DeleteSemaphore",
      path: "/proto.AuthService/DeleteSemaphore",
      type: GRPCCallType.unary
    )

    internal static let emitAuditEvent = GRPCMethodDescriptor(
      name: "EmitAuditEvent",
      path: "/proto.AuthService/EmitAuditEvent",
      type: GRPCCallType.unary
    )

    internal static let createAuditStream = GRPCMethodDescriptor(
      name: "CreateAuditStream",
      path: "/proto.AuthService/CreateAuditStream",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let upsertApplicationServer = GRPCMethodDescriptor(
      name: "UpsertApplicationServer",
      path: "/proto.AuthService/UpsertApplicationServer",
      type: GRPCCallType.unary
    )

    internal static let deleteApplicationServer = GRPCMethodDescriptor(
      name: "DeleteApplicationServer",
      path: "/proto.AuthService/DeleteApplicationServer",
      type: GRPCCallType.unary
    )

    internal static let deleteAllApplicationServers = GRPCMethodDescriptor(
      name: "DeleteAllApplicationServers",
      path: "/proto.AuthService/DeleteAllApplicationServers",
      type: GRPCCallType.unary
    )

    internal static let generateAppToken = GRPCMethodDescriptor(
      name: "GenerateAppToken",
      path: "/proto.AuthService/GenerateAppToken",
      type: GRPCCallType.unary
    )

    internal static let getAppSession = GRPCMethodDescriptor(
      name: "GetAppSession",
      path: "/proto.AuthService/GetAppSession",
      type: GRPCCallType.unary
    )

    internal static let listAppSessions = GRPCMethodDescriptor(
      name: "ListAppSessions",
      path: "/proto.AuthService/ListAppSessions",
      type: GRPCCallType.unary
    )

    internal static let createAppSession = GRPCMethodDescriptor(
      name: "CreateAppSession",
      path: "/proto.AuthService/CreateAppSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAppSession = GRPCMethodDescriptor(
      name: "DeleteAppSession",
      path: "/proto.AuthService/DeleteAppSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllAppSessions = GRPCMethodDescriptor(
      name: "DeleteAllAppSessions",
      path: "/proto.AuthService/DeleteAllAppSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteUserAppSessions = GRPCMethodDescriptor(
      name: "DeleteUserAppSessions",
      path: "/proto.AuthService/DeleteUserAppSessions",
      type: GRPCCallType.unary
    )

    internal static let createSnowflakeSession = GRPCMethodDescriptor(
      name: "CreateSnowflakeSession",
      path: "/proto.AuthService/CreateSnowflakeSession",
      type: GRPCCallType.unary
    )

    internal static let getSnowflakeSession = GRPCMethodDescriptor(
      name: "GetSnowflakeSession",
      path: "/proto.AuthService/GetSnowflakeSession",
      type: GRPCCallType.unary
    )

    internal static let getSnowflakeSessions = GRPCMethodDescriptor(
      name: "GetSnowflakeSessions",
      path: "/proto.AuthService/GetSnowflakeSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteSnowflakeSession = GRPCMethodDescriptor(
      name: "DeleteSnowflakeSession",
      path: "/proto.AuthService/DeleteSnowflakeSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllSnowflakeSessions = GRPCMethodDescriptor(
      name: "DeleteAllSnowflakeSessions",
      path: "/proto.AuthService/DeleteAllSnowflakeSessions",
      type: GRPCCallType.unary
    )

    internal static let createSAMLIdPSession = GRPCMethodDescriptor(
      name: "CreateSAMLIdPSession",
      path: "/proto.AuthService/CreateSAMLIdPSession",
      type: GRPCCallType.unary
    )

    internal static let getSAMLIdPSession = GRPCMethodDescriptor(
      name: "GetSAMLIdPSession",
      path: "/proto.AuthService/GetSAMLIdPSession",
      type: GRPCCallType.unary
    )

    internal static let listSAMLIdPSessions = GRPCMethodDescriptor(
      name: "ListSAMLIdPSessions",
      path: "/proto.AuthService/ListSAMLIdPSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteSAMLIdPSession = GRPCMethodDescriptor(
      name: "DeleteSAMLIdPSession",
      path: "/proto.AuthService/DeleteSAMLIdPSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllSAMLIdPSessions = GRPCMethodDescriptor(
      name: "DeleteAllSAMLIdPSessions",
      path: "/proto.AuthService/DeleteAllSAMLIdPSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteUserSAMLIdPSessions = GRPCMethodDescriptor(
      name: "DeleteUserSAMLIdPSessions",
      path: "/proto.AuthService/DeleteUserSAMLIdPSessions",
      type: GRPCCallType.unary
    )

    internal static let getWebSession = GRPCMethodDescriptor(
      name: "GetWebSession",
      path: "/proto.AuthService/GetWebSession",
      type: GRPCCallType.unary
    )

    internal static let getWebSessions = GRPCMethodDescriptor(
      name: "GetWebSessions",
      path: "/proto.AuthService/GetWebSessions",
      type: GRPCCallType.unary
    )

    internal static let deleteWebSession = GRPCMethodDescriptor(
      name: "DeleteWebSession",
      path: "/proto.AuthService/DeleteWebSession",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWebSessions = GRPCMethodDescriptor(
      name: "DeleteAllWebSessions",
      path: "/proto.AuthService/DeleteAllWebSessions",
      type: GRPCCallType.unary
    )

    internal static let getWebToken = GRPCMethodDescriptor(
      name: "GetWebToken",
      path: "/proto.AuthService/GetWebToken",
      type: GRPCCallType.unary
    )

    internal static let getWebTokens = GRPCMethodDescriptor(
      name: "GetWebTokens",
      path: "/proto.AuthService/GetWebTokens",
      type: GRPCCallType.unary
    )

    internal static let deleteWebToken = GRPCMethodDescriptor(
      name: "DeleteWebToken",
      path: "/proto.AuthService/DeleteWebToken",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWebTokens = GRPCMethodDescriptor(
      name: "DeleteAllWebTokens",
      path: "/proto.AuthService/DeleteAllWebTokens",
      type: GRPCCallType.unary
    )

    internal static let updateRemoteCluster = GRPCMethodDescriptor(
      name: "UpdateRemoteCluster",
      path: "/proto.AuthService/UpdateRemoteCluster",
      type: GRPCCallType.unary
    )

    internal static let upsertKubernetesServer = GRPCMethodDescriptor(
      name: "UpsertKubernetesServer",
      path: "/proto.AuthService/UpsertKubernetesServer",
      type: GRPCCallType.unary
    )

    internal static let deleteKubernetesServer = GRPCMethodDescriptor(
      name: "DeleteKubernetesServer",
      path: "/proto.AuthService/DeleteKubernetesServer",
      type: GRPCCallType.unary
    )

    internal static let deleteAllKubernetesServers = GRPCMethodDescriptor(
      name: "DeleteAllKubernetesServers",
      path: "/proto.AuthService/DeleteAllKubernetesServers",
      type: GRPCCallType.unary
    )

    internal static let upsertDatabaseServer = GRPCMethodDescriptor(
      name: "UpsertDatabaseServer",
      path: "/proto.AuthService/UpsertDatabaseServer",
      type: GRPCCallType.unary
    )

    internal static let deleteDatabaseServer = GRPCMethodDescriptor(
      name: "DeleteDatabaseServer",
      path: "/proto.AuthService/DeleteDatabaseServer",
      type: GRPCCallType.unary
    )

    internal static let deleteAllDatabaseServers = GRPCMethodDescriptor(
      name: "DeleteAllDatabaseServers",
      path: "/proto.AuthService/DeleteAllDatabaseServers",
      type: GRPCCallType.unary
    )

    internal static let upsertDatabaseService = GRPCMethodDescriptor(
      name: "UpsertDatabaseService",
      path: "/proto.AuthService/UpsertDatabaseService",
      type: GRPCCallType.unary
    )

    internal static let deleteDatabaseService = GRPCMethodDescriptor(
      name: "DeleteDatabaseService",
      path: "/proto.AuthService/DeleteDatabaseService",
      type: GRPCCallType.unary
    )

    internal static let deleteAllDatabaseServices = GRPCMethodDescriptor(
      name: "DeleteAllDatabaseServices",
      path: "/proto.AuthService/DeleteAllDatabaseServices",
      type: GRPCCallType.unary
    )

    internal static let signDatabaseCSR = GRPCMethodDescriptor(
      name: "SignDatabaseCSR",
      path: "/proto.AuthService/SignDatabaseCSR",
      type: GRPCCallType.unary
    )

    internal static let generateDatabaseCert = GRPCMethodDescriptor(
      name: "GenerateDatabaseCert",
      path: "/proto.AuthService/GenerateDatabaseCert",
      type: GRPCCallType.unary
    )

    internal static let generateSnowflakeJWT = GRPCMethodDescriptor(
      name: "GenerateSnowflakeJWT",
      path: "/proto.AuthService/GenerateSnowflakeJWT",
      type: GRPCCallType.unary
    )

    internal static let getRole = GRPCMethodDescriptor(
      name: "GetRole",
      path: "/proto.AuthService/GetRole",
      type: GRPCCallType.unary
    )

    internal static let getRoles = GRPCMethodDescriptor(
      name: "GetRoles",
      path: "/proto.AuthService/GetRoles",
      type: GRPCCallType.unary
    )

    internal static let createRole = GRPCMethodDescriptor(
      name: "CreateRole",
      path: "/proto.AuthService/CreateRole",
      type: GRPCCallType.unary
    )

    internal static let updateRole = GRPCMethodDescriptor(
      name: "UpdateRole",
      path: "/proto.AuthService/UpdateRole",
      type: GRPCCallType.unary
    )

    internal static let upsertRoleV2 = GRPCMethodDescriptor(
      name: "UpsertRoleV2",
      path: "/proto.AuthService/UpsertRoleV2",
      type: GRPCCallType.unary
    )

    internal static let upsertRole = GRPCMethodDescriptor(
      name: "UpsertRole",
      path: "/proto.AuthService/UpsertRole",
      type: GRPCCallType.unary
    )

    internal static let deleteRole = GRPCMethodDescriptor(
      name: "DeleteRole",
      path: "/proto.AuthService/DeleteRole",
      type: GRPCCallType.unary
    )

    internal static let addMFADevice = GRPCMethodDescriptor(
      name: "AddMFADevice",
      path: "/proto.AuthService/AddMFADevice",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let deleteMFADevice = GRPCMethodDescriptor(
      name: "DeleteMFADevice",
      path: "/proto.AuthService/DeleteMFADevice",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let addMFADeviceSync = GRPCMethodDescriptor(
      name: "AddMFADeviceSync",
      path: "/proto.AuthService/AddMFADeviceSync",
      type: GRPCCallType.unary
    )

    internal static let deleteMFADeviceSync = GRPCMethodDescriptor(
      name: "DeleteMFADeviceSync",
      path: "/proto.AuthService/DeleteMFADeviceSync",
      type: GRPCCallType.unary
    )

    internal static let getMFADevices = GRPCMethodDescriptor(
      name: "GetMFADevices",
      path: "/proto.AuthService/GetMFADevices",
      type: GRPCCallType.unary
    )

    internal static let createAuthenticateChallenge = GRPCMethodDescriptor(
      name: "CreateAuthenticateChallenge",
      path: "/proto.AuthService/CreateAuthenticateChallenge",
      type: GRPCCallType.unary
    )

    internal static let createRegisterChallenge = GRPCMethodDescriptor(
      name: "CreateRegisterChallenge",
      path: "/proto.AuthService/CreateRegisterChallenge",
      type: GRPCCallType.unary
    )

    internal static let getOIDCConnector = GRPCMethodDescriptor(
      name: "GetOIDCConnector",
      path: "/proto.AuthService/GetOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let getOIDCConnectors = GRPCMethodDescriptor(
      name: "GetOIDCConnectors",
      path: "/proto.AuthService/GetOIDCConnectors",
      type: GRPCCallType.unary
    )

    internal static let createOIDCConnector = GRPCMethodDescriptor(
      name: "CreateOIDCConnector",
      path: "/proto.AuthService/CreateOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let updateOIDCConnector = GRPCMethodDescriptor(
      name: "UpdateOIDCConnector",
      path: "/proto.AuthService/UpdateOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertOIDCConnector = GRPCMethodDescriptor(
      name: "UpsertOIDCConnector",
      path: "/proto.AuthService/UpsertOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertOIDCConnectorV2 = GRPCMethodDescriptor(
      name: "UpsertOIDCConnectorV2",
      path: "/proto.AuthService/UpsertOIDCConnectorV2",
      type: GRPCCallType.unary
    )

    internal static let deleteOIDCConnector = GRPCMethodDescriptor(
      name: "DeleteOIDCConnector",
      path: "/proto.AuthService/DeleteOIDCConnector",
      type: GRPCCallType.unary
    )

    internal static let createOIDCAuthRequest = GRPCMethodDescriptor(
      name: "CreateOIDCAuthRequest",
      path: "/proto.AuthService/CreateOIDCAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getOIDCAuthRequest = GRPCMethodDescriptor(
      name: "GetOIDCAuthRequest",
      path: "/proto.AuthService/GetOIDCAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getSAMLConnector = GRPCMethodDescriptor(
      name: "GetSAMLConnector",
      path: "/proto.AuthService/GetSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let getSAMLConnectors = GRPCMethodDescriptor(
      name: "GetSAMLConnectors",
      path: "/proto.AuthService/GetSAMLConnectors",
      type: GRPCCallType.unary
    )

    internal static let createSAMLConnector = GRPCMethodDescriptor(
      name: "CreateSAMLConnector",
      path: "/proto.AuthService/CreateSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let updateSAMLConnector = GRPCMethodDescriptor(
      name: "UpdateSAMLConnector",
      path: "/proto.AuthService/UpdateSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertSAMLConnector = GRPCMethodDescriptor(
      name: "UpsertSAMLConnector",
      path: "/proto.AuthService/UpsertSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertSAMLConnectorV2 = GRPCMethodDescriptor(
      name: "UpsertSAMLConnectorV2",
      path: "/proto.AuthService/UpsertSAMLConnectorV2",
      type: GRPCCallType.unary
    )

    internal static let deleteSAMLConnector = GRPCMethodDescriptor(
      name: "DeleteSAMLConnector",
      path: "/proto.AuthService/DeleteSAMLConnector",
      type: GRPCCallType.unary
    )

    internal static let createSAMLAuthRequest = GRPCMethodDescriptor(
      name: "CreateSAMLAuthRequest",
      path: "/proto.AuthService/CreateSAMLAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getSAMLAuthRequest = GRPCMethodDescriptor(
      name: "GetSAMLAuthRequest",
      path: "/proto.AuthService/GetSAMLAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getGithubConnector = GRPCMethodDescriptor(
      name: "GetGithubConnector",
      path: "/proto.AuthService/GetGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let getGithubConnectors = GRPCMethodDescriptor(
      name: "GetGithubConnectors",
      path: "/proto.AuthService/GetGithubConnectors",
      type: GRPCCallType.unary
    )

    internal static let createGithubConnector = GRPCMethodDescriptor(
      name: "CreateGithubConnector",
      path: "/proto.AuthService/CreateGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let updateGithubConnector = GRPCMethodDescriptor(
      name: "UpdateGithubConnector",
      path: "/proto.AuthService/UpdateGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertGithubConnector = GRPCMethodDescriptor(
      name: "UpsertGithubConnector",
      path: "/proto.AuthService/UpsertGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let upsertGithubConnectorV2 = GRPCMethodDescriptor(
      name: "UpsertGithubConnectorV2",
      path: "/proto.AuthService/UpsertGithubConnectorV2",
      type: GRPCCallType.unary
    )

    internal static let deleteGithubConnector = GRPCMethodDescriptor(
      name: "DeleteGithubConnector",
      path: "/proto.AuthService/DeleteGithubConnector",
      type: GRPCCallType.unary
    )

    internal static let createGithubAuthRequest = GRPCMethodDescriptor(
      name: "CreateGithubAuthRequest",
      path: "/proto.AuthService/CreateGithubAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getGithubAuthRequest = GRPCMethodDescriptor(
      name: "GetGithubAuthRequest",
      path: "/proto.AuthService/GetGithubAuthRequest",
      type: GRPCCallType.unary
    )

    internal static let getSSODiagnosticInfo = GRPCMethodDescriptor(
      name: "GetSSODiagnosticInfo",
      path: "/proto.AuthService/GetSSODiagnosticInfo",
      type: GRPCCallType.unary
    )

    internal static let getServerInfos = GRPCMethodDescriptor(
      name: "GetServerInfos",
      path: "/proto.AuthService/GetServerInfos",
      type: GRPCCallType.serverStreaming
    )

    internal static let getServerInfo = GRPCMethodDescriptor(
      name: "GetServerInfo",
      path: "/proto.AuthService/GetServerInfo",
      type: GRPCCallType.unary
    )

    internal static let upsertServerInfo = GRPCMethodDescriptor(
      name: "UpsertServerInfo",
      path: "/proto.AuthService/UpsertServerInfo",
      type: GRPCCallType.unary
    )

    internal static let deleteServerInfo = GRPCMethodDescriptor(
      name: "DeleteServerInfo",
      path: "/proto.AuthService/DeleteServerInfo",
      type: GRPCCallType.unary
    )

    internal static let deleteAllServerInfos = GRPCMethodDescriptor(
      name: "DeleteAllServerInfos",
      path: "/proto.AuthService/DeleteAllServerInfos",
      type: GRPCCallType.unary
    )

    internal static let getTrustedCluster = GRPCMethodDescriptor(
      name: "GetTrustedCluster",
      path: "/proto.AuthService/GetTrustedCluster",
      type: GRPCCallType.unary
    )

    internal static let getTrustedClusters = GRPCMethodDescriptor(
      name: "GetTrustedClusters",
      path: "/proto.AuthService/GetTrustedClusters",
      type: GRPCCallType.unary
    )

    internal static let upsertTrustedCluster = GRPCMethodDescriptor(
      name: "UpsertTrustedCluster",
      path: "/proto.AuthService/UpsertTrustedCluster",
      type: GRPCCallType.unary
    )

    internal static let deleteTrustedCluster = GRPCMethodDescriptor(
      name: "DeleteTrustedCluster",
      path: "/proto.AuthService/DeleteTrustedCluster",
      type: GRPCCallType.unary
    )

    internal static let getToken = GRPCMethodDescriptor(
      name: "GetToken",
      path: "/proto.AuthService/GetToken",
      type: GRPCCallType.unary
    )

    internal static let getTokens = GRPCMethodDescriptor(
      name: "GetTokens",
      path: "/proto.AuthService/GetTokens",
      type: GRPCCallType.unary
    )

    internal static let createTokenV2 = GRPCMethodDescriptor(
      name: "CreateTokenV2",
      path: "/proto.AuthService/CreateTokenV2",
      type: GRPCCallType.unary
    )

    internal static let upsertTokenV2 = GRPCMethodDescriptor(
      name: "UpsertTokenV2",
      path: "/proto.AuthService/UpsertTokenV2",
      type: GRPCCallType.unary
    )

    internal static let deleteToken = GRPCMethodDescriptor(
      name: "DeleteToken",
      path: "/proto.AuthService/DeleteToken",
      type: GRPCCallType.unary
    )

    internal static let getClusterAuditConfig = GRPCMethodDescriptor(
      name: "GetClusterAuditConfig",
      path: "/proto.AuthService/GetClusterAuditConfig",
      type: GRPCCallType.unary
    )

    internal static let getClusterNetworkingConfig = GRPCMethodDescriptor(
      name: "GetClusterNetworkingConfig",
      path: "/proto.AuthService/GetClusterNetworkingConfig",
      type: GRPCCallType.unary
    )

    internal static let setClusterNetworkingConfig = GRPCMethodDescriptor(
      name: "SetClusterNetworkingConfig",
      path: "/proto.AuthService/SetClusterNetworkingConfig",
      type: GRPCCallType.unary
    )

    internal static let resetClusterNetworkingConfig = GRPCMethodDescriptor(
      name: "ResetClusterNetworkingConfig",
      path: "/proto.AuthService/ResetClusterNetworkingConfig",
      type: GRPCCallType.unary
    )

    internal static let getSessionRecordingConfig = GRPCMethodDescriptor(
      name: "GetSessionRecordingConfig",
      path: "/proto.AuthService/GetSessionRecordingConfig",
      type: GRPCCallType.unary
    )

    internal static let setSessionRecordingConfig = GRPCMethodDescriptor(
      name: "SetSessionRecordingConfig",
      path: "/proto.AuthService/SetSessionRecordingConfig",
      type: GRPCCallType.unary
    )

    internal static let resetSessionRecordingConfig = GRPCMethodDescriptor(
      name: "ResetSessionRecordingConfig",
      path: "/proto.AuthService/ResetSessionRecordingConfig",
      type: GRPCCallType.unary
    )

    internal static let getAuthPreference = GRPCMethodDescriptor(
      name: "GetAuthPreference",
      path: "/proto.AuthService/GetAuthPreference",
      type: GRPCCallType.unary
    )

    internal static let setAuthPreference = GRPCMethodDescriptor(
      name: "SetAuthPreference",
      path: "/proto.AuthService/SetAuthPreference",
      type: GRPCCallType.unary
    )

    internal static let resetAuthPreference = GRPCMethodDescriptor(
      name: "ResetAuthPreference",
      path: "/proto.AuthService/ResetAuthPreference",
      type: GRPCCallType.unary
    )

    internal static let getUIConfig = GRPCMethodDescriptor(
      name: "GetUIConfig",
      path: "/proto.AuthService/GetUIConfig",
      type: GRPCCallType.unary
    )

    internal static let setUIConfig = GRPCMethodDescriptor(
      name: "SetUIConfig",
      path: "/proto.AuthService/SetUIConfig",
      type: GRPCCallType.unary
    )

    internal static let deleteUIConfig = GRPCMethodDescriptor(
      name: "DeleteUIConfig",
      path: "/proto.AuthService/DeleteUIConfig",
      type: GRPCCallType.unary
    )

    internal static let getEvents = GRPCMethodDescriptor(
      name: "GetEvents",
      path: "/proto.AuthService/GetEvents",
      type: GRPCCallType.unary
    )

    internal static let getSessionEvents = GRPCMethodDescriptor(
      name: "GetSessionEvents",
      path: "/proto.AuthService/GetSessionEvents",
      type: GRPCCallType.unary
    )

    internal static let getLock = GRPCMethodDescriptor(
      name: "GetLock",
      path: "/proto.AuthService/GetLock",
      type: GRPCCallType.unary
    )

    internal static let getLocks = GRPCMethodDescriptor(
      name: "GetLocks",
      path: "/proto.AuthService/GetLocks",
      type: GRPCCallType.unary
    )

    internal static let upsertLock = GRPCMethodDescriptor(
      name: "UpsertLock",
      path: "/proto.AuthService/UpsertLock",
      type: GRPCCallType.unary
    )

    internal static let deleteLock = GRPCMethodDescriptor(
      name: "DeleteLock",
      path: "/proto.AuthService/DeleteLock",
      type: GRPCCallType.unary
    )

    internal static let replaceRemoteLocks = GRPCMethodDescriptor(
      name: "ReplaceRemoteLocks",
      path: "/proto.AuthService/ReplaceRemoteLocks",
      type: GRPCCallType.unary
    )

    internal static let streamSessionEvents = GRPCMethodDescriptor(
      name: "StreamSessionEvents",
      path: "/proto.AuthService/StreamSessionEvents",
      type: GRPCCallType.serverStreaming
    )

    internal static let getNetworkRestrictions = GRPCMethodDescriptor(
      name: "GetNetworkRestrictions",
      path: "/proto.AuthService/GetNetworkRestrictions",
      type: GRPCCallType.unary
    )

    internal static let setNetworkRestrictions = GRPCMethodDescriptor(
      name: "SetNetworkRestrictions",
      path: "/proto.AuthService/SetNetworkRestrictions",
      type: GRPCCallType.unary
    )

    internal static let deleteNetworkRestrictions = GRPCMethodDescriptor(
      name: "DeleteNetworkRestrictions",
      path: "/proto.AuthService/DeleteNetworkRestrictions",
      type: GRPCCallType.unary
    )

    internal static let getApps = GRPCMethodDescriptor(
      name: "GetApps",
      path: "/proto.AuthService/GetApps",
      type: GRPCCallType.unary
    )

    internal static let getApp = GRPCMethodDescriptor(
      name: "GetApp",
      path: "/proto.AuthService/GetApp",
      type: GRPCCallType.unary
    )

    internal static let createApp = GRPCMethodDescriptor(
      name: "CreateApp",
      path: "/proto.AuthService/CreateApp",
      type: GRPCCallType.unary
    )

    internal static let updateApp = GRPCMethodDescriptor(
      name: "UpdateApp",
      path: "/proto.AuthService/UpdateApp",
      type: GRPCCallType.unary
    )

    internal static let deleteApp = GRPCMethodDescriptor(
      name: "DeleteApp",
      path: "/proto.AuthService/DeleteApp",
      type: GRPCCallType.unary
    )

    internal static let deleteAllApps = GRPCMethodDescriptor(
      name: "DeleteAllApps",
      path: "/proto.AuthService/DeleteAllApps",
      type: GRPCCallType.unary
    )

    internal static let getDatabases = GRPCMethodDescriptor(
      name: "GetDatabases",
      path: "/proto.AuthService/GetDatabases",
      type: GRPCCallType.unary
    )

    internal static let getDatabase = GRPCMethodDescriptor(
      name: "GetDatabase",
      path: "/proto.AuthService/GetDatabase",
      type: GRPCCallType.unary
    )

    internal static let createDatabase = GRPCMethodDescriptor(
      name: "CreateDatabase",
      path: "/proto.AuthService/CreateDatabase",
      type: GRPCCallType.unary
    )

    internal static let updateDatabase = GRPCMethodDescriptor(
      name: "UpdateDatabase",
      path: "/proto.AuthService/UpdateDatabase",
      type: GRPCCallType.unary
    )

    internal static let deleteDatabase = GRPCMethodDescriptor(
      name: "DeleteDatabase",
      path: "/proto.AuthService/DeleteDatabase",
      type: GRPCCallType.unary
    )

    internal static let deleteAllDatabases = GRPCMethodDescriptor(
      name: "DeleteAllDatabases",
      path: "/proto.AuthService/DeleteAllDatabases",
      type: GRPCCallType.unary
    )

    internal static let getKubernetesClusters = GRPCMethodDescriptor(
      name: "GetKubernetesClusters",
      path: "/proto.AuthService/GetKubernetesClusters",
      type: GRPCCallType.unary
    )

    internal static let getKubernetesCluster = GRPCMethodDescriptor(
      name: "GetKubernetesCluster",
      path: "/proto.AuthService/GetKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let createKubernetesCluster = GRPCMethodDescriptor(
      name: "CreateKubernetesCluster",
      path: "/proto.AuthService/CreateKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let updateKubernetesCluster = GRPCMethodDescriptor(
      name: "UpdateKubernetesCluster",
      path: "/proto.AuthService/UpdateKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let deleteKubernetesCluster = GRPCMethodDescriptor(
      name: "DeleteKubernetesCluster",
      path: "/proto.AuthService/DeleteKubernetesCluster",
      type: GRPCCallType.unary
    )

    internal static let deleteAllKubernetesClusters = GRPCMethodDescriptor(
      name: "DeleteAllKubernetesClusters",
      path: "/proto.AuthService/DeleteAllKubernetesClusters",
      type: GRPCCallType.unary
    )

    internal static let getWindowsDesktopServices = GRPCMethodDescriptor(
      name: "GetWindowsDesktopServices",
      path: "/proto.AuthService/GetWindowsDesktopServices",
      type: GRPCCallType.unary
    )

    internal static let getWindowsDesktopService = GRPCMethodDescriptor(
      name: "GetWindowsDesktopService",
      path: "/proto.AuthService/GetWindowsDesktopService",
      type: GRPCCallType.unary
    )

    internal static let upsertWindowsDesktopService = GRPCMethodDescriptor(
      name: "UpsertWindowsDesktopService",
      path: "/proto.AuthService/UpsertWindowsDesktopService",
      type: GRPCCallType.unary
    )

    internal static let deleteWindowsDesktopService = GRPCMethodDescriptor(
      name: "DeleteWindowsDesktopService",
      path: "/proto.AuthService/DeleteWindowsDesktopService",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWindowsDesktopServices = GRPCMethodDescriptor(
      name: "DeleteAllWindowsDesktopServices",
      path: "/proto.AuthService/DeleteAllWindowsDesktopServices",
      type: GRPCCallType.unary
    )

    internal static let getWindowsDesktops = GRPCMethodDescriptor(
      name: "GetWindowsDesktops",
      path: "/proto.AuthService/GetWindowsDesktops",
      type: GRPCCallType.unary
    )

    internal static let createWindowsDesktop = GRPCMethodDescriptor(
      name: "CreateWindowsDesktop",
      path: "/proto.AuthService/CreateWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let updateWindowsDesktop = GRPCMethodDescriptor(
      name: "UpdateWindowsDesktop",
      path: "/proto.AuthService/UpdateWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let upsertWindowsDesktop = GRPCMethodDescriptor(
      name: "UpsertWindowsDesktop",
      path: "/proto.AuthService/UpsertWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let deleteWindowsDesktop = GRPCMethodDescriptor(
      name: "DeleteWindowsDesktop",
      path: "/proto.AuthService/DeleteWindowsDesktop",
      type: GRPCCallType.unary
    )

    internal static let deleteAllWindowsDesktops = GRPCMethodDescriptor(
      name: "DeleteAllWindowsDesktops",
      path: "/proto.AuthService/DeleteAllWindowsDesktops",
      type: GRPCCallType.unary
    )

    internal static let generateWindowsDesktopCert = GRPCMethodDescriptor(
      name: "GenerateWindowsDesktopCert",
      path: "/proto.AuthService/GenerateWindowsDesktopCert",
      type: GRPCCallType.unary
    )

    internal static let generateCertAuthorityCRL = GRPCMethodDescriptor(
      name: "GenerateCertAuthorityCRL",
      path: "/proto.AuthService/GenerateCertAuthorityCRL",
      type: GRPCCallType.unary
    )

    internal static let createConnectionDiagnostic = GRPCMethodDescriptor(
      name: "CreateConnectionDiagnostic",
      path: "/proto.AuthService/CreateConnectionDiagnostic",
      type: GRPCCallType.unary
    )

    internal static let updateConnectionDiagnostic = GRPCMethodDescriptor(
      name: "UpdateConnectionDiagnostic",
      path: "/proto.AuthService/UpdateConnectionDiagnostic",
      type: GRPCCallType.unary
    )

    internal static let getConnectionDiagnostic = GRPCMethodDescriptor(
      name: "GetConnectionDiagnostic",
      path: "/proto.AuthService/GetConnectionDiagnostic",
      type: GRPCCallType.unary
    )

    internal static let appendDiagnosticTrace = GRPCMethodDescriptor(
      name: "AppendDiagnosticTrace",
      path: "/proto.AuthService/AppendDiagnosticTrace",
      type: GRPCCallType.unary
    )

    internal static let changeUserAuthentication = GRPCMethodDescriptor(
      name: "ChangeUserAuthentication",
      path: "/proto.AuthService/ChangeUserAuthentication",
      type: GRPCCallType.unary
    )

    internal static let startAccountRecovery = GRPCMethodDescriptor(
      name: "StartAccountRecovery",
      path: "/proto.AuthService/StartAccountRecovery",
      type: GRPCCallType.unary
    )

    internal static let verifyAccountRecovery = GRPCMethodDescriptor(
      name: "VerifyAccountRecovery",
      path: "/proto.AuthService/VerifyAccountRecovery",
      type: GRPCCallType.unary
    )

    internal static let completeAccountRecovery = GRPCMethodDescriptor(
      name: "CompleteAccountRecovery",
      path: "/proto.AuthService/CompleteAccountRecovery",
      type: GRPCCallType.unary
    )

    internal static let createAccountRecoveryCodes = GRPCMethodDescriptor(
      name: "CreateAccountRecoveryCodes",
      path: "/proto.AuthService/CreateAccountRecoveryCodes",
      type: GRPCCallType.unary
    )

    internal static let getAccountRecoveryToken = GRPCMethodDescriptor(
      name: "GetAccountRecoveryToken",
      path: "/proto.AuthService/GetAccountRecoveryToken",
      type: GRPCCallType.unary
    )

    internal static let getAccountRecoveryCodes = GRPCMethodDescriptor(
      name: "GetAccountRecoveryCodes",
      path: "/proto.AuthService/GetAccountRecoveryCodes",
      type: GRPCCallType.unary
    )

    internal static let createPrivilegeToken = GRPCMethodDescriptor(
      name: "CreatePrivilegeToken",
      path: "/proto.AuthService/CreatePrivilegeToken",
      type: GRPCCallType.unary
    )

    internal static let getInstaller = GRPCMethodDescriptor(
      name: "GetInstaller",
      path: "/proto.AuthService/GetInstaller",
      type: GRPCCallType.unary
    )

    internal static let getInstallers = GRPCMethodDescriptor(
      name: "GetInstallers",
      path: "/proto.AuthService/GetInstallers",
      type: GRPCCallType.unary
    )

    internal static let setInstaller = GRPCMethodDescriptor(
      name: "SetInstaller",
      path: "/proto.AuthService/SetInstaller",
      type: GRPCCallType.unary
    )

    internal static let deleteInstaller = GRPCMethodDescriptor(
      name: "DeleteInstaller",
      path: "/proto.AuthService/DeleteInstaller",
      type: GRPCCallType.unary
    )

    internal static let deleteAllInstallers = GRPCMethodDescriptor(
      name: "DeleteAllInstallers",
      path: "/proto.AuthService/DeleteAllInstallers",
      type: GRPCCallType.unary
    )

    internal static let listResources = GRPCMethodDescriptor(
      name: "ListResources",
      path: "/proto.AuthService/ListResources",
      type: GRPCCallType.unary
    )

    internal static let listUnifiedResources = GRPCMethodDescriptor(
      name: "ListUnifiedResources",
      path: "/proto.AuthService/ListUnifiedResources",
      type: GRPCCallType.unary
    )

    internal static let getSSHTargets = GRPCMethodDescriptor(
      name: "GetSSHTargets",
      path: "/proto.AuthService/GetSSHTargets",
      type: GRPCCallType.unary
    )

    internal static let getDomainName = GRPCMethodDescriptor(
      name: "GetDomainName",
      path: "/proto.AuthService/GetDomainName",
      type: GRPCCallType.unary
    )

    internal static let getClusterCACert = GRPCMethodDescriptor(
      name: "GetClusterCACert",
      path: "/proto.AuthService/GetClusterCACert",
      type: GRPCCallType.unary
    )

    internal static let submitUsageEvent = GRPCMethodDescriptor(
      name: "SubmitUsageEvent",
      path: "/proto.AuthService/SubmitUsageEvent",
      type: GRPCCallType.unary
    )

    internal static let getLicense = GRPCMethodDescriptor(
      name: "GetLicense",
      path: "/proto.AuthService/GetLicense",
      type: GRPCCallType.unary
    )

    internal static let listReleases = GRPCMethodDescriptor(
      name: "ListReleases",
      path: "/proto.AuthService/ListReleases",
      type: GRPCCallType.unary
    )

    internal static let listSAMLIdPServiceProviders = GRPCMethodDescriptor(
      name: "ListSAMLIdPServiceProviders",
      path: "/proto.AuthService/ListSAMLIdPServiceProviders",
      type: GRPCCallType.unary
    )

    internal static let getSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "GetSAMLIdPServiceProvider",
      path: "/proto.AuthService/GetSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let createSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "CreateSAMLIdPServiceProvider",
      path: "/proto.AuthService/CreateSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let updateSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "UpdateSAMLIdPServiceProvider",
      path: "/proto.AuthService/UpdateSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let deleteSAMLIdPServiceProvider = GRPCMethodDescriptor(
      name: "DeleteSAMLIdPServiceProvider",
      path: "/proto.AuthService/DeleteSAMLIdPServiceProvider",
      type: GRPCCallType.unary
    )

    internal static let deleteAllSAMLIdPServiceProviders = GRPCMethodDescriptor(
      name: "DeleteAllSAMLIdPServiceProviders",
      path: "/proto.AuthService/DeleteAllSAMLIdPServiceProviders",
      type: GRPCCallType.unary
    )

    internal static let listUserGroups = GRPCMethodDescriptor(
      name: "ListUserGroups",
      path: "/proto.AuthService/ListUserGroups",
      type: GRPCCallType.unary
    )

    internal static let getUserGroup = GRPCMethodDescriptor(
      name: "GetUserGroup",
      path: "/proto.AuthService/GetUserGroup",
      type: GRPCCallType.unary
    )

    internal static let createUserGroup = GRPCMethodDescriptor(
      name: "CreateUserGroup",
      path: "/proto.AuthService/CreateUserGroup",
      type: GRPCCallType.unary
    )

    internal static let updateUserGroup = GRPCMethodDescriptor(
      name: "UpdateUserGroup",
      path: "/proto.AuthService/UpdateUserGroup",
      type: GRPCCallType.unary
    )

    internal static let deleteUserGroup = GRPCMethodDescriptor(
      name: "DeleteUserGroup",
      path: "/proto.AuthService/DeleteUserGroup",
      type: GRPCCallType.unary
    )

    internal static let deleteAllUserGroups = GRPCMethodDescriptor(
      name: "DeleteAllUserGroups",
      path: "/proto.AuthService/DeleteAllUserGroups",
      type: GRPCCallType.unary
    )

    internal static let getHeadlessAuthentication = GRPCMethodDescriptor(
      name: "GetHeadlessAuthentication",
      path: "/proto.AuthService/GetHeadlessAuthentication",
      type: GRPCCallType.unary
    )

    internal static let watchPendingHeadlessAuthentications = GRPCMethodDescriptor(
      name: "WatchPendingHeadlessAuthentications",
      path: "/proto.AuthService/WatchPendingHeadlessAuthentications",
      type: GRPCCallType.serverStreaming
    )

    internal static let updateHeadlessAuthenticationState = GRPCMethodDescriptor(
      name: "UpdateHeadlessAuthenticationState",
      path: "/proto.AuthService/UpdateHeadlessAuthenticationState",
      type: GRPCCallType.unary
    )

    internal static let exportUpgradeWindows = GRPCMethodDescriptor(
      name: "ExportUpgradeWindows",
      path: "/proto.AuthService/ExportUpgradeWindows",
      type: GRPCCallType.unary
    )

    internal static let getClusterMaintenanceConfig = GRPCMethodDescriptor(
      name: "GetClusterMaintenanceConfig",
      path: "/proto.AuthService/GetClusterMaintenanceConfig",
      type: GRPCCallType.unary
    )

    internal static let updateClusterMaintenanceConfig = GRPCMethodDescriptor(
      name: "UpdateClusterMaintenanceConfig",
      path: "/proto.AuthService/UpdateClusterMaintenanceConfig",
      type: GRPCCallType.unary
    )

    internal static let deleteClusterMaintenanceConfig = GRPCMethodDescriptor(
      name: "DeleteClusterMaintenanceConfig",
      path: "/proto.AuthService/DeleteClusterMaintenanceConfig",
      type: GRPCCallType.unary
    )
  }
}
