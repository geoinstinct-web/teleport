# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from teleport.auditlog.v1 import auditlog_pb2 as teleport_dot_auditlog_dot_v1_dot_auditlog__pb2


class AuditLogServiceStub(object):
    """AuditLogService provides methods to access audit log.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StreamUnstructuredSessionEvents = channel.unary_stream(
                '/teleport.auditlog.v1.AuditLogService/StreamUnstructuredSessionEvents',
                request_serializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.StreamUnstructuredSessionEventsRequest.SerializeToString,
                response_deserializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.EventUnstructured.FromString,
                )
        self.GetUnstructuredEvents = channel.unary_unary(
                '/teleport.auditlog.v1.AuditLogService/GetUnstructuredEvents',
                request_serializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.GetUnstructuredEventsRequest.SerializeToString,
                response_deserializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.EventsUnstructured.FromString,
                )


class AuditLogServiceServicer(object):
    """AuditLogService provides methods to access audit log.
    """

    def StreamUnstructuredSessionEvents(self, request, context):
        """StreamUnstructuredSessionEvents streams audit events from a given session recording in an unstructured format.
        This endpoint is used by the event handler to retrieve the session events as JSON.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnstructuredEvents(self, request, context):
        """GetUnstructuredEvents gets events from the audit log in an unstructured format.
        This endpoint is used by the event handler to retrieve the events as JSON.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuditLogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StreamUnstructuredSessionEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamUnstructuredSessionEvents,
                    request_deserializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.StreamUnstructuredSessionEventsRequest.FromString,
                    response_serializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.EventUnstructured.SerializeToString,
            ),
            'GetUnstructuredEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnstructuredEvents,
                    request_deserializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.GetUnstructuredEventsRequest.FromString,
                    response_serializer=teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.EventsUnstructured.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'teleport.auditlog.v1.AuditLogService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuditLogService(object):
    """AuditLogService provides methods to access audit log.
    """

    @staticmethod
    def StreamUnstructuredSessionEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/teleport.auditlog.v1.AuditLogService/StreamUnstructuredSessionEvents',
            teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.StreamUnstructuredSessionEventsRequest.SerializeToString,
            teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.EventUnstructured.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnstructuredEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.auditlog.v1.AuditLogService/GetUnstructuredEvents',
            teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.GetUnstructuredEventsRequest.SerializeToString,
            teleport_dot_auditlog_dot_v1_dot_auditlog__pb2.EventsUnstructured.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
