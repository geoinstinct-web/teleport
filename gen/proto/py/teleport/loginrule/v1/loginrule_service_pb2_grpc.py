# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from teleport.loginrule.v1 import loginrule_pb2 as teleport_dot_loginrule_dot_v1_dot_loginrule__pb2
from teleport.loginrule.v1 import loginrule_service_pb2 as teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2


class LoginRuleServiceStub(object):
    """LoginRuleService provides CRUD methods for the LoginRule resource.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLoginRule = channel.unary_unary(
                '/teleport.loginrule.v1.LoginRuleService/CreateLoginRule',
                request_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.CreateLoginRuleRequest.SerializeToString,
                response_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.FromString,
                )
        self.UpsertLoginRule = channel.unary_unary(
                '/teleport.loginrule.v1.LoginRuleService/UpsertLoginRule',
                request_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.UpsertLoginRuleRequest.SerializeToString,
                response_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.FromString,
                )
        self.GetLoginRule = channel.unary_unary(
                '/teleport.loginrule.v1.LoginRuleService/GetLoginRule',
                request_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.GetLoginRuleRequest.SerializeToString,
                response_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.FromString,
                )
        self.ListLoginRules = channel.unary_unary(
                '/teleport.loginrule.v1.LoginRuleService/ListLoginRules',
                request_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.ListLoginRulesRequest.SerializeToString,
                response_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.ListLoginRulesResponse.FromString,
                )
        self.DeleteLoginRule = channel.unary_unary(
                '/teleport.loginrule.v1.LoginRuleService/DeleteLoginRule',
                request_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.DeleteLoginRuleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.TestLoginRule = channel.unary_unary(
                '/teleport.loginrule.v1.LoginRuleService/TestLoginRule',
                request_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.TestLoginRuleRequest.SerializeToString,
                response_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.TestLoginRuleResponse.FromString,
                )


class LoginRuleServiceServicer(object):
    """LoginRuleService provides CRUD methods for the LoginRule resource.
    """

    def CreateLoginRule(self, request, context):
        """CreateLoginRule creates a login rule if one with the same name does not
        already exist, else it returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertLoginRule(self, request, context):
        """UpsertLoginRule creates a login rule if one with the same name does not
        already exist, else it replaces the existing login rule.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoginRule(self, request, context):
        """GetLoginRule retrieves a login rule described by the given request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoginRules(self, request, context):
        """ListLoginRules lists all login rules.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLoginRule(self, request, context):
        """DeleteLoginRule deletes an existing login rule.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestLoginRule(self, request, context):
        """TestLoginRule evaluates login rules against provided user traits
        to test that the output matches expectations prior to them being enforced and
        potentially locking out users.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoginRuleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLoginRule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoginRule,
                    request_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.CreateLoginRuleRequest.FromString,
                    response_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.SerializeToString,
            ),
            'UpsertLoginRule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertLoginRule,
                    request_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.UpsertLoginRuleRequest.FromString,
                    response_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.SerializeToString,
            ),
            'GetLoginRule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoginRule,
                    request_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.GetLoginRuleRequest.FromString,
                    response_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.SerializeToString,
            ),
            'ListLoginRules': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoginRules,
                    request_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.ListLoginRulesRequest.FromString,
                    response_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.ListLoginRulesResponse.SerializeToString,
            ),
            'DeleteLoginRule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLoginRule,
                    request_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.DeleteLoginRuleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TestLoginRule': grpc.unary_unary_rpc_method_handler(
                    servicer.TestLoginRule,
                    request_deserializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.TestLoginRuleRequest.FromString,
                    response_serializer=teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.TestLoginRuleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'teleport.loginrule.v1.LoginRuleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LoginRuleService(object):
    """LoginRuleService provides CRUD methods for the LoginRule resource.
    """

    @staticmethod
    def CreateLoginRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.loginrule.v1.LoginRuleService/CreateLoginRule',
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.CreateLoginRuleRequest.SerializeToString,
            teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertLoginRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.loginrule.v1.LoginRuleService/UpsertLoginRule',
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.UpsertLoginRuleRequest.SerializeToString,
            teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoginRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.loginrule.v1.LoginRuleService/GetLoginRule',
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.GetLoginRuleRequest.SerializeToString,
            teleport_dot_loginrule_dot_v1_dot_loginrule__pb2.LoginRule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoginRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.loginrule.v1.LoginRuleService/ListLoginRules',
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.ListLoginRulesRequest.SerializeToString,
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.ListLoginRulesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteLoginRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.loginrule.v1.LoginRuleService/DeleteLoginRule',
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.DeleteLoginRuleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestLoginRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teleport.loginrule.v1.LoginRuleService/TestLoginRule',
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.TestLoginRuleRequest.SerializeToString,
            teleport_dot_loginrule_dot_v1_dot_loginrule__service__pb2.TestLoginRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
