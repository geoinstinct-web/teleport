// source: teleport/accesslist/v1/accesslist_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var teleport_accesslist_v1_accesslist_pb = require('../../../teleport/accesslist/v1/accesslist_pb.js');
goog.object.extend(proto, teleport_accesslist_v1_accesslist_pb);
var teleport_legacy_types_types_pb = require('../../../teleport/legacy/types/types_pb.js');
goog.object.extend(proto, teleport_legacy_types_types_pb);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessRequestPromoteRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.AccessRequestPromoteResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.CountAccessListMembersRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.CountAccessListMembersResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.CreateAccessListReviewRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.CreateAccessListReviewResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.DeleteAccessListMemberRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.DeleteAccessListRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.DeleteAccessListReviewRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.DeleteAllAccessListsRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetAccessListMemberRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetAccessListRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetAccessListsRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetAccessListsResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetAccessListsToReviewRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetAccessListsToReviewResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAccessListMembersRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAccessListMembersResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAccessListReviewsRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAccessListReviewsResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAccessListsRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAccessListsResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAllAccessListMembersRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAllAccessListMembersResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.UpsertAccessListMemberRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.UpsertAccessListRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest', null, global);
goog.exportSymbol('proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetAccessListsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetAccessListsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetAccessListsRequest.displayName = 'proto.teleport.accesslist.v1.GetAccessListsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetAccessListsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.GetAccessListsResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetAccessListsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetAccessListsResponse.displayName = 'proto.teleport.accesslist.v1.GetAccessListsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAccessListsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAccessListsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAccessListsRequest.displayName = 'proto.teleport.accesslist.v1.ListAccessListsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAccessListsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ListAccessListsResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAccessListsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAccessListsResponse.displayName = 'proto.teleport.accesslist.v1.ListAccessListsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetAccessListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetAccessListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetAccessListRequest.displayName = 'proto.teleport.accesslist.v1.GetAccessListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.UpsertAccessListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.UpsertAccessListRequest.displayName = 'proto.teleport.accesslist.v1.UpsertAccessListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.DeleteAccessListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.DeleteAccessListRequest.displayName = 'proto.teleport.accesslist.v1.DeleteAccessListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.DeleteAllAccessListsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.displayName = 'proto.teleport.accesslist.v1.DeleteAllAccessListsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetAccessListsToReviewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.displayName = 'proto.teleport.accesslist.v1.GetAccessListsToReviewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetAccessListsToReviewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.displayName = 'proto.teleport.accesslist.v1.GetAccessListsToReviewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.CountAccessListMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.CountAccessListMembersRequest.displayName = 'proto.teleport.accesslist.v1.CountAccessListMembersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.CountAccessListMembersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.CountAccessListMembersResponse.displayName = 'proto.teleport.accesslist.v1.CountAccessListMembersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAccessListMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAccessListMembersRequest.displayName = 'proto.teleport.accesslist.v1.ListAccessListMembersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ListAccessListMembersResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAccessListMembersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAccessListMembersResponse.displayName = 'proto.teleport.accesslist.v1.ListAccessListMembersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAllAccessListMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.displayName = 'proto.teleport.accesslist.v1.ListAllAccessListMembersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAllAccessListMembersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.displayName = 'proto.teleport.accesslist.v1.ListAllAccessListMembersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.displayName = 'proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.displayName = 'proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetAccessListMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetAccessListMemberRequest.displayName = 'proto.teleport.accesslist.v1.GetAccessListMemberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.UpsertAccessListMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.displayName = 'proto.teleport.accesslist.v1.UpsertAccessListMemberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.DeleteAccessListMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.displayName = 'proto.teleport.accesslist.v1.DeleteAccessListMemberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.displayName = 'proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.displayName = 'proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAccessListReviewsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAccessListReviewsRequest.displayName = 'proto.teleport.accesslist.v1.ListAccessListReviewsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ListAccessListReviewsResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAccessListReviewsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAccessListReviewsResponse.displayName = 'proto.teleport.accesslist.v1.ListAccessListReviewsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.displayName = 'proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.displayName = 'proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.CreateAccessListReviewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.CreateAccessListReviewRequest.displayName = 'proto.teleport.accesslist.v1.CreateAccessListReviewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.CreateAccessListReviewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.CreateAccessListReviewResponse.displayName = 'proto.teleport.accesslist.v1.CreateAccessListReviewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.DeleteAccessListReviewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.displayName = 'proto.teleport.accesslist.v1.DeleteAccessListReviewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessRequestPromoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessRequestPromoteRequest.displayName = 'proto.teleport.accesslist.v1.AccessRequestPromoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.AccessRequestPromoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.AccessRequestPromoteResponse.displayName = 'proto.teleport.accesslist.v1.AccessRequestPromoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.displayName = 'proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.repeatedFields_, null);
};
goog.inherits(proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.displayName = 'proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetAccessListsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetAccessListsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetAccessListsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsRequest}
 */
proto.teleport.accesslist.v1.GetAccessListsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetAccessListsRequest;
  return proto.teleport.accesslist.v1.GetAccessListsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsRequest}
 */
proto.teleport.accesslist.v1.GetAccessListsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetAccessListsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetAccessListsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetAccessListsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetAccessListsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessListsList: jspb.Message.toObjectList(msg.getAccessListsList(),
    teleport_accesslist_v1_accesslist_pb.AccessList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsResponse}
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetAccessListsResponse;
  return proto.teleport.accesslist.v1.GetAccessListsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsResponse}
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.addAccessLists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetAccessListsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessListsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccessList access_lists = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.AccessList>}
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.prototype.getAccessListsList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.AccessList>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.AccessList>} value
 * @return {!proto.teleport.accesslist.v1.GetAccessListsResponse} returns this
*/
proto.teleport.accesslist.v1.GetAccessListsResponse.prototype.setAccessListsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.AccessList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.prototype.addAccessLists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.AccessList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsResponse} returns this
 */
proto.teleport.accesslist.v1.GetAccessListsResponse.prototype.clearAccessListsList = function() {
  return this.setAccessListsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAccessListsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAccessListsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAccessListsRequest}
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAccessListsRequest;
  return proto.teleport.accesslist.v1.ListAccessListsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAccessListsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAccessListsRequest}
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAccessListsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAccessListsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListsRequest.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAccessListsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAccessListsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessListsList: jspb.Message.toObjectList(msg.getAccessListsList(),
    teleport_accesslist_v1_accesslist_pb.AccessList.toObject, includeInstance),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAccessListsResponse}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAccessListsResponse;
  return proto.teleport.accesslist.v1.ListAccessListsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAccessListsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAccessListsResponse}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.addAccessLists(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAccessListsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAccessListsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessListsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated AccessList access_lists = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.AccessList>}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.getAccessListsList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.AccessList>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.AccessList>} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListsResponse} returns this
*/
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.setAccessListsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.AccessList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.addAccessLists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.AccessList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ListAccessListsResponse} returns this
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.clearAccessListsList = function() {
  return this.setAccessListsList([]);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListsResponse} returns this
 */
proto.teleport.accesslist.v1.ListAccessListsResponse.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetAccessListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetAccessListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetAccessListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetAccessListRequest}
 */
proto.teleport.accesslist.v1.GetAccessListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetAccessListRequest;
  return proto.teleport.accesslist.v1.GetAccessListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetAccessListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetAccessListRequest}
 */
proto.teleport.accesslist.v1.GetAccessListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetAccessListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetAccessListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetAccessListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.GetAccessListRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.GetAccessListRequest} returns this
 */
proto.teleport.accesslist.v1.GetAccessListRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.UpsertAccessListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: (f = msg.getAccessList()) && teleport_accesslist_v1_accesslist_pb.AccessList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListRequest}
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.UpsertAccessListRequest;
  return proto.teleport.accesslist.v1.UpsertAccessListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListRequest}
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.setAccessList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.UpsertAccessListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccessList access_list = 1;
 * @return {?proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.prototype.getAccessList = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessList} */ (
    jspb.Message.getWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessList|undefined} value
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListRequest} returns this
*/
proto.teleport.accesslist.v1.UpsertAccessListRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListRequest} returns this
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.prototype.clearAccessList = function() {
  return this.setAccessList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.UpsertAccessListRequest.prototype.hasAccessList = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.DeleteAccessListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListRequest}
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.DeleteAccessListRequest;
  return proto.teleport.accesslist.v1.DeleteAccessListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListRequest}
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.DeleteAccessListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListRequest} returns this
 */
proto.teleport.accesslist.v1.DeleteAccessListRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListsRequest}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.DeleteAllAccessListsRequest;
  return proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListsRequest}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAllAccessListsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetAccessListsToReviewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsToReviewRequest}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetAccessListsToReviewRequest;
  return proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsToReviewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsToReviewRequest}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsToReviewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessListsList: jspb.Message.toObjectList(msg.getAccessListsList(),
    teleport_accesslist_v1_accesslist_pb.AccessList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetAccessListsToReviewResponse;
  return proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.addAccessLists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessListsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccessList access_lists = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.AccessList>}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.prototype.getAccessListsList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.AccessList>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.AccessList>} value
 * @return {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse} returns this
*/
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.prototype.setAccessListsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.AccessList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.prototype.addAccessLists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.AccessList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.GetAccessListsToReviewResponse} returns this
 */
proto.teleport.accesslist.v1.GetAccessListsToReviewResponse.prototype.clearAccessListsList = function() {
  return this.setAccessListsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.CountAccessListMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.CountAccessListMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessListName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.CountAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.CountAccessListMembersRequest;
  return proto.teleport.accesslist.v1.CountAccessListMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.CountAccessListMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.CountAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessListName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.CountAccessListMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.CountAccessListMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessListName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string access_list_name = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.prototype.getAccessListName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.CountAccessListMembersRequest} returns this
 */
proto.teleport.accesslist.v1.CountAccessListMembersRequest.prototype.setAccessListName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.CountAccessListMembersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.CountAccessListMembersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.CountAccessListMembersResponse}
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.CountAccessListMembersResponse;
  return proto.teleport.accesslist.v1.CountAccessListMembersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.CountAccessListMembersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.CountAccessListMembersResponse}
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.CountAccessListMembersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.CountAccessListMembersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 count = 1;
 * @return {number}
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.teleport.accesslist.v1.CountAccessListMembersResponse} returns this
 */
proto.teleport.accesslist.v1.CountAccessListMembersResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAccessListMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAccessListMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accessList: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAccessListMembersRequest;
  return proto.teleport.accesslist.v1.ListAccessListMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAccessListMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAccessListMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAccessListMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string access_list = 3;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListMembersRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAccessListMembersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAccessListMembersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    teleport_accesslist_v1_accesslist_pb.Member.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersResponse}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAccessListMembersResponse;
  return proto.teleport.accesslist.v1.ListAccessListMembersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAccessListMembersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersResponse}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.Member;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Member.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAccessListMembersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAccessListMembersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.Member.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Member members = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.Member>}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.Member>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.Member, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.Member>} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersResponse} returns this
*/
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.Member=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.Member, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersResponse} returns this
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListMembersResponse} returns this
 */
proto.teleport.accesslist.v1.ListAccessListMembersResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAllAccessListMembersRequest;
  return proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersRequest} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    teleport_accesslist_v1_accesslist_pb.Member.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAllAccessListMembersResponse;
  return proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.Member;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Member.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.Member.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Member members = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.Member>}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.Member>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.Member, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.Member>} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse} returns this
*/
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.Member=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.Member, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListMembersResponse} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListMembersResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: (f = msg.getAccessList()) && teleport_accesslist_v1_accesslist_pb.AccessList.toObject(includeInstance, f),
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    teleport_accesslist_v1_accesslist_pb.Member.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest;
  return proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.setAccessList(value);
      break;
    case 2:
      var value = new teleport_accesslist_v1_accesslist_pb.Member;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Member.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      teleport_accesslist_v1_accesslist_pb.Member.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccessList access_list = 1;
 * @return {?proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.getAccessList = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessList} */ (
    jspb.Message.getWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessList|undefined} value
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} returns this
*/
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} returns this
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.clearAccessList = function() {
  return this.setAccessList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.hasAccessList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Member members = 2;
 * @return {!Array<!proto.teleport.accesslist.v1.Member>}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.Member>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.Member, 2));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.Member>} value
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} returns this
*/
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.Member=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.teleport.accesslist.v1.Member, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest} returns this
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersRequest.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: (f = msg.getAccessList()) && teleport_accesslist_v1_accesslist_pb.AccessList.toObject(includeInstance, f),
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    teleport_accesslist_v1_accesslist_pb.Member.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse;
  return proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.setAccessList(value);
      break;
    case 2:
      var value = new teleport_accesslist_v1_accesslist_pb.Member;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Member.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      teleport_accesslist_v1_accesslist_pb.Member.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccessList access_list = 1;
 * @return {?proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.getAccessList = function() {
  return /** @type{?proto.teleport.accesslist.v1.AccessList} */ (
    jspb.Message.getWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {?proto.teleport.accesslist.v1.AccessList|undefined} value
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} returns this
*/
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.setAccessList = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} returns this
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.clearAccessList = function() {
  return this.setAccessList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.hasAccessList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Member members = 2;
 * @return {!Array<!proto.teleport.accesslist.v1.Member>}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.Member>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.Member, 2));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.Member>} value
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} returns this
*/
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.Member=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.teleport.accesslist.v1.Member, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse} returns this
 */
proto.teleport.accesslist.v1.UpsertAccessListWithMembersResponse.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetAccessListMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetAccessListMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: jspb.Message.getFieldWithDefault(msg, 1, ""),
    memberName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetAccessListMemberRequest}
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetAccessListMemberRequest;
  return proto.teleport.accesslist.v1.GetAccessListMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetAccessListMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetAccessListMemberRequest}
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemberName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetAccessListMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetAccessListMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMemberName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string access_list = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.GetAccessListMemberRequest} returns this
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string member_name = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.prototype.getMemberName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.GetAccessListMemberRequest} returns this
 */
proto.teleport.accesslist.v1.GetAccessListMemberRequest.prototype.setMemberName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    member: (f = msg.getMember()) && teleport_accesslist_v1_accesslist_pb.Member.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest}
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.UpsertAccessListMemberRequest;
  return proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest}
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new teleport_accesslist_v1_accesslist_pb.Member;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Member.deserializeBinaryFromReader);
      msg.setMember(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMember();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      teleport_accesslist_v1_accesslist_pb.Member.serializeBinaryToWriter
    );
  }
};


/**
 * optional Member member = 4;
 * @return {?proto.teleport.accesslist.v1.Member}
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.prototype.getMember = function() {
  return /** @type{?proto.teleport.accesslist.v1.Member} */ (
    jspb.Message.getWrapperField(this, teleport_accesslist_v1_accesslist_pb.Member, 4));
};


/**
 * @param {?proto.teleport.accesslist.v1.Member|undefined} value
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest} returns this
*/
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.prototype.setMember = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.UpsertAccessListMemberRequest} returns this
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.prototype.clearMember = function() {
  return this.setMember(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.UpsertAccessListMemberRequest.prototype.hasMember = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: jspb.Message.getFieldWithDefault(msg, 1, ""),
    memberName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest}
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.DeleteAccessListMemberRequest;
  return proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest}
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemberName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMemberName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string access_list = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest} returns this
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string member_name = 3;
 * @return {string}
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.prototype.getMemberName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListMemberRequest} returns this
 */
proto.teleport.accesslist.v1.DeleteAccessListMemberRequest.prototype.setMemberName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest;
  return proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string access_list = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest} returns this
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersForAccessListRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest;
  return proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAllAccessListMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAccessListReviewsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessList: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAccessListReviewsRequest;
  return proto.teleport.accesslist.v1.ListAccessListReviewsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAccessListReviewsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string access_list = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.getAccessList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.setAccessList = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_token = 3;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAccessListReviewsRequest.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAccessListReviewsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reviewsList: jspb.Message.toObjectList(msg.getReviewsList(),
    teleport_accesslist_v1_accesslist_pb.Review.toObject, includeInstance),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAccessListReviewsResponse;
  return proto.teleport.accesslist.v1.ListAccessListReviewsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.Review;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Review.deserializeBinaryFromReader);
      msg.addReviews(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAccessListReviewsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.Review.serializeBinaryToWriter
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Review reviews = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.Review>}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.getReviewsList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.Review>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.Review, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.Review>} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse} returns this
*/
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.setReviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.Review=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.Review}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.addReviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.Review, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse} returns this
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.clearReviewsList = function() {
  return this.setReviewsList([]);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAccessListReviewsResponse} returns this
 */
proto.teleport.accesslist.v1.ListAccessListReviewsResponse.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest;
  return proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsRequest.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reviewsList: jspb.Message.toObjectList(msg.getReviewsList(),
    teleport_accesslist_v1_accesslist_pb.Review.toObject, includeInstance),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse;
  return proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.Review;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Review.deserializeBinaryFromReader);
      msg.addReviews(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.Review.serializeBinaryToWriter
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Review reviews = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.Review>}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.getReviewsList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.Review>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.Review, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.Review>} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse} returns this
*/
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.setReviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.Review=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.Review}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.addReviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.Review, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.clearReviewsList = function() {
  return this.setReviewsList([]);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse} returns this
 */
proto.teleport.accesslist.v1.ListAllAccessListReviewsResponse.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.CreateAccessListReviewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    review: (f = msg.getReview()) && teleport_accesslist_v1_accesslist_pb.Review.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.CreateAccessListReviewRequest;
  return proto.teleport.accesslist.v1.CreateAccessListReviewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.Review;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.Review.deserializeBinaryFromReader);
      msg.setReview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.CreateAccessListReviewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReview();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.Review.serializeBinaryToWriter
    );
  }
};


/**
 * optional Review review = 1;
 * @return {?proto.teleport.accesslist.v1.Review}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.prototype.getReview = function() {
  return /** @type{?proto.teleport.accesslist.v1.Review} */ (
    jspb.Message.getWrapperField(this, teleport_accesslist_v1_accesslist_pb.Review, 1));
};


/**
 * @param {?proto.teleport.accesslist.v1.Review|undefined} value
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest} returns this
*/
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.prototype.setReview = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewRequest} returns this
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.prototype.clearReview = function() {
  return this.setReview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewRequest.prototype.hasReview = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.CreateAccessListReviewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reviewName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nextAuditDate: (f = msg.getNextAuditDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.CreateAccessListReviewResponse;
  return proto.teleport.accesslist.v1.CreateAccessListReviewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNextAuditDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.CreateAccessListReviewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReviewName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNextAuditDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string review_name = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.getReviewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse} returns this
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.setReviewName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp next_audit_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.getNextAuditDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse} returns this
*/
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.setNextAuditDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.CreateAccessListReviewResponse} returns this
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.clearNextAuditDate = function() {
  return this.setNextAuditDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.CreateAccessListReviewResponse.prototype.hasNextAuditDate = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reviewName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accessListName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest}
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.DeleteAccessListReviewRequest;
  return proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest}
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessListName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReviewName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccessListName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string review_name = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.prototype.getReviewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest} returns this
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.prototype.setReviewName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string access_list_name = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.prototype.getAccessListName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.DeleteAccessListReviewRequest} returns this
 */
proto.teleport.accesslist.v1.DeleteAccessListReviewRequest.prototype.setAccessListName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessRequestPromoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accessListName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessRequestPromoteRequest;
  return proto.teleport.accesslist.v1.AccessRequestPromoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessListName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessRequestPromoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccessListName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest} returns this
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string access_list_name = 2;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.getAccessListName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest} returns this
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.setAccessListName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteRequest} returns this
 */
proto.teleport.accesslist.v1.AccessRequestPromoteRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.AccessRequestPromoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessRequest: (f = msg.getAccessRequest()) && teleport_legacy_types_types_pb.AccessRequestV3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.AccessRequestPromoteResponse;
  return proto.teleport.accesslist.v1.AccessRequestPromoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_legacy_types_types_pb.AccessRequestV3;
      reader.readMessage(value,teleport_legacy_types_types_pb.AccessRequestV3.deserializeBinaryFromReader);
      msg.setAccessRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.AccessRequestPromoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_legacy_types_types_pb.AccessRequestV3.serializeBinaryToWriter
    );
  }
};


/**
 * optional types.AccessRequestV3 access_request = 1;
 * @return {?proto.types.AccessRequestV3}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.prototype.getAccessRequest = function() {
  return /** @type{?proto.types.AccessRequestV3} */ (
    jspb.Message.getWrapperField(this, teleport_legacy_types_types_pb.AccessRequestV3, 1));
};


/**
 * @param {?proto.types.AccessRequestV3|undefined} value
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse} returns this
*/
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.prototype.setAccessRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.accesslist.v1.AccessRequestPromoteResponse} returns this
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.prototype.clearAccessRequest = function() {
  return this.setAccessRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.accesslist.v1.AccessRequestPromoteResponse.prototype.hasAccessRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessRequestId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest;
  return proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string access_request_id = 1;
 * @return {string}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.prototype.getAccessRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest} returns this
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsRequest.prototype.setAccessRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessListsList: jspb.Message.toObjectList(msg.getAccessListsList(),
    teleport_accesslist_v1_accesslist_pb.AccessList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse;
  return proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_accesslist_v1_accesslist_pb.AccessList;
      reader.readMessage(value,teleport_accesslist_v1_accesslist_pb.AccessList.deserializeBinaryFromReader);
      msg.addAccessLists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessListsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      teleport_accesslist_v1_accesslist_pb.AccessList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccessList access_lists = 1;
 * @return {!Array<!proto.teleport.accesslist.v1.AccessList>}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.prototype.getAccessListsList = function() {
  return /** @type{!Array<!proto.teleport.accesslist.v1.AccessList>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_accesslist_v1_accesslist_pb.AccessList, 1));
};


/**
 * @param {!Array<!proto.teleport.accesslist.v1.AccessList>} value
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse} returns this
*/
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.prototype.setAccessListsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.teleport.accesslist.v1.AccessList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.accesslist.v1.AccessList}
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.prototype.addAccessLists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.teleport.accesslist.v1.AccessList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse} returns this
 */
proto.teleport.accesslist.v1.GetSuggestedAccessListsResponse.prototype.clearAccessListsList = function() {
  return this.setAccessListsList([]);
};


goog.object.extend(exports, proto.teleport.accesslist.v1);
