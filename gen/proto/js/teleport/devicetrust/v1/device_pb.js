// source: teleport/devicetrust/v1/device.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var teleport_devicetrust_v1_device_collected_data_pb = require('../../../teleport/devicetrust/v1/device_collected_data_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_device_collected_data_pb);
var teleport_devicetrust_v1_device_enroll_token_pb = require('../../../teleport/devicetrust/v1/device_enroll_token_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_device_enroll_token_pb);
var teleport_devicetrust_v1_device_profile_pb = require('../../../teleport/devicetrust/v1/device_profile_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_device_profile_pb);
var teleport_devicetrust_v1_device_source_pb = require('../../../teleport/devicetrust/v1/device_source_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_device_source_pb);
var teleport_devicetrust_v1_os_type_pb = require('../../../teleport/devicetrust/v1/os_type_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_os_type_pb);
goog.exportSymbol('proto.teleport.devicetrust.v1.Device', null, global);
goog.exportSymbol('proto.teleport.devicetrust.v1.DeviceAttestationType', null, global);
goog.exportSymbol('proto.teleport.devicetrust.v1.DeviceCredential', null, global);
goog.exportSymbol('proto.teleport.devicetrust.v1.DeviceEnrollStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.devicetrust.v1.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.devicetrust.v1.Device.repeatedFields_, null);
};
goog.inherits(proto.teleport.devicetrust.v1.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.devicetrust.v1.Device.displayName = 'proto.teleport.devicetrust.v1.Device';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.devicetrust.v1.DeviceCredential = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.devicetrust.v1.DeviceCredential, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.devicetrust.v1.DeviceCredential.displayName = 'proto.teleport.devicetrust.v1.DeviceCredential';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.devicetrust.v1.Device.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.devicetrust.v1.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.devicetrust.v1.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.devicetrust.v1.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.devicetrust.v1.Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    osType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    assetTag: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateTime: (f = msg.getUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    enrollToken: (f = msg.getEnrollToken()) && teleport_devicetrust_v1_device_enroll_token_pb.DeviceEnrollToken.toObject(includeInstance, f),
    enrollStatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    credential: (f = msg.getCredential()) && proto.teleport.devicetrust.v1.DeviceCredential.toObject(includeInstance, f),
    collectedDataList: jspb.Message.toObjectList(msg.getCollectedDataList(),
    teleport_devicetrust_v1_device_collected_data_pb.DeviceCollectedData.toObject, includeInstance),
    source: (f = msg.getSource()) && teleport_devicetrust_v1_device_source_pb.DeviceSource.toObject(includeInstance, f),
    profile: (f = msg.getProfile()) && teleport_devicetrust_v1_device_profile_pb.DeviceProfile.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.devicetrust.v1.Device}
 */
proto.teleport.devicetrust.v1.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.devicetrust.v1.Device;
  return proto.teleport.devicetrust.v1.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.devicetrust.v1.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.devicetrust.v1.Device}
 */
proto.teleport.devicetrust.v1.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {!proto.teleport.devicetrust.v1.OSType} */ (reader.readEnum());
      msg.setOsType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetTag(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateTime(value);
      break;
    case 7:
      var value = new teleport_devicetrust_v1_device_enroll_token_pb.DeviceEnrollToken;
      reader.readMessage(value,teleport_devicetrust_v1_device_enroll_token_pb.DeviceEnrollToken.deserializeBinaryFromReader);
      msg.setEnrollToken(value);
      break;
    case 8:
      var value = /** @type {!proto.teleport.devicetrust.v1.DeviceEnrollStatus} */ (reader.readEnum());
      msg.setEnrollStatus(value);
      break;
    case 9:
      var value = new proto.teleport.devicetrust.v1.DeviceCredential;
      reader.readMessage(value,proto.teleport.devicetrust.v1.DeviceCredential.deserializeBinaryFromReader);
      msg.setCredential(value);
      break;
    case 10:
      var value = new teleport_devicetrust_v1_device_collected_data_pb.DeviceCollectedData;
      reader.readMessage(value,teleport_devicetrust_v1_device_collected_data_pb.DeviceCollectedData.deserializeBinaryFromReader);
      msg.addCollectedData(value);
      break;
    case 11:
      var value = new teleport_devicetrust_v1_device_source_pb.DeviceSource;
      reader.readMessage(value,teleport_devicetrust_v1_device_source_pb.DeviceSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 12:
      var value = new teleport_devicetrust_v1_device_profile_pb.DeviceProfile;
      reader.readMessage(value,teleport_devicetrust_v1_device_profile_pb.DeviceProfile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.devicetrust.v1.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.devicetrust.v1.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.devicetrust.v1.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.devicetrust.v1.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOsType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAssetTag();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnrollToken();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      teleport_devicetrust_v1_device_enroll_token_pb.DeviceEnrollToken.serializeBinaryToWriter
    );
  }
  f = message.getEnrollStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getCredential();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.teleport.devicetrust.v1.DeviceCredential.serializeBinaryToWriter
    );
  }
  f = message.getCollectedDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      teleport_devicetrust_v1_device_collected_data_pb.DeviceCollectedData.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      teleport_devicetrust_v1_device_source_pb.DeviceSource.serializeBinaryToWriter
    );
  }
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      teleport_devicetrust_v1_device_profile_pb.DeviceProfile.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string api_version = 1;
 * @return {string}
 */
proto.teleport.devicetrust.v1.Device.prototype.getApiVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.setApiVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.teleport.devicetrust.v1.Device.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OSType os_type = 3;
 * @return {!proto.teleport.devicetrust.v1.OSType}
 */
proto.teleport.devicetrust.v1.Device.prototype.getOsType = function() {
  return /** @type {!proto.teleport.devicetrust.v1.OSType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.teleport.devicetrust.v1.OSType} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.setOsType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string asset_tag = 4;
 * @return {string}
 */
proto.teleport.devicetrust.v1.Device.prototype.getAssetTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.setAssetTag = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp create_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.devicetrust.v1.Device.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.Device.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp update_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.devicetrust.v1.Device.prototype.getUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearUpdateTime = function() {
  return this.setUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.Device.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeviceEnrollToken enroll_token = 7;
 * @return {?proto.teleport.devicetrust.v1.DeviceEnrollToken}
 */
proto.teleport.devicetrust.v1.Device.prototype.getEnrollToken = function() {
  return /** @type{?proto.teleport.devicetrust.v1.DeviceEnrollToken} */ (
    jspb.Message.getWrapperField(this, teleport_devicetrust_v1_device_enroll_token_pb.DeviceEnrollToken, 7));
};


/**
 * @param {?proto.teleport.devicetrust.v1.DeviceEnrollToken|undefined} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setEnrollToken = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearEnrollToken = function() {
  return this.setEnrollToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.Device.prototype.hasEnrollToken = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DeviceEnrollStatus enroll_status = 8;
 * @return {!proto.teleport.devicetrust.v1.DeviceEnrollStatus}
 */
proto.teleport.devicetrust.v1.Device.prototype.getEnrollStatus = function() {
  return /** @type {!proto.teleport.devicetrust.v1.DeviceEnrollStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.teleport.devicetrust.v1.DeviceEnrollStatus} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.setEnrollStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional DeviceCredential credential = 9;
 * @return {?proto.teleport.devicetrust.v1.DeviceCredential}
 */
proto.teleport.devicetrust.v1.Device.prototype.getCredential = function() {
  return /** @type{?proto.teleport.devicetrust.v1.DeviceCredential} */ (
    jspb.Message.getWrapperField(this, proto.teleport.devicetrust.v1.DeviceCredential, 9));
};


/**
 * @param {?proto.teleport.devicetrust.v1.DeviceCredential|undefined} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setCredential = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearCredential = function() {
  return this.setCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.Device.prototype.hasCredential = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated DeviceCollectedData collected_data = 10;
 * @return {!Array<!proto.teleport.devicetrust.v1.DeviceCollectedData>}
 */
proto.teleport.devicetrust.v1.Device.prototype.getCollectedDataList = function() {
  return /** @type{!Array<!proto.teleport.devicetrust.v1.DeviceCollectedData>} */ (
    jspb.Message.getRepeatedWrapperField(this, teleport_devicetrust_v1_device_collected_data_pb.DeviceCollectedData, 10));
};


/**
 * @param {!Array<!proto.teleport.devicetrust.v1.DeviceCollectedData>} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setCollectedDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.teleport.devicetrust.v1.DeviceCollectedData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData}
 */
proto.teleport.devicetrust.v1.Device.prototype.addCollectedData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.teleport.devicetrust.v1.DeviceCollectedData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearCollectedDataList = function() {
  return this.setCollectedDataList([]);
};


/**
 * optional DeviceSource source = 11;
 * @return {?proto.teleport.devicetrust.v1.DeviceSource}
 */
proto.teleport.devicetrust.v1.Device.prototype.getSource = function() {
  return /** @type{?proto.teleport.devicetrust.v1.DeviceSource} */ (
    jspb.Message.getWrapperField(this, teleport_devicetrust_v1_device_source_pb.DeviceSource, 11));
};


/**
 * @param {?proto.teleport.devicetrust.v1.DeviceSource|undefined} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.Device.prototype.hasSource = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DeviceProfile profile = 12;
 * @return {?proto.teleport.devicetrust.v1.DeviceProfile}
 */
proto.teleport.devicetrust.v1.Device.prototype.getProfile = function() {
  return /** @type{?proto.teleport.devicetrust.v1.DeviceProfile} */ (
    jspb.Message.getWrapperField(this, teleport_devicetrust_v1_device_profile_pb.DeviceProfile, 12));
};


/**
 * @param {?proto.teleport.devicetrust.v1.DeviceProfile|undefined} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
*/
proto.teleport.devicetrust.v1.Device.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.Device.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string owner = 13;
 * @return {string}
 */
proto.teleport.devicetrust.v1.Device.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.Device} returns this
 */
proto.teleport.devicetrust.v1.Device.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.devicetrust.v1.DeviceCredential.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.devicetrust.v1.DeviceCredential} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.devicetrust.v1.DeviceCredential.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    publicKeyDer: msg.getPublicKeyDer_asB64(),
    deviceAttestationType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tpmEkcertSerial: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tpmAkPublic: msg.getTpmAkPublic_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential}
 */
proto.teleport.devicetrust.v1.DeviceCredential.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.devicetrust.v1.DeviceCredential;
  return proto.teleport.devicetrust.v1.DeviceCredential.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.devicetrust.v1.DeviceCredential} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential}
 */
proto.teleport.devicetrust.v1.DeviceCredential.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPublicKeyDer(value);
      break;
    case 3:
      var value = /** @type {!proto.teleport.devicetrust.v1.DeviceAttestationType} */ (reader.readEnum());
      msg.setDeviceAttestationType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTpmEkcertSerial(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTpmAkPublic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.devicetrust.v1.DeviceCredential.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.devicetrust.v1.DeviceCredential} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.devicetrust.v1.DeviceCredential.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPublicKeyDer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getDeviceAttestationType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTpmEkcertSerial();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTpmAkPublic_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential} returns this
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes public_key_der = 2;
 * @return {!(string|Uint8Array)}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getPublicKeyDer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes public_key_der = 2;
 * This is a type-conversion wrapper around `getPublicKeyDer()`
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getPublicKeyDer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPublicKeyDer()));
};


/**
 * optional bytes public_key_der = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPublicKeyDer()`
 * @return {!Uint8Array}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getPublicKeyDer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPublicKeyDer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential} returns this
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.setPublicKeyDer = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional DeviceAttestationType device_attestation_type = 3;
 * @return {!proto.teleport.devicetrust.v1.DeviceAttestationType}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getDeviceAttestationType = function() {
  return /** @type {!proto.teleport.devicetrust.v1.DeviceAttestationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.teleport.devicetrust.v1.DeviceAttestationType} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential} returns this
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.setDeviceAttestationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string tpm_ekcert_serial = 4;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getTpmEkcertSerial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential} returns this
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.setTpmEkcertSerial = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes tpm_ak_public = 5;
 * @return {!(string|Uint8Array)}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getTpmAkPublic = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes tpm_ak_public = 5;
 * This is a type-conversion wrapper around `getTpmAkPublic()`
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getTpmAkPublic_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTpmAkPublic()));
};


/**
 * optional bytes tpm_ak_public = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTpmAkPublic()`
 * @return {!Uint8Array}
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.getTpmAkPublic_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTpmAkPublic()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCredential} returns this
 */
proto.teleport.devicetrust.v1.DeviceCredential.prototype.setTpmAkPublic = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.teleport.devicetrust.v1.DeviceAttestationType = {
  DEVICE_ATTESTATION_TYPE_UNSPECIFIED: 0,
  DEVICE_ATTESTATION_TYPE_TPM_EKPUB: 1,
  DEVICE_ATTESTATION_TYPE_TPM_EKCERT: 2,
  DEVICE_ATTESTATION_TYPE_TPM_EKCERT_TRUSTED: 3
};

/**
 * @enum {number}
 */
proto.teleport.devicetrust.v1.DeviceEnrollStatus = {
  DEVICE_ENROLL_STATUS_UNSPECIFIED: 0,
  DEVICE_ENROLL_STATUS_NOT_ENROLLED: 1,
  DEVICE_ENROLL_STATUS_ENROLLED: 2
};

goog.object.extend(exports, proto.teleport.devicetrust.v1);
