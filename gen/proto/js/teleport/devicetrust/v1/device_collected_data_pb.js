// source: teleport/devicetrust/v1/device_collected_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var teleport_devicetrust_v1_os_type_pb = require('../../../teleport/devicetrust/v1/os_type_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_os_type_pb);
var teleport_devicetrust_v1_tpm_pb = require('../../../teleport/devicetrust/v1/tpm_pb.js');
goog.object.extend(proto, teleport_devicetrust_v1_tpm_pb);
goog.exportSymbol('proto.teleport.devicetrust.v1.DeviceCollectedData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.devicetrust.v1.DeviceCollectedData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.devicetrust.v1.DeviceCollectedData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.devicetrust.v1.DeviceCollectedData.displayName = 'proto.teleport.devicetrust.v1.DeviceCollectedData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.devicetrust.v1.DeviceCollectedData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.devicetrust.v1.DeviceCollectedData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectTime: (f = msg.getCollectTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    recordTime: (f = msg.getRecordTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    osType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    serialNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    modelIdentifier: jspb.Message.getFieldWithDefault(msg, 5, ""),
    osVersion: jspb.Message.getFieldWithDefault(msg, 6, ""),
    osBuild: jspb.Message.getFieldWithDefault(msg, 7, ""),
    osUsername: jspb.Message.getFieldWithDefault(msg, 8, ""),
    jamfBinaryVersion: jspb.Message.getFieldWithDefault(msg, 9, ""),
    macosEnrollmentProfiles: jspb.Message.getFieldWithDefault(msg, 10, ""),
    reportedAssetTag: jspb.Message.getFieldWithDefault(msg, 11, ""),
    systemSerialNumber: jspb.Message.getFieldWithDefault(msg, 12, ""),
    baseBoardSerialNumber: jspb.Message.getFieldWithDefault(msg, 13, ""),
    tpmPlatformAttestation: (f = msg.getTpmPlatformAttestation()) && teleport_devicetrust_v1_tpm_pb.TPMPlatformAttestation.toObject(includeInstance, f),
    osId: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.devicetrust.v1.DeviceCollectedData;
  return proto.teleport.devicetrust.v1.DeviceCollectedData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.devicetrust.v1.DeviceCollectedData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCollectTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRecordTime(value);
      break;
    case 3:
      var value = /** @type {!proto.teleport.devicetrust.v1.OSType} */ (reader.readEnum());
      msg.setOsType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialNumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelIdentifier(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsVersion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsBuild(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsUsername(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setJamfBinaryVersion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMacosEnrollmentProfiles(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportedAssetTag(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemSerialNumber(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseBoardSerialNumber(value);
      break;
    case 14:
      var value = new teleport_devicetrust_v1_tpm_pb.TPMPlatformAttestation;
      reader.readMessage(value,teleport_devicetrust_v1_tpm_pb.TPMPlatformAttestation.deserializeBinaryFromReader);
      msg.setTpmPlatformAttestation(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.devicetrust.v1.DeviceCollectedData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.devicetrust.v1.DeviceCollectedData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRecordTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOsType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSerialNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getModelIdentifier();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOsVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOsBuild();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOsUsername();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getJamfBinaryVersion();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMacosEnrollmentProfiles();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getReportedAssetTag();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSystemSerialNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBaseBoardSerialNumber();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTpmPlatformAttestation();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      teleport_devicetrust_v1_tpm_pb.TPMPlatformAttestation.serializeBinaryToWriter
    );
  }
  f = message.getOsId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp collect_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getCollectTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
*/
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setCollectTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.clearCollectTime = function() {
  return this.setCollectTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.hasCollectTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp record_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getRecordTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
*/
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setRecordTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.clearRecordTime = function() {
  return this.setRecordTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.hasRecordTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OSType os_type = 3;
 * @return {!proto.teleport.devicetrust.v1.OSType}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getOsType = function() {
  return /** @type {!proto.teleport.devicetrust.v1.OSType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.teleport.devicetrust.v1.OSType} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setOsType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string serial_number = 4;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getSerialNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setSerialNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string model_identifier = 5;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getModelIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setModelIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string os_version = 6;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getOsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setOsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string os_build = 7;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getOsBuild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setOsBuild = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string os_username = 8;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getOsUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setOsUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string jamf_binary_version = 9;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getJamfBinaryVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setJamfBinaryVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string macos_enrollment_profiles = 10;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getMacosEnrollmentProfiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setMacosEnrollmentProfiles = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string reported_asset_tag = 11;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getReportedAssetTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setReportedAssetTag = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string system_serial_number = 12;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getSystemSerialNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setSystemSerialNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string base_board_serial_number = 13;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getBaseBoardSerialNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setBaseBoardSerialNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional TPMPlatformAttestation tpm_platform_attestation = 14;
 * @return {?proto.teleport.devicetrust.v1.TPMPlatformAttestation}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getTpmPlatformAttestation = function() {
  return /** @type{?proto.teleport.devicetrust.v1.TPMPlatformAttestation} */ (
    jspb.Message.getWrapperField(this, teleport_devicetrust_v1_tpm_pb.TPMPlatformAttestation, 14));
};


/**
 * @param {?proto.teleport.devicetrust.v1.TPMPlatformAttestation|undefined} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
*/
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setTpmPlatformAttestation = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.clearTpmPlatformAttestation = function() {
  return this.setTpmPlatformAttestation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.hasTpmPlatformAttestation = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string os_id = 15;
 * @return {string}
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.getOsId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.devicetrust.v1.DeviceCollectedData} returns this
 */
proto.teleport.devicetrust.v1.DeviceCollectedData.prototype.setOsId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


goog.object.extend(exports, proto.teleport.devicetrust.v1);
