// source: teleport/userpreferences/v1/userpreferences.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var teleport_userpreferences_v1_assist_pb = require('../../../teleport/userpreferences/v1/assist_pb.js');
goog.object.extend(proto, teleport_userpreferences_v1_assist_pb);
var teleport_userpreferences_v1_cluster_preferences_pb = require('../../../teleport/userpreferences/v1/cluster_preferences_pb.js');
goog.object.extend(proto, teleport_userpreferences_v1_cluster_preferences_pb);
var teleport_userpreferences_v1_onboard_pb = require('../../../teleport/userpreferences/v1/onboard_pb.js');
goog.object.extend(proto, teleport_userpreferences_v1_onboard_pb);
var teleport_userpreferences_v1_theme_pb = require('../../../teleport/userpreferences/v1/theme_pb.js');
goog.object.extend(proto, teleport_userpreferences_v1_theme_pb);
var teleport_userpreferences_v1_unified_resource_preferences_pb = require('../../../teleport/userpreferences/v1/unified_resource_preferences_pb.js');
goog.object.extend(proto, teleport_userpreferences_v1_unified_resource_preferences_pb);
goog.exportSymbol('proto.teleport.userpreferences.v1.GetUserPreferencesRequest', null, global);
goog.exportSymbol('proto.teleport.userpreferences.v1.GetUserPreferencesResponse', null, global);
goog.exportSymbol('proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest', null, global);
goog.exportSymbol('proto.teleport.userpreferences.v1.UserPreferences', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.userpreferences.v1.UserPreferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.userpreferences.v1.UserPreferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.userpreferences.v1.UserPreferences.displayName = 'proto.teleport.userpreferences.v1.UserPreferences';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.userpreferences.v1.GetUserPreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.userpreferences.v1.GetUserPreferencesRequest.displayName = 'proto.teleport.userpreferences.v1.GetUserPreferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.userpreferences.v1.GetUserPreferencesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.userpreferences.v1.GetUserPreferencesResponse.displayName = 'proto.teleport.userpreferences.v1.GetUserPreferencesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.displayName = 'proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.userpreferences.v1.UserPreferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.userpreferences.v1.UserPreferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.UserPreferences.toObject = function(includeInstance, msg) {
  var f, obj = {
    assist: (f = msg.getAssist()) && teleport_userpreferences_v1_assist_pb.AssistUserPreferences.toObject(includeInstance, f),
    theme: jspb.Message.getFieldWithDefault(msg, 2, 0),
    onboard: (f = msg.getOnboard()) && teleport_userpreferences_v1_onboard_pb.OnboardUserPreferences.toObject(includeInstance, f),
    clusterPreferences: (f = msg.getClusterPreferences()) && teleport_userpreferences_v1_cluster_preferences_pb.ClusterUserPreferences.toObject(includeInstance, f),
    unifiedResourcePreferences: (f = msg.getUnifiedResourcePreferences()) && teleport_userpreferences_v1_unified_resource_preferences_pb.UnifiedResourcePreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.userpreferences.v1.UserPreferences}
 */
proto.teleport.userpreferences.v1.UserPreferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.userpreferences.v1.UserPreferences;
  return proto.teleport.userpreferences.v1.UserPreferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.userpreferences.v1.UserPreferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.userpreferences.v1.UserPreferences}
 */
proto.teleport.userpreferences.v1.UserPreferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new teleport_userpreferences_v1_assist_pb.AssistUserPreferences;
      reader.readMessage(value,teleport_userpreferences_v1_assist_pb.AssistUserPreferences.deserializeBinaryFromReader);
      msg.setAssist(value);
      break;
    case 2:
      var value = /** @type {!proto.teleport.userpreferences.v1.Theme} */ (reader.readEnum());
      msg.setTheme(value);
      break;
    case 3:
      var value = new teleport_userpreferences_v1_onboard_pb.OnboardUserPreferences;
      reader.readMessage(value,teleport_userpreferences_v1_onboard_pb.OnboardUserPreferences.deserializeBinaryFromReader);
      msg.setOnboard(value);
      break;
    case 4:
      var value = new teleport_userpreferences_v1_cluster_preferences_pb.ClusterUserPreferences;
      reader.readMessage(value,teleport_userpreferences_v1_cluster_preferences_pb.ClusterUserPreferences.deserializeBinaryFromReader);
      msg.setClusterPreferences(value);
      break;
    case 5:
      var value = new teleport_userpreferences_v1_unified_resource_preferences_pb.UnifiedResourcePreferences;
      reader.readMessage(value,teleport_userpreferences_v1_unified_resource_preferences_pb.UnifiedResourcePreferences.deserializeBinaryFromReader);
      msg.setUnifiedResourcePreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.userpreferences.v1.UserPreferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.userpreferences.v1.UserPreferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.UserPreferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      teleport_userpreferences_v1_assist_pb.AssistUserPreferences.serializeBinaryToWriter
    );
  }
  f = message.getTheme();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOnboard();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      teleport_userpreferences_v1_onboard_pb.OnboardUserPreferences.serializeBinaryToWriter
    );
  }
  f = message.getClusterPreferences();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      teleport_userpreferences_v1_cluster_preferences_pb.ClusterUserPreferences.serializeBinaryToWriter
    );
  }
  f = message.getUnifiedResourcePreferences();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      teleport_userpreferences_v1_unified_resource_preferences_pb.UnifiedResourcePreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional AssistUserPreferences assist = 1;
 * @return {?proto.teleport.userpreferences.v1.AssistUserPreferences}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.getAssist = function() {
  return /** @type{?proto.teleport.userpreferences.v1.AssistUserPreferences} */ (
    jspb.Message.getWrapperField(this, teleport_userpreferences_v1_assist_pb.AssistUserPreferences, 1));
};


/**
 * @param {?proto.teleport.userpreferences.v1.AssistUserPreferences|undefined} value
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
*/
proto.teleport.userpreferences.v1.UserPreferences.prototype.setAssist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.clearAssist = function() {
  return this.setAssist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.hasAssist = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Theme theme = 2;
 * @return {!proto.teleport.userpreferences.v1.Theme}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.getTheme = function() {
  return /** @type {!proto.teleport.userpreferences.v1.Theme} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.teleport.userpreferences.v1.Theme} value
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.setTheme = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional OnboardUserPreferences onboard = 3;
 * @return {?proto.teleport.userpreferences.v1.OnboardUserPreferences}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.getOnboard = function() {
  return /** @type{?proto.teleport.userpreferences.v1.OnboardUserPreferences} */ (
    jspb.Message.getWrapperField(this, teleport_userpreferences_v1_onboard_pb.OnboardUserPreferences, 3));
};


/**
 * @param {?proto.teleport.userpreferences.v1.OnboardUserPreferences|undefined} value
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
*/
proto.teleport.userpreferences.v1.UserPreferences.prototype.setOnboard = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.clearOnboard = function() {
  return this.setOnboard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.hasOnboard = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ClusterUserPreferences cluster_preferences = 4;
 * @return {?proto.teleport.userpreferences.v1.ClusterUserPreferences}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.getClusterPreferences = function() {
  return /** @type{?proto.teleport.userpreferences.v1.ClusterUserPreferences} */ (
    jspb.Message.getWrapperField(this, teleport_userpreferences_v1_cluster_preferences_pb.ClusterUserPreferences, 4));
};


/**
 * @param {?proto.teleport.userpreferences.v1.ClusterUserPreferences|undefined} value
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
*/
proto.teleport.userpreferences.v1.UserPreferences.prototype.setClusterPreferences = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.clearClusterPreferences = function() {
  return this.setClusterPreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.hasClusterPreferences = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UnifiedResourcePreferences unified_resource_preferences = 5;
 * @return {?proto.teleport.userpreferences.v1.UnifiedResourcePreferences}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.getUnifiedResourcePreferences = function() {
  return /** @type{?proto.teleport.userpreferences.v1.UnifiedResourcePreferences} */ (
    jspb.Message.getWrapperField(this, teleport_userpreferences_v1_unified_resource_preferences_pb.UnifiedResourcePreferences, 5));
};


/**
 * @param {?proto.teleport.userpreferences.v1.UnifiedResourcePreferences|undefined} value
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
*/
proto.teleport.userpreferences.v1.UserPreferences.prototype.setUnifiedResourcePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.userpreferences.v1.UserPreferences} returns this
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.clearUnifiedResourcePreferences = function() {
  return this.setUnifiedResourcePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.userpreferences.v1.UserPreferences.prototype.hasUnifiedResourcePreferences = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.userpreferences.v1.GetUserPreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.userpreferences.v1.GetUserPreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.userpreferences.v1.GetUserPreferencesRequest}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.userpreferences.v1.GetUserPreferencesRequest;
  return proto.teleport.userpreferences.v1.GetUserPreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.userpreferences.v1.GetUserPreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.userpreferences.v1.GetUserPreferencesRequest}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.userpreferences.v1.GetUserPreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.userpreferences.v1.GetUserPreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.GetUserPreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.userpreferences.v1.GetUserPreferencesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    preferences: (f = msg.getPreferences()) && proto.teleport.userpreferences.v1.UserPreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.userpreferences.v1.GetUserPreferencesResponse;
  return proto.teleport.userpreferences.v1.GetUserPreferencesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.teleport.userpreferences.v1.UserPreferences;
      reader.readMessage(value,proto.teleport.userpreferences.v1.UserPreferences.deserializeBinaryFromReader);
      msg.setPreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.userpreferences.v1.GetUserPreferencesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.teleport.userpreferences.v1.UserPreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserPreferences preferences = 1;
 * @return {?proto.teleport.userpreferences.v1.UserPreferences}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.prototype.getPreferences = function() {
  return /** @type{?proto.teleport.userpreferences.v1.UserPreferences} */ (
    jspb.Message.getWrapperField(this, proto.teleport.userpreferences.v1.UserPreferences, 1));
};


/**
 * @param {?proto.teleport.userpreferences.v1.UserPreferences|undefined} value
 * @return {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse} returns this
*/
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.prototype.setPreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.userpreferences.v1.GetUserPreferencesResponse} returns this
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.prototype.clearPreferences = function() {
  return this.setPreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.userpreferences.v1.GetUserPreferencesResponse.prototype.hasPreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    preferences: (f = msg.getPreferences()) && proto.teleport.userpreferences.v1.UserPreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest}
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest;
  return proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest}
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.teleport.userpreferences.v1.UserPreferences;
      reader.readMessage(value,proto.teleport.userpreferences.v1.UserPreferences.deserializeBinaryFromReader);
      msg.setPreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.teleport.userpreferences.v1.UserPreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserPreferences preferences = 1;
 * @return {?proto.teleport.userpreferences.v1.UserPreferences}
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.prototype.getPreferences = function() {
  return /** @type{?proto.teleport.userpreferences.v1.UserPreferences} */ (
    jspb.Message.getWrapperField(this, proto.teleport.userpreferences.v1.UserPreferences, 1));
};


/**
 * @param {?proto.teleport.userpreferences.v1.UserPreferences|undefined} value
 * @return {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest} returns this
*/
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.prototype.setPreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest} returns this
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.prototype.clearPreferences = function() {
  return this.setPreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.userpreferences.v1.UpsertUserPreferencesRequest.prototype.hasPreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.teleport.userpreferences.v1);
