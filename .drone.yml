---
kind: pipeline
type: kubernetes
name: test

trigger:
  branch:
    - master
    - branch/*
  event:
    exclude:
      - promote
      - rollback

workspace:
  path: /go

clone:
  disable: true

steps:
  - name: Check out code
    image: golang:1.13.2
    environment:
      GITHUB_PRIVATE_KEY:
        from_secret: GITHUB_PRIVATE_KEY
    commands:
      - mkdir -p /go/src/github.com/gravitational/teleport
      - cd /go/src/github.com/gravitational/teleport
      - git clone https://github.com/gravitational/teleport.git .
      - git checkout $DRONE_COMMIT
      - echo $DRONE_SOURCE_BRANCH > /go/.drone_source_branch.txt
      # fetch enterprise submodules
      - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
      - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
      - make init-submodules-e
      - rm -f /root/.ssh/id_rsa

  - name: Restore cache
    image: meltwater/drone-cache
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
    settings:
      restore: true
      bucket:
        from_secret: AWS_S3_BUCKET
      archive_format: gzip
      cache_key: '{{checksum ".drone_source_branch.txt"}}'
      region: us-west-2
      mount:
        - /go/cache
        - /go/pkg/mod

  - name: Run linter
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - docker run --rm=true -e GOCACHE=/go/cache -v /go/cache:/go/cache -v /go/src/github.com/gravitational/teleport:/go/src/github.com/gravitational/teleport -v /tmp:/tmp -w /go/src/github.com/gravitational/teleport -h buildbox -u $(id -u):$(id -g) -t quay.io/gravitational/teleport-buildbox:go1.13.2 /bin/bash -c "make -C /go/src/github.com/gravitational/teleport lint"

  - name: Run unit tests
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - docker run --rm=true -e GOCACHE=/go/cache -v /go/cache:/go/cache -v /go/src/github.com/gravitational/teleport:/go/src/github.com/gravitational/teleport -v /tmp:/tmp -w /go/src/github.com/gravitational/teleport -h buildbox -u $(id -u):$(id -g) -t quay.io/gravitational/teleport-buildbox:go1.13.2 /bin/bash -c "make -C /go/src/github.com/gravitational/teleport FLAGS='-cover -count 1' test"

  - name: Run integration tests
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - docker run --rm=true -e GOCACHE=/go/cache -v /go/cache:/go/cache -v /go/src/github.com/gravitational/teleport:/go/src/github.com/gravitational/teleport -v /tmp:/tmp -w /go/src/github.com/gravitational/teleport -h buildbox -u $(id -u):$(id -g) -t quay.io/gravitational/teleport-buildbox:go1.13.2 /bin/bash -c "make -C /go/src/github.com/gravitational/teleport FLAGS='-cover -count 1' integration"

  - name: Save cache
    image: meltwater/drone-cache
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
    settings:
      rebuild: true
      bucket:
        from_secret: AWS_S3_BUCKET
      archive_format: gzip
      cache_key: '{{checksum ".drone_source_branch.txt"}}'
      region: us-west-2
      mount:
        - /go/cache
        - /go/pkg/mod

services:
  - name: Start Docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

---
kind: pipeline
type: kubernetes
name: build

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/v*

depends_on:
  - test

workspace:
  path: /go/src/github.com/gravitational/teleport

clone:
  disable: true

steps:
  - name: Build OSS release artifacts
    image: golang:1.13.2
    commands:
      - git clone https://github.com/gravitational/teleport.git .
      - git fetch --all --tags
      - git checkout $DRONE_TAG
      - mkdir -p build/e
      - make release
      - find . -maxdepth 1 -iname "*.tar.gz" -print -exec cp {} build/ \;
      - find e/ -maxdepth 1 -iname "*.tar.gz" -print -exec cp {} build/e/ \;
      - cd build
      - for FILE in *.tar.gz; do sha256sum $FILE > $FILE.sha256; done
      - cd e
      - ls -l .
      - for FILE in *.tar.gz; do sha256sum $FILE > $FILE.sha256; done
      - ls -l .

  - name: Upload to S3
    image: plugins/s3
    settings:
      bucket:
        from_secret: AWS_S3_BUCKET
      access_key:
        from_secret: AWS_ACCESS_KEY_ID
      secret_key:
        from_secret: AWS_SECRET_ACCESS_KEY
      region: us-west-2
      source: /go/src/github.com/gravitational/teleport/build/*
      target: teleport/tag/${DRONE_TAG}
      strip_prefix: /go/src/github.com/gravitational/teleport/build

---
kind: pipeline
type: kubernetes
name: build-buildbox

trigger:
  branch:
    - master
  event:
    - push

workspace:
  path: /go

clone:
  disable: true

steps:
  - name: Check out code
    image: golangci/golangci-lint:v1.27.0
    commands:
      - mkdir -p /go/src/github.com/gravitational/teleport
      - cd /go/src/github.com/gravitational/teleport
      - git clone https://github.com/gravitational/teleport.git .
      - git checkout $DRONE_COMMIT

  - name: Build and push buildbox container
    image: plugins/docker
    settings:
      registry: quay.io
      username:
        from_secret: QUAYIO_DOCKER_USERNAME
      password:
        from_secret: QUAYIO_DOCKER_PASSWORD
      repo: quay.io/gravitational/teleport-buildbox
      tags:
        - go1.13.2
      dockerfile: /go/src/github.com/gravitational/teleport/build.assets/Dockerfile
      context: /go/src/github.com/gravitational/teleport/build.assets
      build_args:
        - UID=1000
        - GID=1000
        - RUNTIME=go1.13.2

---
kind: pipeline
type: kubernetes
name: docker-cron-4.2.x

trigger:
  event:
    - cron

workspace:
  path: /go

clone:
  disable: true

steps:
  - name: Check out code
    image: golang:1.13.2
    environment:
      GITHUB_PRIVATE_KEY:
        from_secret: GITHUB_PRIVATE_KEY
    commands:
      - mkdir -p /go/src/github.com/gravitational/teleport
      - cd /go/src/github.com/gravitational/teleport
      - git clone https://github.com/gravitational/teleport.git .
      - export TAG=$(git tag --list "v4.2.*" | grep -Ev '(alpha|beta|dev|rc)' | sort -rV | head -n1)
      - git checkout tags/$TAG
      - echo $DRONE_SOURCE_BRANCH > /go/.drone_source_branch.txt
      - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
      - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
      - git submodule update --init e
      - rm -f /root/.ssh/id_rsa

  - name: Build and push Teleport OSS container
    image: plugins/docker
    settings:
      registry: quay.io
      username:
        from_secret: QUAYIO_DOCKER_USERNAME
      password:
        from_secret: QUAYIO_DOCKER_PASSWORD
      repo: quay.io/gravitational/teleport-cron
      tags:
        - 4.2.x-oss
      dockerfile: /go/src/github.com/gravitational/teleport/build.assets/Dockerfile-cron
      context: /go/src/github.com/gravitational/teleport
      build_args:
        - BUILDBOX=quay.io/gravitational/teleport-buildbox:go1.13.2
        - UID=1000
        - GID=1000
        - OS=linux
        - ARCH=amd64
        - RUNTIME=go1.13.2

  - name: Build and push Teleport Enterprise container
    image: plugins/docker
    settings:
      registry: quay.io
      username:
        from_secret: QUAYIO_DOCKER_USERNAME
      password:
        from_secret: QUAYIO_DOCKER_PASSWORD
      repo: quay.io/gravitational/teleport-cron
      tags:
        - 4.2.x-ent
      dockerfile: /go/src/github.com/gravitational/teleport/build.assets/Dockerfile-ent-cron
      context: /go/src/github.com/gravitational/teleport
      build_args:
        - BUILDBOX=quay.io/gravitational/teleport-buildbox:go1.13.2
        - UID=1000
        - GID=1000
        - OS=linux
        - ARCH=amd64
        - RUNTIME=go1.13.2

  - name: Build and push Teleport Enterprise FIPS container
    image: plugins/docker
    settings:
      registry: quay.io
      username:
        from_secret: QUAYIO_DOCKER_USERNAME
      password:
        from_secret: QUAYIO_DOCKER_PASSWORD
      repo: quay.io/gravitational/teleport-cron
      tags:
        - 4.2.x-ent-fips
      dockerfile: /go/src/github.com/gravitational/teleport/build.assets/Dockerfile-ent-cron
      context: /go/src/github.com/gravitational/teleport
      build_args:
        - BUILDBOX=quay.io/gravitational/teleport-buildbox:go1.13.2
        - UID=1000
        - GID=1000
        - OS=linux
        - ARCH=amd64
        - RUNTIME=go1.13.2
        - FIPS=yes

---
kind: pipeline
type: kubernetes
name: promote-artifact

trigger:
  event:
    - promote
  target:
    - production

workspace:
  path: /go/src/github.com/gravitational/teleport

clone:
  disable: true

steps:
  - name: Download artifact from S3 artifact publishing bucket
    image: amazon/aws-cli
    environment:
      AWS_S3_BUCKET:
        from_secret: AWS_S3_BUCKET
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_REGION: us-west-2
    commands:
      - aws s3 sync s3://$AWS_S3_BUCKET/teleport/tag/$DRONE_TAG/ .

  - name: Upload artifact to production S3 bucket with public read access
    image: plugins/s3
    settings:
      bucket:
        from_secret: PRODUCTION_AWS_S3_BUCKET
      access_key:
        from_secret: PRODUCTION_AWS_ACCESS_KEY_ID
      secret_key:
        from_secret: PRODUCTION_AWS_SECRET_ACCESS_KEY
      region: us-east-1
      acl: public-read
      source: /go/src/github.com/gravitational/teleport/*
      target: teleport/${DRONE_TAG##*-v}/
      strip_prefix: /go/src/github.com/gravitational/teleport/

---
kind: signature
hmac: fee014b9e38d2aed64f2611f8503465b747612b0e54beec604f799804d4285ba

...
