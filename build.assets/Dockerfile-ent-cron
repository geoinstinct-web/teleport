# This Dockerfile uses a buildbox image to build release versions of Teleport followed by a Docker container
ARG BUILDBOX
FROM $BUILDBOX AS buildbox

ARG UID
ARG GID
ARG OS
ARG ARCH
ARG RUNTIME
ARG FIPS=""

RUN mkdir -p /go/src/github.com/gravitational/teleport
COPY . /go/src/github.com/gravitational/teleport
WORKDIR /go/src/github.com/gravitational/teleport
RUN make clean release -e OS=${OS} ARCH=${ARCH} RUNTIME=${RUNTIME} FIPS=${FIPS}

# second stage builds actual container with teleport binaries in
FROM frolvlad/alpine-glibc AS final

# Install dumb-init and ca-certificates. The dumb-init package is to ensure
# signals and orphaned processes are are handled correctly. The ca-certificate
# package is installed because the base Ubuntu image does not come with any
# certificate authorities.
#
# Note that /var/lib/apt/lists/* is cleaned up in the same RUN command as
# "apt-get update" to reduce the size of the image.
RUN apk --update --no-cache add dumb-init ca-certificates

# Copy "teleport", "tctl", and "tsh" binaries from the previous stage
COPY --from=buildbox /go/src/github.com/gravitational/teleport/e/build/teleport /usr/local/bin/teleport
COPY --from=buildbox /go/src/github.com/gravitational/teleport/e/build/tctl /usr/local/bin/tctl
COPY --from=buildbox /go/src/github.com/gravitational/teleport/build/tsh /usr/local/bin/tsh

# By setting this entry point, we expose make target as command.
ENTRYPOINT ["/usr/bin/dumb-init", "teleport", "start", "-c", "/etc/teleport/teleport.yaml"]
