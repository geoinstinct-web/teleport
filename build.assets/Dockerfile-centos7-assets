# syntax=docker/dockerfile:1

FROM centos:7 AS centos-devtoolset

ARG DEVTOOLSET
ARG TARGETARCH

# devtoolset-12 is only in CentOS buildlogs. The rpms are unsigned since they never were
# published to the official CentOS SCL repos.
RUN if [ "${TARGETARCH}" = "arm64" ]; then export TARGETARCH="aarch64"; fi && \
    cat <<EOF > /etc/yum.repos.d/${DEVTOOLSET}-build.repo
[${DEVTOOLSET}-build]
name=${DEVTOOLSET} - Build
baseurl=https://buildlogs.centos.org/c7-${DEVTOOLSET}.${TARGETARCH}/
gpgcheck=0
enabled=1
EOF

# Install required dependencies.
RUN yum groupinstall -y 'Development Tools' && \
    yum install -y epel-release && \
    yum update -y && \
    yum -y install centos-release-scl-rh && \
    yum install -y \
        centos-release-scl \
        cmake3 \
        git \
        scl-utils && \
    yum clean all

# As mentioned above, these packages are unsigned.
RUN yum install --nogpgcheck -y \
        ${DEVTOOLSET}-gcc \
        ${DEVTOOLSET}-gcc-c++ \
        ${DEVTOOLSET}-make && \
    yum clean all

# Use just created devtool image with newer GCC and Cmake
FROM centos-devtoolset as clang12

ARG DEVTOOLSET

# Compile Clang 12.0.0 from source. It is needed to create BoringSSL and BPF files.
# CentOS 7 doesn't provide it as a package unfortunately.
# This version of Clang is explicitly required for FIPS compliance when building BoringSSL.
# For more information please refer to the section 12. Guidance and Secure Operation of:
# https://csrc.nist.gov/CSRC/media/projects/cryptographic-module-validation-program/documents/security-policies/140sp4407.pdf
# LLVM_INCLUDE_BENCHMARKS must be off, otherwise compilation fails,
# CLANG_BUILD_TOOLS must be on, it builds clang binary,
# LLVM_BUILD_TOOLS must be on, it builds llvm-strip binary.
# the rest is disabled to speedup the compilation.
RUN git clone --branch llvmorg-12.0.0 --depth=1 https://github.com/llvm/llvm-project.git && \
    cd llvm-project/ && \
    [ "$(git rev-parse HEAD)" = 'd28af7c654d8db0b68c175db5ce212d74fb5e9bc' ] && \
    mkdir build && cd build/ && \
    scl enable ${DEVTOOLSET} 'bash -c "cmake3 \
-DCMAKE_BUILD_TYPE=Release \
-DCMAKE_INSTALL_PREFIX=/opt/llvm \
-DLLVM_ENABLE_PROJECTS=clang \
-DLLVM_BUILD_TOOLS=ON \
-G \"Unix Makefiles\" ../llvm && \
make -j$(grep -c processor /proc/cpuinfo) install-llvm-strip install-clang-format install-clang"' && \
    cd ../.. && \
    rm -rf llvm-project

# Build custom packages with -fPIC for use with other dependencies.
FROM centos-devtoolset as custom-packages

# Create mockbuild user/group for building.
RUN useradd --user-group --create-home --shell=/bin/bash mockbuild

# Recompile and install libelf with -fPIC.
RUN mkdir -p /opt/custom-packages && cd /opt && \
    yumdownloader --source elfutils-libelf-devel-static && \
    yum-builddep -y elfutils-libelf-devel-static && \
    rpmbuild --rebuild --define "optflags `rpm -E %{optflags}` -fPIC" elfutils-*.src.rpm && \
    if [ "${TARGETARCH}" = "arm64" ]; then export TARGETARCH="aarch64"; fi && \
    cp /root/rpmbuild/RPMS/${TARGETARCH}/elfutils-libelf-devel-static-*.el7.${TARGETARCH}.rpm /opt/custom-packages/

# Recompile and install zlib with -fPIC.
RUN mkdir -p /opt/custom-packages && cd /opt && \
    yumdownloader --source zlib-static && \
    yum-builddep -y zlib-static && \
    rpmbuild --rebuild --define "optflags `rpm -E %{optflags}` -fPIC" zlib-*.src.rpm && \
    if [ "${TARGETARCH}" = "arm64" ]; then export TARGETARCH="aarch64"; fi && \
    cp /root/rpmbuild/RPMS/${TARGETARCH}/zlib-static-*.el7.${TARGETARCH}.rpm /opt/custom-packages/

# Create the final image with Clang and custom builds only. We're using this Docker image as a tar.gz
# mainly because we want to keep our artifacts on GitHub, and GH doesn't support blobs, only Docker images.
FROM scratch AS buildbox-centos7-assets

# Copy Clang into the final image.
COPY --from=clang12 /opt/llvm /opt/llvm/

# Copy custom packages into the final image.
COPY --from=custom-packages /opt/custom-packages /opt/custom-packages/
