// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.crownjewel.v1;

import "google/protobuf/wrappers.proto";
import "teleport/header/v1/resourceheader.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/crownjewel/v1;crownjewelv1";

// CrownJewel represents a Crown Jewel resource.
// Crown Jewel is a resource that represents a set of resources that are
// considered critical to the organization. Access Graph uses Crown Jewel to
// generate audit events if access to a resource has changed.
message CrownJewel {
  // ResourceHeader is the resource header.
  teleport.header.v1.ResourceHeader header = 1;
  // Spec is the crown jewel spec.
  CrownJewelSpec spec = 2;
}

// CrownJewelSpec is the specification of a Crown Jewel.
message CrownJewelSpec {
  // TeleportMatchers is a list of teleport matchers.
  repeated TeleportMatcher teleport_matchers = 1;
  // AWSMatchers is a list of AWS matchers.
  repeated AWSMatcher aws_matchers = 2;
}

// TeleportMatcher represents a matcher for Teleport resources.
message TeleportMatcher {
  // Name is the name of the resource. When the name is provided, it will match
  // the resource with the same name.
  string name = 1;
  // Kind is the kind of the resource: ssh, k8s, db, etc
  // Multiple kinds can be provided to match multiple kinds.
  repeated string kinds = 2;
  // Labels is a set of labels.
  repeated TeleportLabel labels = 3;
}

// TeleportLabel is a label that is attached to a Teleport resource.
message TeleportLabel {
  // Key is the key of the label.
  string key = 1;
  // Values is a list of label values to match.
  repeated google.protobuf.StringValue values = 2;
}

// AWSMatcher represents a matcher for AWS resources.
// Those matchers are used only by Access Graph. Teleport related matchers are
// defined in the TeleportMatcher.
message AWSMatcher {
  // Types are AWS database types to match, "ec2", "rds", "s3", etc
  repeated string types = 1;
  // Regions are AWS regions to query for resources.
  repeated string regions = 2;
  // Tags are AWS resource Tags to match.
  // labels is a set of labels.
  repeated AWSTag tags = 3;
  // ARN is the AWS resource ARN to match.
  string arn = 4;
}

// AWSTag is a tag that is attached to an AWS resource.
message AWSTag {
  // Key is the key of the tag.
  string key = 1;
  // Value is the value of the tag.
  google.protobuf.StringValue value = 2;
}
