// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.access_graph.v1;

import "teleport/access_graph/v1/secrets.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/accessgraph/v1;accessgraphv1";

// SecretsScannerService provides CRUD methods for Access Graph Secret Scanner
// functionality.
service SecretsScannerService {
  // ReportAuthorizedKeys is used by Teleport SSH nodes to report authorized keys
  // found on each user
  rpc ReportAuthorizedKeys(stream ReportAuthorizedKeysRequest) returns (stream ReportAuthorizedKeysResponse) {}
}

// ReportAuthorizedKeys is used by Teleport nodes to report authorized keys
// that could be used to bypass Teleport.
message ReportAuthorizedKeysRequest {
  // keys is a list of authorized keys that could be used to bypass Teleport.
  repeated teleport.access_graph.v1.AuthorizedKey keys = 1;
  // operation identifies if the keys must be deleted or inserted.
  Operation operation = 2;
}

// ReportAuthorizedKeysResponse is the response from ReportAuthorizedKeys
// RPC method.
message ReportAuthorizedKeysResponse {}

// Operation is the operation that should be performed.
enum Operation {
  OPERATION_UNSPECIFIED = 0;
  // OPERATION_PUT is used when a set of keys must be used.
  OPERATION_PUT = 1;
  // OPERATION_DELETE is used when the keys were removed from the host.
  OPERATION_DELETE = 2;
}
