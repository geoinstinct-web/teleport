package proto

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	types "github.com/gravitational/teleport/api/types"
	events "github.com/gravitational/teleport/api/types/events"
	context "golang.org/x/net/context"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

// UnimplementedAuthServiceServer is an unimplemented uthServiceServer
// This is usually generated by the proto generator in v7.0+ of Teleport
type UnimplementedAuthServiceServer struct{}

// SendKeepAlives allows node to send a stream of keep alive requests
func (u *UnimplementedAuthServiceServer) SendKeepAlives(AuthService_SendKeepAlivesServer) error {
	return status.Errorf(codes.Unimplemented, "method SendKeepAlives not implemented")
}

// WatchEvents returns a new stream of cluster events
func (u *UnimplementedAuthServiceServer) WatchEvents(*Watch, AuthService_WatchEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchEvents not implemented")
}

// GetNodes retrieves all nodes.
// DELETE IN 8.0.0 in favor of ListNodes
func (u *UnimplementedAuthServiceServer) GetNodes(context.Context, *types.ResourcesInNamespaceRequest) (*types.ServerV2List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodes not implemented")
}

// ListNodes retrieves a paginated list of nodes.
func (u *UnimplementedAuthServiceServer) ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodes not implemented")
}

// UpsertNode upserts a node in a backend.
func (u *UnimplementedAuthServiceServer) UpsertNode(context.Context, *types.ServerV2) (*types.KeepAlive, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertNode not implemented")
}

// DeleteNode deletes an existing node in a backend described by the given request.
func (u *UnimplementedAuthServiceServer) DeleteNode(context.Context, *types.ResourceInNamespaceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNode not implemented")
}

// DeleteAllNodes deletes all nodes.
func (u *UnimplementedAuthServiceServer) DeleteAllNodes(context.Context, *types.ResourcesInNamespaceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllNodes not implemented")
}

// GenerateUserCerts generates a set of user certificates.
func (u *UnimplementedAuthServiceServer) GenerateUserCerts(context.Context, *UserCertsRequest) (*Certs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateUserCerts not implemented")
}

// GenerateUserSingleUseCerts generates a set of single-use user
// certificates.
func (u *UnimplementedAuthServiceServer) GenerateUserSingleUseCerts(AuthService_GenerateUserSingleUseCertsServer) error {
	return status.Errorf(codes.Unimplemented, "method GenerateUserSingleUseCerts not implemented")
}

// IsMFARequired checks whether MFA is required to access the specified
// target.
func (u *UnimplementedAuthServiceServer) IsMFARequired(context.Context, *IsMFARequiredRequest) (*IsMFARequiredResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsMFARequired not implemented")
}

// GetAccessRequests gets all pending access requests.
func (u *UnimplementedAuthServiceServer) GetAccessRequests(context.Context, *types.AccessRequestFilter) (*AccessRequests, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccessRequests not implemented")
}

// CreateAccessRequest creates a new access request.
func (u *UnimplementedAuthServiceServer) CreateAccessRequest(context.Context, *types.AccessRequestV3) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccessRequest not implemented")
}

// DeleteAccessRequest deletes an access request.
func (u *UnimplementedAuthServiceServer) DeleteAccessRequest(context.Context, *RequestID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccessRequest not implemented")
}

// SetAccessRequestState sets the state of an access request.
func (u *UnimplementedAuthServiceServer) SetAccessRequestState(context.Context, *RequestStateSetter) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccessRequestState not implemented")
}

// SubmitAccessReview applies a review to a request and returns the post-application state.
func (u *UnimplementedAuthServiceServer) SubmitAccessReview(context.Context, *types.AccessReviewSubmission) (*types.AccessRequestV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitAccessReview not implemented")
}

// GetAccessCapabilities requests the access capabilites of a user.
func (u *UnimplementedAuthServiceServer) GetAccessCapabilities(context.Context, *types.AccessCapabilitiesRequest) (*types.AccessCapabilities, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccessCapabilities not implemented")
}

// GetPluginData gets all plugin data matching the supplied filter.
func (u *UnimplementedAuthServiceServer) GetPluginData(context.Context, *types.PluginDataFilter) (*PluginDataSeq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPluginData not implemented")
}

// UpdatePluginData updates a plugin's resource-specific datastore.
func (u *UnimplementedAuthServiceServer) UpdatePluginData(context.Context, *types.PluginDataUpdateParams) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePluginData not implemented")
}

// Ping gets basic info about the auth server. This method is intended
// to mimic the behavior of the proxy's Ping method, and may be used by
// clients for verification or configuration on startup.
func (u *UnimplementedAuthServiceServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

// RotateResetPasswordTokenSecrets rotates token secrets for a given tokenID.
func (u *UnimplementedAuthServiceServer) RotateResetPasswordTokenSecrets(context.Context, *RotateResetPasswordTokenSecretsRequest) (*types.ResetPasswordTokenSecretsV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RotateResetPasswordTokenSecrets not implemented")
}

// GetResetPasswordToken returns a token.
func (u *UnimplementedAuthServiceServer) GetResetPasswordToken(context.Context, *GetResetPasswordTokenRequest) (*types.ResetPasswordTokenV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResetPasswordToken not implemented")
}

// CreateResetPasswordToken creates ResetPasswordToken.
func (u *UnimplementedAuthServiceServer) CreateResetPasswordToken(context.Context, *CreateResetPasswordTokenRequest) (*types.ResetPasswordTokenV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResetPasswordToken not implemented")
}

// GetUser gets a user resource by name.
func (u *UnimplementedAuthServiceServer) GetUser(context.Context, *GetUserRequest) (*types.UserV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

// GetUsers gets all current user resources.
func (u *UnimplementedAuthServiceServer) GetUsers(*GetUsersRequest, AuthService_GetUsersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}

// CreateUser inserts a new user entry to a backend.
func (u *UnimplementedAuthServiceServer) CreateUser(context.Context, *types.UserV2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}

// UpdateUser updates an existing user in a backend.
func (u *UnimplementedAuthServiceServer) UpdateUser(context.Context, *types.UserV2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}

// DeleteUser deletes an existing user in a backend by username.
func (u *UnimplementedAuthServiceServer) DeleteUser(context.Context, *DeleteUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}

// AcquireSemaphore acquires lease with requested resources from semaphore.
func (u *UnimplementedAuthServiceServer) AcquireSemaphore(context.Context, *types.AcquireSemaphoreRequest) (*types.SemaphoreLease, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireSemaphore not implemented")
}

// KeepAliveSemaphoreLease updates semaphore lease.
func (u *UnimplementedAuthServiceServer) KeepAliveSemaphoreLease(context.Context, *types.SemaphoreLease) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAliveSemaphoreLease not implemented")
}

// CancelSemaphoreLease cancels semaphore lease early.
func (u *UnimplementedAuthServiceServer) CancelSemaphoreLease(context.Context, *types.SemaphoreLease) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelSemaphoreLease not implemented")
}

// GetSemaphores returns a list of all semaphores matching the supplied filter.
func (u *UnimplementedAuthServiceServer) GetSemaphores(context.Context, *types.SemaphoreFilter) (*Semaphores, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSemaphores not implemented")
}

// DeleteSemaphore deletes a semaphore matching the supplied filter.
func (u *UnimplementedAuthServiceServer) DeleteSemaphore(context.Context, *types.SemaphoreFilter) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSemaphore not implemented")
}

// EmitAuditEvent emits audit event
func (u *UnimplementedAuthServiceServer) EmitAuditEvent(context.Context, *events.OneOf) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmitAuditEvent not implemented")
}

// CreateAuditStream creates or resumes audit events streams
func (u *UnimplementedAuthServiceServer) CreateAuditStream(AuthService_CreateAuditStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateAuditStream not implemented")
}

// GetAppServers gets all application servers.
func (u *UnimplementedAuthServiceServer) GetAppServers(context.Context, *GetAppServersRequest) (*GetAppServersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppServers not implemented")
}

// UpsertAppServer adds an application server.
func (u *UnimplementedAuthServiceServer) UpsertAppServer(context.Context, *UpsertAppServerRequest) (*types.KeepAlive, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertAppServer not implemented")
}

// DeleteAppServer removes an application server.
func (u *UnimplementedAuthServiceServer) DeleteAppServer(context.Context, *DeleteAppServerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAppServer not implemented")
}

// DeleteAllAppServers removes all application servers.
func (u *UnimplementedAuthServiceServer) DeleteAllAppServers(context.Context, *DeleteAllAppServersRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllAppServers not implemented")
}

// GenerateAppToken will generate a JWT token for application access.
func (u *UnimplementedAuthServiceServer) GenerateAppToken(context.Context, *GenerateAppTokenRequest) (*GenerateAppTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAppToken not implemented")
}

// GetAppSession gets an application web session.
func (u *UnimplementedAuthServiceServer) GetAppSession(context.Context, *GetAppSessionRequest) (*GetAppSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppSession not implemented")
}

// GetAppSessions gets all application web sessions.
func (u *UnimplementedAuthServiceServer) GetAppSessions(context.Context, *empty.Empty) (*GetAppSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppSessions not implemented")
}

// CreateAppSession creates an application web session. Application web
// sessions represent a browser session the client holds.
func (u *UnimplementedAuthServiceServer) CreateAppSession(context.Context, *CreateAppSessionRequest) (*CreateAppSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppSession not implemented")
}

// DeleteAppSession removes an application web session.
func (u *UnimplementedAuthServiceServer) DeleteAppSession(context.Context, *DeleteAppSessionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAppSession not implemented")
}

// DeleteAllAppSessions removes all application web sessions.
func (u *UnimplementedAuthServiceServer) DeleteAllAppSessions(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllAppSessions not implemented")
}

// GetWebSession gets a web session.
func (u *UnimplementedAuthServiceServer) GetWebSession(context.Context, *types.GetWebSessionRequest) (*GetWebSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebSession not implemented")
}

// GetWebSessions gets all web sessions.
func (u *UnimplementedAuthServiceServer) GetWebSessions(context.Context, *empty.Empty) (*GetWebSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebSessions not implemented")
}

// DeleteWebSession deletes a web session.
func (u *UnimplementedAuthServiceServer) DeleteWebSession(context.Context, *types.DeleteWebSessionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWebSession not implemented")
}

// DeleteAllWebSessions deletes all web sessions.
func (u *UnimplementedAuthServiceServer) DeleteAllWebSessions(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllWebSessions not implemented")
}

// GetWebToken gets a web token.
func (u *UnimplementedAuthServiceServer) GetWebToken(context.Context, *types.GetWebTokenRequest) (*GetWebTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebToken not implemented")
}

// GetWebTokens gets all web tokens.
func (u *UnimplementedAuthServiceServer) GetWebTokens(context.Context, *empty.Empty) (*GetWebTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebTokens not implemented")
}

// DeleteWebToken deletes a web token.
func (u *UnimplementedAuthServiceServer) DeleteWebToken(context.Context, *types.DeleteWebTokenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWebToken not implemented")
}

// DeleteAllWebTokens deletes all web tokens.
func (u *UnimplementedAuthServiceServer) DeleteAllWebTokens(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllWebTokens not implemented")
}

// UpdateRemoteCluster updates remote cluster
func (u *UnimplementedAuthServiceServer) UpdateRemoteCluster(context.Context, *types.RemoteClusterV3) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRemoteCluster not implemented")
}

// GetKubeServices gets all kubernetes services.
func (u *UnimplementedAuthServiceServer) GetKubeServices(context.Context, *GetKubeServicesRequest) (*GetKubeServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKubeServices not implemented")
}

// UpsertKubeService adds or updates a kubernetes service.
func (u *UnimplementedAuthServiceServer) UpsertKubeService(context.Context, *UpsertKubeServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertKubeService not implemented")
}

// DeleteKubeService removes a kubernetes service.
func (u *UnimplementedAuthServiceServer) DeleteKubeService(context.Context, *DeleteKubeServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKubeService not implemented")
}

// DeleteAllKubeServices removes all kubernetes services.
func (u *UnimplementedAuthServiceServer) DeleteAllKubeServices(context.Context, *DeleteAllKubeServicesRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllKubeServices not implemented")
}

// GetDatabaseServers returns all registered database proxy servers.
func (u *UnimplementedAuthServiceServer) GetDatabaseServers(context.Context, *GetDatabaseServersRequest) (*GetDatabaseServersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatabaseServers not implemented")
}

// UpsertDatabaseServer registers a new database proxy server.
func (u *UnimplementedAuthServiceServer) UpsertDatabaseServer(context.Context, *UpsertDatabaseServerRequest) (*types.KeepAlive, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertDatabaseServer not implemented")
}

// DeleteDatabaseServer removes the specified database proxy server.
func (u *UnimplementedAuthServiceServer) DeleteDatabaseServer(context.Context, *DeleteDatabaseServerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDatabaseServer not implemented")
}

// DeleteAllDatabaseServers removes all registered database proxy servers.
func (u *UnimplementedAuthServiceServer) DeleteAllDatabaseServers(context.Context, *DeleteAllDatabaseServersRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllDatabaseServers not implemented")
}

// SignDatabaseCSR generates client certificate used by proxy to
// authenticate with a remote database service.
func (u *UnimplementedAuthServiceServer) SignDatabaseCSR(context.Context, *DatabaseCSRRequest) (*DatabaseCSRResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignDatabaseCSR not implemented")
}

// GenerateDatabaseCert generates client certificate used by a database
// service to authenticate with the database instance.
func (u *UnimplementedAuthServiceServer) GenerateDatabaseCert(context.Context, *DatabaseCertRequest) (*DatabaseCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateDatabaseCert not implemented")
}

// GetRole retrieves a role described by the given request.
func (u *UnimplementedAuthServiceServer) GetRole(context.Context, *GetRoleRequest) (*types.RoleV4, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}

// GetRole retrieves all roles.
func (u *UnimplementedAuthServiceServer) GetRoles(context.Context, *empty.Empty) (*GetRolesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoles not implemented")
}

// UpsertRole upserts a role in a backend.
func (u *UnimplementedAuthServiceServer) UpsertRole(context.Context, *types.RoleV4) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertRole not implemented")
}

// DeleteRole deletes an existing role in a backend described by the given request.
func (u *UnimplementedAuthServiceServer) DeleteRole(context.Context, *DeleteRoleRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}

// AddMFADevice adds an MFA device for the user calling this RPC.
//
// The RPC is streaming both ways and the message sequence is:
// (-> means client-to-server, <- means server-to-client)
// -> Init
// <- ExistingMFAChallenge
// -> ExistingMFAResponse
// <- NewMFARegisterChallenge
// -> NewMFARegisterResponse
// <- Ack
func (u *UnimplementedAuthServiceServer) AddMFADevice(AuthService_AddMFADeviceServer) error {
	return status.Errorf(codes.Unimplemented, "method AddMFADevice not implemented")
}

// DeleteMFADevice deletes an MFA device for the user calling this RPC.
//
// The RPC is streaming both ways and the message sequence is:
// (-> means client-to-server, <- means server-to-client)
// -> Init
// <- MFAChallenge
// -> MFAResponse
// <- Ack
func (u *UnimplementedAuthServiceServer) DeleteMFADevice(AuthService_DeleteMFADeviceServer) error {
	return status.Errorf(codes.Unimplemented, "method DeleteMFADevice not implemented")
}

// GetMFADevices returns all MFA devices registered for the user calling
// this RPC.
func (u *UnimplementedAuthServiceServer) GetMFADevices(context.Context, *GetMFADevicesRequest) (*GetMFADevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMFADevices not implemented")
}

// GetOIDCConnector gets an OIDC connector resource by name.
func (u *UnimplementedAuthServiceServer) GetOIDCConnector(context.Context, *types.ResourceWithSecretsRequest) (*types.OIDCConnectorV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOIDCConnector not implemented")
}

// GetOIDCConnectors gets all current OIDC connector resources.
func (u *UnimplementedAuthServiceServer) GetOIDCConnectors(context.Context, *types.ResourcesWithSecretsRequest) (*types.OIDCConnectorV2List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOIDCConnectors not implemented")
}

// UpsertOIDCConnector upserts an OIDC connector in a backend.
func (u *UnimplementedAuthServiceServer) UpsertOIDCConnector(context.Context, *types.OIDCConnectorV2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertOIDCConnector not implemented")
}

// DeleteOIDCConnector deletes an existing OIDC connector in a backend by name.
func (u *UnimplementedAuthServiceServer) DeleteOIDCConnector(context.Context, *types.ResourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOIDCConnector not implemented")
}

// GetSAMLConnector gets a SAML connector resource by name.
func (u *UnimplementedAuthServiceServer) GetSAMLConnector(context.Context, *types.ResourceWithSecretsRequest) (*types.SAMLConnectorV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSAMLConnector not implemented")
}

// GetSAMLConnectors gets all current SAML connector resources.
func (u *UnimplementedAuthServiceServer) GetSAMLConnectors(context.Context, *types.ResourcesWithSecretsRequest) (*types.SAMLConnectorV2List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSAMLConnectors not implemented")
}

// UpsertSAMLConnector upserts a SAML connector in a backend.
func (u *UnimplementedAuthServiceServer) UpsertSAMLConnector(context.Context, *types.SAMLConnectorV2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertSAMLConnector not implemented")
}

// DeleteSAMLConnector deletes an existing SAML connector in a backend by name.
func (u *UnimplementedAuthServiceServer) DeleteSAMLConnector(context.Context, *types.ResourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSAMLConnector not implemented")
}

// GetGithubConnector gets a Github connector resource by name.
func (u *UnimplementedAuthServiceServer) GetGithubConnector(context.Context, *types.ResourceWithSecretsRequest) (*types.GithubConnectorV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGithubConnector not implemented")
}

// GetGithubConnectors gets all current Github connector resources.
func (u *UnimplementedAuthServiceServer) GetGithubConnectors(context.Context, *types.ResourcesWithSecretsRequest) (*types.GithubConnectorV3List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGithubConnectors not implemented")
}

// UpsertGithubConnector upserts a Github connector in a backend.
func (u *UnimplementedAuthServiceServer) UpsertGithubConnector(context.Context, *types.GithubConnectorV3) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertGithubConnector not implemented")
}

// DeleteGithubConnector deletes an existing Github connector in a backend by name.
func (u *UnimplementedAuthServiceServer) DeleteGithubConnector(context.Context, *types.ResourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGithubConnector not implemented")
}

// GetTrustedCluster gets a Trusted Cluster resource by name.
func (u *UnimplementedAuthServiceServer) GetTrustedCluster(context.Context, *types.ResourceRequest) (*types.TrustedClusterV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrustedCluster not implemented")
}

// GetTrustedClusters gets all current Trusted Cluster resources.
func (u *UnimplementedAuthServiceServer) GetTrustedClusters(context.Context, *empty.Empty) (*types.TrustedClusterV2List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrustedClusters not implemented")
}

// UpsertTrustedCluster upserts a Trusted Cluster in a backend.
func (u *UnimplementedAuthServiceServer) UpsertTrustedCluster(context.Context, *types.TrustedClusterV2) (*types.TrustedClusterV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertTrustedCluster not implemented")
}

// DeleteTrustedCluster deletes an existing Trusted Cluster in a backend by name.
func (u *UnimplementedAuthServiceServer) DeleteTrustedCluster(context.Context, *types.ResourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTrustedCluster not implemented")
}

// GetToken retrieves a token described by the given request.
func (u *UnimplementedAuthServiceServer) GetToken(context.Context, *types.ResourceRequest) (*types.ProvisionTokenV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}

// GetToken retrieves all tokens.
func (u *UnimplementedAuthServiceServer) GetTokens(context.Context, *empty.Empty) (*types.ProvisionTokenV2List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokens not implemented")
}

// UpsertToken upserts a token in a backend.
func (u *UnimplementedAuthServiceServer) UpsertToken(context.Context, *types.ProvisionTokenV2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertToken not implemented")
}

// DeleteToken deletes an existing token in a backend described by the given request.
func (u *UnimplementedAuthServiceServer) DeleteToken(context.Context, *types.ResourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteToken not implemented")
}

// Out-of-session request for audit events.
func (u *UnimplementedAuthServiceServer) GetEvents(context.Context, *GetEventsRequest) (*Events, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}

// In-session request for audit events.
func (u *UnimplementedAuthServiceServer) GetSessionEvents(context.Context, *GetSessionEventsRequest) (*Events, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSessionEvents not implemented")
}

// GetAuthPreference gets cluster auth preference.
func (u *UnimplementedAuthServiceServer) GetAuthPreference(context.Context, *empty.Empty) (*types.AuthPreferenceV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthPreference not implemented")
}

// SetAuthPreference sets cluster auth preference.
func (u *UnimplementedAuthServiceServer) SetAuthPreference(context.Context, *types.AuthPreferenceV2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAuthPreference not implemented")
}

func (u *UnimplementedAuthServiceServer) StreamSessionEvents(*StreamSessionEventsRequest, AuthService_StreamSessionEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamSessionEvents not implemented")
}
