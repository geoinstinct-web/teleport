diff a/lib/srv/db/cloud/mocks.go b/lib/srv/db/cloud/mocks.go	(rejected hunks)
@@ -22,8 +22,6 @@ import (
 	"sync"
 
 	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
-	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mysql/armmysql"
-	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/postgresql/armpostgresql"
 	"github.com/aws/aws-sdk-go/aws"
 	"github.com/aws/aws-sdk-go/aws/request"
 	"github.com/aws/aws-sdk-go/service/elasticache"
@@ -69,52 +67,15 @@ func (m *AzureMySQLMock) ListServers(ctx context.Context, group string) ([]*armm
 	return servers, nil
 }
 
-// AzureMySQLMockUnauth implements AzureMySQLClient
-var _ common.AzureMySQLClient = (*AzureMySQLMockUnauth)(nil)
+// AzureClientMockUnauth implements AzureClient
+var _ azure.AzureClient = (*AzureClientMockUnauth)(nil)
 
-// AzureMySQLMockUnauth mocks AzureMySQLClient.
-type AzureMySQLMockUnauth struct {
-	DBServers []*armmysql.Server
-}
-
-func (m *AzureMySQLMockUnauth) ListServers(ctx context.Context, group string) ([]*armmysql.Server, error) {
-	return nil, trace.AccessDenied("unauthorized")
-}
-
-// AzurePostgresMock implements AzurePostgresClient
-var _ common.AzurePostgresClient = (*AzurePostgresMock)(nil)
-
-// AzurePostgresMock mocks AzurePostgresClient.
-type AzurePostgresMock struct {
-	DBServers []*armpostgresql.Server
-}
-
-func (m *AzurePostgresMock) ListServers(ctx context.Context, group string) ([]*armpostgresql.Server, error) {
-	if group == types.Wildcard {
-		return m.DBServers, nil
-	}
-	var servers []*armpostgresql.Server
-	for _, server := range m.DBServers {
-		resourceID, err := arm.ParseResourceID(*server.ID)
-		if err != nil {
-			return nil, trace.Wrap(err)
-		}
-		if resourceID.ResourceGroupName == group {
-			servers = append(servers, server)
-		}
-	}
-	return servers, nil
-}
-
-// AzurePostgresMockUnauth implements AzurePostgresClient
-var _ common.AzurePostgresClient = (*AzurePostgresMockUnauth)(nil)
-
-// AzurePostgresMockUnauth mocks AzurePostgresClient.
-type AzurePostgresMockUnauth struct {
-	DBServers []*armpostgresql.Server
+// AzureClientMockUnauth mocks AzureClient.
+type AzureClientMockUnauth struct {
+	DBServers []azure.AzureDBServer
 }
 
-func (m *AzurePostgresMockUnauth) ListServers(ctx context.Context, group string) ([]*armpostgresql.Server, error) {
+func (m *AzureClientMockUnauth) ListServers(ctx context.Context, group string, _ int) ([]azure.AzureDBServer, error) {
 	return nil, trace.AccessDenied("unauthorized")
 }
 
