// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: prehog/v1alpha/connect.proto

package prehogv1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectLoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized
	UserName       string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Arch           string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	Os             string `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion      string `protobuf:"bytes,5,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	ConnectVersion string `protobuf:"bytes,6,opt,name=connect_version,json=connectVersion,proto3" json:"connect_version,omitempty"`
}

func (x *ConnectLoginEvent) Reset() {
	*x = ConnectLoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectLoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectLoginEvent) ProtoMessage() {}

func (x *ConnectLoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectLoginEvent.ProtoReflect.Descriptor instead.
func (*ConnectLoginEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectLoginEvent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ConnectLoginEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ConnectLoginEvent) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *ConnectLoginEvent) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ConnectLoginEvent) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *ConnectLoginEvent) GetConnectVersion() string {
	if x != nil {
		return x.ConnectVersion
	}
	return ""
}

type ConnectProtocolRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// one of ssh/db/kube
	Protocol string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *ConnectProtocolRunEvent) Reset() {
	*x = ConnectProtocolRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectProtocolRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectProtocolRunEvent) ProtoMessage() {}

func (x *ConnectProtocolRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectProtocolRunEvent.ProtoReflect.Descriptor instead.
func (*ConnectProtocolRunEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectProtocolRunEvent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ConnectProtocolRunEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ConnectProtocolRunEvent) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type ConnectAccessRequestCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// one of role/resource
	Kind string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *ConnectAccessRequestCreateEvent) Reset() {
	*x = ConnectAccessRequestCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectAccessRequestCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectAccessRequestCreateEvent) ProtoMessage() {}

func (x *ConnectAccessRequestCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectAccessRequestCreateEvent.ProtoReflect.Descriptor instead.
func (*ConnectAccessRequestCreateEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectAccessRequestCreateEvent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ConnectAccessRequestCreateEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ConnectAccessRequestCreateEvent) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type ConnectAccessRequestReviewEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *ConnectAccessRequestReviewEvent) Reset() {
	*x = ConnectAccessRequestReviewEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectAccessRequestReviewEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectAccessRequestReviewEvent) ProtoMessage() {}

func (x *ConnectAccessRequestReviewEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectAccessRequestReviewEvent.ProtoReflect.Descriptor instead.
func (*ConnectAccessRequestReviewEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectAccessRequestReviewEvent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ConnectAccessRequestReviewEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type ConnectAccessRequestAssumeRoleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *ConnectAccessRequestAssumeRoleEvent) Reset() {
	*x = ConnectAccessRequestAssumeRoleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectAccessRequestAssumeRoleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectAccessRequestAssumeRoleEvent) ProtoMessage() {}

func (x *ConnectAccessRequestAssumeRoleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectAccessRequestAssumeRoleEvent.ProtoReflect.Descriptor instead.
func (*ConnectAccessRequestAssumeRoleEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectAccessRequestAssumeRoleEvent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ConnectAccessRequestAssumeRoleEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type ConnectFileTransferRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// upload/download
	Direction string `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *ConnectFileTransferRunEvent) Reset() {
	*x = ConnectFileTransferRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectFileTransferRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectFileTransferRunEvent) ProtoMessage() {}

func (x *ConnectFileTransferRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectFileTransferRunEvent.ProtoReflect.Descriptor instead.
func (*ConnectFileTransferRunEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectFileTransferRunEvent) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ConnectFileTransferRunEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ConnectFileTransferRunEvent) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type ConnectUserJobRoleUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobRole string `protobuf:"bytes,1,opt,name=job_role,json=jobRole,proto3" json:"job_role,omitempty"`
}

func (x *ConnectUserJobRoleUpdateEvent) Reset() {
	*x = ConnectUserJobRoleUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectUserJobRoleUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectUserJobRoleUpdateEvent) ProtoMessage() {}

func (x *ConnectUserJobRoleUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectUserJobRoleUpdateEvent.ProtoReflect.Descriptor instead.
func (*ConnectUserJobRoleUpdateEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectUserJobRoleUpdateEvent) GetJobRole() string {
	if x != nil {
		return x.JobRole
	}
	return ""
}

type SubmitConnectEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// "connect.{{uuid}}"
	DistinctId string                 `protobuf:"bytes,1,opt,name=distinct_id,json=distinctId,proto3" json:"distinct_id,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Event:
	//
	//	*SubmitConnectEventRequest_ConnectLogin
	//	*SubmitConnectEventRequest_ConnectProtocolRun
	//	*SubmitConnectEventRequest_ConnectAccessRequestCreate
	//	*SubmitConnectEventRequest_ConnectAccessRequestReview
	//	*SubmitConnectEventRequest_ConnectAccessRequestAssumeRole
	//	*SubmitConnectEventRequest_ConnectFileTransferRunEvent
	//	*SubmitConnectEventRequest_ConnectUserJobRoleUpdateEvent
	Event isSubmitConnectEventRequest_Event `protobuf_oneof:"event"`
}

func (x *SubmitConnectEventRequest) Reset() {
	*x = SubmitConnectEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitConnectEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitConnectEventRequest) ProtoMessage() {}

func (x *SubmitConnectEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitConnectEventRequest.ProtoReflect.Descriptor instead.
func (*SubmitConnectEventRequest) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitConnectEventRequest) GetDistinctId() string {
	if x != nil {
		return x.DistinctId
	}
	return ""
}

func (x *SubmitConnectEventRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *SubmitConnectEventRequest) GetEvent() isSubmitConnectEventRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectLogin() *ConnectLoginEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectLogin); ok {
		return x.ConnectLogin
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectProtocolRun() *ConnectProtocolRunEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectProtocolRun); ok {
		return x.ConnectProtocolRun
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectAccessRequestCreate() *ConnectAccessRequestCreateEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectAccessRequestCreate); ok {
		return x.ConnectAccessRequestCreate
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectAccessRequestReview() *ConnectAccessRequestReviewEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectAccessRequestReview); ok {
		return x.ConnectAccessRequestReview
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectAccessRequestAssumeRole() *ConnectAccessRequestAssumeRoleEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectAccessRequestAssumeRole); ok {
		return x.ConnectAccessRequestAssumeRole
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectFileTransferRunEvent() *ConnectFileTransferRunEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectFileTransferRunEvent); ok {
		return x.ConnectFileTransferRunEvent
	}
	return nil
}

func (x *SubmitConnectEventRequest) GetConnectUserJobRoleUpdateEvent() *ConnectUserJobRoleUpdateEvent {
	if x, ok := x.GetEvent().(*SubmitConnectEventRequest_ConnectUserJobRoleUpdateEvent); ok {
		return x.ConnectUserJobRoleUpdateEvent
	}
	return nil
}

type isSubmitConnectEventRequest_Event interface {
	isSubmitConnectEventRequest_Event()
}

type SubmitConnectEventRequest_ConnectLogin struct {
	// TODO: Either remove the event suffix or add it consistently.
	ConnectLogin *ConnectLoginEvent `protobuf:"bytes,3,opt,name=connect_login,json=connectLogin,proto3,oneof"`
}

type SubmitConnectEventRequest_ConnectProtocolRun struct {
	ConnectProtocolRun *ConnectProtocolRunEvent `protobuf:"bytes,4,opt,name=connect_protocol_run,json=connectProtocolRun,proto3,oneof"`
}

type SubmitConnectEventRequest_ConnectAccessRequestCreate struct {
	ConnectAccessRequestCreate *ConnectAccessRequestCreateEvent `protobuf:"bytes,5,opt,name=connect_access_request_create,json=connectAccessRequestCreate,proto3,oneof"`
}

type SubmitConnectEventRequest_ConnectAccessRequestReview struct {
	ConnectAccessRequestReview *ConnectAccessRequestReviewEvent `protobuf:"bytes,6,opt,name=connect_access_request_review,json=connectAccessRequestReview,proto3,oneof"`
}

type SubmitConnectEventRequest_ConnectAccessRequestAssumeRole struct {
	ConnectAccessRequestAssumeRole *ConnectAccessRequestAssumeRoleEvent `protobuf:"bytes,7,opt,name=connect_access_request_assume_role,json=connectAccessRequestAssumeRole,proto3,oneof"`
}

type SubmitConnectEventRequest_ConnectFileTransferRunEvent struct {
	ConnectFileTransferRunEvent *ConnectFileTransferRunEvent `protobuf:"bytes,8,opt,name=connect_file_transfer_run_event,json=connectFileTransferRunEvent,proto3,oneof"`
}

type SubmitConnectEventRequest_ConnectUserJobRoleUpdateEvent struct {
	ConnectUserJobRoleUpdateEvent *ConnectUserJobRoleUpdateEvent `protobuf:"bytes,9,opt,name=connect_user_job_role_update_event,json=connectUserJobRoleUpdateEvent,proto3,oneof"`
}

func (*SubmitConnectEventRequest_ConnectLogin) isSubmitConnectEventRequest_Event() {}

func (*SubmitConnectEventRequest_ConnectProtocolRun) isSubmitConnectEventRequest_Event() {}

func (*SubmitConnectEventRequest_ConnectAccessRequestCreate) isSubmitConnectEventRequest_Event() {}

func (*SubmitConnectEventRequest_ConnectAccessRequestReview) isSubmitConnectEventRequest_Event() {}

func (*SubmitConnectEventRequest_ConnectAccessRequestAssumeRole) isSubmitConnectEventRequest_Event() {
}

func (*SubmitConnectEventRequest_ConnectFileTransferRunEvent) isSubmitConnectEventRequest_Event() {}

func (*SubmitConnectEventRequest_ConnectUserJobRoleUpdateEvent) isSubmitConnectEventRequest_Event() {}

type SubmitConnectEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitConnectEventResponse) Reset() {
	*x = SubmitConnectEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_connect_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitConnectEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitConnectEventResponse) ProtoMessage() {}

func (x *SubmitConnectEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_connect_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitConnectEventResponse.ProtoReflect.Descriptor instead.
func (*SubmitConnectEventResponse) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_connect_proto_rawDescGZIP(), []int{8}
}

var File_prehog_v1alpha_connect_proto protoreflect.FileDescriptor

var file_prehog_v1alpha_connect_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xbf, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x75, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x75, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0x61, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x65, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x1b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x52, 0x6f,
	0x6c, 0x65, 0x22, 0x87, 0x07, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x5b, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x75, 0x6e, 0x12, 0x74, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x65, 0x68,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x74, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x81,
	0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72,
	0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x1e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x73, 0x0a, 0x1f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6e, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x7a, 0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x6f, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x88, 0x01, 0x0a, 0x17, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x70,
	0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xca, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72,
	0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x0c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x65, 0x68, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x70, 0x72,
	0x65, 0x68, 0x6f, 0x67, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x50, 0x58,
	0x58, 0xaa, 0x02, 0x0e, 0x50, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0xca, 0x02, 0x0e, 0x50, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0xe2, 0x02, 0x1a, 0x50, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0f, 0x50, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prehog_v1alpha_connect_proto_rawDescOnce sync.Once
	file_prehog_v1alpha_connect_proto_rawDescData = file_prehog_v1alpha_connect_proto_rawDesc
)

func file_prehog_v1alpha_connect_proto_rawDescGZIP() []byte {
	file_prehog_v1alpha_connect_proto_rawDescOnce.Do(func() {
		file_prehog_v1alpha_connect_proto_rawDescData = protoimpl.X.CompressGZIP(file_prehog_v1alpha_connect_proto_rawDescData)
	})
	return file_prehog_v1alpha_connect_proto_rawDescData
}

var file_prehog_v1alpha_connect_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_prehog_v1alpha_connect_proto_goTypes = []interface{}{
	(*ConnectLoginEvent)(nil),                   // 0: prehog.v1alpha.ConnectLoginEvent
	(*ConnectProtocolRunEvent)(nil),             // 1: prehog.v1alpha.ConnectProtocolRunEvent
	(*ConnectAccessRequestCreateEvent)(nil),     // 2: prehog.v1alpha.ConnectAccessRequestCreateEvent
	(*ConnectAccessRequestReviewEvent)(nil),     // 3: prehog.v1alpha.ConnectAccessRequestReviewEvent
	(*ConnectAccessRequestAssumeRoleEvent)(nil), // 4: prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent
	(*ConnectFileTransferRunEvent)(nil),         // 5: prehog.v1alpha.ConnectFileTransferRunEvent
	(*ConnectUserJobRoleUpdateEvent)(nil),       // 6: prehog.v1alpha.ConnectUserJobRoleUpdateEvent
	(*SubmitConnectEventRequest)(nil),           // 7: prehog.v1alpha.SubmitConnectEventRequest
	(*SubmitConnectEventResponse)(nil),          // 8: prehog.v1alpha.SubmitConnectEventResponse
	(*timestamppb.Timestamp)(nil),               // 9: google.protobuf.Timestamp
}
var file_prehog_v1alpha_connect_proto_depIdxs = []int32{
	9, // 0: prehog.v1alpha.SubmitConnectEventRequest.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: prehog.v1alpha.SubmitConnectEventRequest.connect_login:type_name -> prehog.v1alpha.ConnectLoginEvent
	1, // 2: prehog.v1alpha.SubmitConnectEventRequest.connect_protocol_run:type_name -> prehog.v1alpha.ConnectProtocolRunEvent
	2, // 3: prehog.v1alpha.SubmitConnectEventRequest.connect_access_request_create:type_name -> prehog.v1alpha.ConnectAccessRequestCreateEvent
	3, // 4: prehog.v1alpha.SubmitConnectEventRequest.connect_access_request_review:type_name -> prehog.v1alpha.ConnectAccessRequestReviewEvent
	4, // 5: prehog.v1alpha.SubmitConnectEventRequest.connect_access_request_assume_role:type_name -> prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent
	5, // 6: prehog.v1alpha.SubmitConnectEventRequest.connect_file_transfer_run_event:type_name -> prehog.v1alpha.ConnectFileTransferRunEvent
	6, // 7: prehog.v1alpha.SubmitConnectEventRequest.connect_user_job_role_update_event:type_name -> prehog.v1alpha.ConnectUserJobRoleUpdateEvent
	7, // 8: prehog.v1alpha.ConnectReportingService.SubmitConnectEvent:input_type -> prehog.v1alpha.SubmitConnectEventRequest
	8, // 9: prehog.v1alpha.ConnectReportingService.SubmitConnectEvent:output_type -> prehog.v1alpha.SubmitConnectEventResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_prehog_v1alpha_connect_proto_init() }
func file_prehog_v1alpha_connect_proto_init() {
	if File_prehog_v1alpha_connect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prehog_v1alpha_connect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectLoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectProtocolRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectAccessRequestCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectAccessRequestReviewEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectAccessRequestAssumeRoleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectFileTransferRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectUserJobRoleUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitConnectEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_connect_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitConnectEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prehog_v1alpha_connect_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SubmitConnectEventRequest_ConnectLogin)(nil),
		(*SubmitConnectEventRequest_ConnectProtocolRun)(nil),
		(*SubmitConnectEventRequest_ConnectAccessRequestCreate)(nil),
		(*SubmitConnectEventRequest_ConnectAccessRequestReview)(nil),
		(*SubmitConnectEventRequest_ConnectAccessRequestAssumeRole)(nil),
		(*SubmitConnectEventRequest_ConnectFileTransferRunEvent)(nil),
		(*SubmitConnectEventRequest_ConnectUserJobRoleUpdateEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prehog_v1alpha_connect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prehog_v1alpha_connect_proto_goTypes,
		DependencyIndexes: file_prehog_v1alpha_connect_proto_depIdxs,
		MessageInfos:      file_prehog_v1alpha_connect_proto_msgTypes,
	}.Build()
	File_prehog_v1alpha_connect_proto = out.File
	file_prehog_v1alpha_connect_proto_rawDesc = nil
	file_prehog_v1alpha_connect_proto_goTypes = nil
	file_prehog_v1alpha_connect_proto_depIdxs = nil
}
