// source: v1/usage_events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var prehog_v1alpha_connect_pb = require('../prehog/v1alpha/connect_pb.js');
goog.object.extend(proto, prehog_v1alpha_connect_pb);
goog.exportSymbol('proto.teleport.terminal.v1.EventReportedResponse', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ReportEventRequest', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ReportEventRequest.EventCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.ReportEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_);
};
goog.inherits(proto.teleport.terminal.v1.ReportEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.ReportEventRequest.displayName = 'proto.teleport.terminal.v1.ReportEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.EventReportedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.EventReportedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.EventReportedResponse.displayName = 'proto.teleport.terminal.v1.EventReportedResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_ = [[4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.teleport.terminal.v1.ReportEventRequest.EventCase = {
  EVENT_NOT_SET: 0,
  CONNECT_LOGIN: 4,
  CONNECT_PROTOCOL_RUN: 5,
  CONNECT_ACCESS_REQUEST_CREATE: 6,
  CONNECT_ACCESS_REQUEST_REVIEW: 7,
  CONNECT_ACCESS_REQUEST_ASSUME_ROLE: 8,
  CONNECT_FILE_TRANSFER_RUN_EVENT: 9,
  CONNECT_USER_JOB_ROLE_UPDATE_EVENT: 10
};

/**
 * @return {proto.teleport.terminal.v1.ReportEventRequest.EventCase}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getEventCase = function() {
  return /** @type {proto.teleport.terminal.v1.ReportEventRequest.EventCase} */(jspb.Message.computeOneofCase(this, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.ReportEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.ReportEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ReportEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    distinctId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    authClusterId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connectLogin: (f = msg.getConnectLogin()) && prehog_v1alpha_connect_pb.ConnectLoginEvent.toObject(includeInstance, f),
    connectProtocolRun: (f = msg.getConnectProtocolRun()) && prehog_v1alpha_connect_pb.ConnectProtocolRunEvent.toObject(includeInstance, f),
    connectAccessRequestCreate: (f = msg.getConnectAccessRequestCreate()) && prehog_v1alpha_connect_pb.ConnectAccessRequestCreateEvent.toObject(includeInstance, f),
    connectAccessRequestReview: (f = msg.getConnectAccessRequestReview()) && prehog_v1alpha_connect_pb.ConnectAccessRequestReviewEvent.toObject(includeInstance, f),
    connectAccessRequestAssumeRole: (f = msg.getConnectAccessRequestAssumeRole()) && prehog_v1alpha_connect_pb.ConnectAccessRequestAssumeRoleEvent.toObject(includeInstance, f),
    connectFileTransferRunEvent: (f = msg.getConnectFileTransferRunEvent()) && prehog_v1alpha_connect_pb.ConnectFileTransferRunEvent.toObject(includeInstance, f),
    connectUserJobRoleUpdateEvent: (f = msg.getConnectUserJobRoleUpdateEvent()) && prehog_v1alpha_connect_pb.ConnectUserJobRoleUpdateEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest}
 */
proto.teleport.terminal.v1.ReportEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.ReportEventRequest;
  return proto.teleport.terminal.v1.ReportEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.ReportEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest}
 */
proto.teleport.terminal.v1.ReportEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistinctId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthClusterId(value);
      break;
    case 4:
      var value = new prehog_v1alpha_connect_pb.ConnectLoginEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectLoginEvent.deserializeBinaryFromReader);
      msg.setConnectLogin(value);
      break;
    case 5:
      var value = new prehog_v1alpha_connect_pb.ConnectProtocolRunEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectProtocolRunEvent.deserializeBinaryFromReader);
      msg.setConnectProtocolRun(value);
      break;
    case 6:
      var value = new prehog_v1alpha_connect_pb.ConnectAccessRequestCreateEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectAccessRequestCreateEvent.deserializeBinaryFromReader);
      msg.setConnectAccessRequestCreate(value);
      break;
    case 7:
      var value = new prehog_v1alpha_connect_pb.ConnectAccessRequestReviewEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectAccessRequestReviewEvent.deserializeBinaryFromReader);
      msg.setConnectAccessRequestReview(value);
      break;
    case 8:
      var value = new prehog_v1alpha_connect_pb.ConnectAccessRequestAssumeRoleEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectAccessRequestAssumeRoleEvent.deserializeBinaryFromReader);
      msg.setConnectAccessRequestAssumeRole(value);
      break;
    case 9:
      var value = new prehog_v1alpha_connect_pb.ConnectFileTransferRunEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectFileTransferRunEvent.deserializeBinaryFromReader);
      msg.setConnectFileTransferRunEvent(value);
      break;
    case 10:
      var value = new prehog_v1alpha_connect_pb.ConnectUserJobRoleUpdateEvent;
      reader.readMessage(value,prehog_v1alpha_connect_pb.ConnectUserJobRoleUpdateEvent.deserializeBinaryFromReader);
      msg.setConnectUserJobRoleUpdateEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.ReportEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.ReportEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ReportEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistinctId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAuthClusterId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnectLogin();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      prehog_v1alpha_connect_pb.ConnectLoginEvent.serializeBinaryToWriter
    );
  }
  f = message.getConnectProtocolRun();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      prehog_v1alpha_connect_pb.ConnectProtocolRunEvent.serializeBinaryToWriter
    );
  }
  f = message.getConnectAccessRequestCreate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      prehog_v1alpha_connect_pb.ConnectAccessRequestCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getConnectAccessRequestReview();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      prehog_v1alpha_connect_pb.ConnectAccessRequestReviewEvent.serializeBinaryToWriter
    );
  }
  f = message.getConnectAccessRequestAssumeRole();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      prehog_v1alpha_connect_pb.ConnectAccessRequestAssumeRoleEvent.serializeBinaryToWriter
    );
  }
  f = message.getConnectFileTransferRunEvent();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      prehog_v1alpha_connect_pb.ConnectFileTransferRunEvent.serializeBinaryToWriter
    );
  }
  f = message.getConnectUserJobRoleUpdateEvent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      prehog_v1alpha_connect_pb.ConnectUserJobRoleUpdateEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string distinct_id = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getDistinctId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.setDistinctId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string auth_cluster_id = 3;
 * @return {string}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getAuthClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.setAuthClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional prehog.v1alpha.ConnectLoginEvent connect_login = 4;
 * @return {?proto.prehog.v1alpha.ConnectLoginEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectLogin = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectLoginEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectLoginEvent, 4));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectLoginEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectLogin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectLogin = function() {
  return this.setConnectLogin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectLogin = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional prehog.v1alpha.ConnectProtocolRunEvent connect_protocol_run = 5;
 * @return {?proto.prehog.v1alpha.ConnectProtocolRunEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectProtocolRun = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectProtocolRunEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectProtocolRunEvent, 5));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectProtocolRunEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectProtocolRun = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectProtocolRun = function() {
  return this.setConnectProtocolRun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectProtocolRun = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional prehog.v1alpha.ConnectAccessRequestCreateEvent connect_access_request_create = 6;
 * @return {?proto.prehog.v1alpha.ConnectAccessRequestCreateEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectAccessRequestCreate = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectAccessRequestCreateEvent, 6));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectAccessRequestCreateEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectAccessRequestCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectAccessRequestCreate = function() {
  return this.setConnectAccessRequestCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectAccessRequestCreate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional prehog.v1alpha.ConnectAccessRequestReviewEvent connect_access_request_review = 7;
 * @return {?proto.prehog.v1alpha.ConnectAccessRequestReviewEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectAccessRequestReview = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectAccessRequestReviewEvent, 7));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectAccessRequestReviewEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectAccessRequestReview = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectAccessRequestReview = function() {
  return this.setConnectAccessRequestReview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectAccessRequestReview = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent connect_access_request_assume_role = 8;
 * @return {?proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectAccessRequestAssumeRole = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectAccessRequestAssumeRoleEvent, 8));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectAccessRequestAssumeRole = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectAccessRequestAssumeRole = function() {
  return this.setConnectAccessRequestAssumeRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectAccessRequestAssumeRole = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional prehog.v1alpha.ConnectFileTransferRunEvent connect_file_transfer_run_event = 9;
 * @return {?proto.prehog.v1alpha.ConnectFileTransferRunEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectFileTransferRunEvent = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectFileTransferRunEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectFileTransferRunEvent, 9));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectFileTransferRunEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectFileTransferRunEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectFileTransferRunEvent = function() {
  return this.setConnectFileTransferRunEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectFileTransferRunEvent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional prehog.v1alpha.ConnectUserJobRoleUpdateEvent connect_user_job_role_update_event = 10;
 * @return {?proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.getConnectUserJobRoleUpdateEvent = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent} */ (
    jspb.Message.getWrapperField(this, prehog_v1alpha_connect_pb.ConnectUserJobRoleUpdateEvent, 10));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent|undefined} value
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
*/
proto.teleport.terminal.v1.ReportEventRequest.prototype.setConnectUserJobRoleUpdateEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.teleport.terminal.v1.ReportEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReportEventRequest} returns this
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.clearConnectUserJobRoleUpdateEvent = function() {
  return this.setConnectUserJobRoleUpdateEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReportEventRequest.prototype.hasConnectUserJobRoleUpdateEvent = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.EventReportedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.EventReportedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.EventReportedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.EventReportedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.EventReportedResponse}
 */
proto.teleport.terminal.v1.EventReportedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.EventReportedResponse;
  return proto.teleport.terminal.v1.EventReportedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.EventReportedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.EventReportedResponse}
 */
proto.teleport.terminal.v1.EventReportedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.EventReportedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.EventReportedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.EventReportedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.EventReportedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.teleport.terminal.v1);
