// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: v1/usage_events.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistinctId string                  `protobuf:"bytes,1,opt,name=distinct_id,json=distinctId,proto3" json:"distinct_id,omitempty"`
	Timestamp  *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Event      *ConnectUsageEventOneOf `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ReportEventRequest) Reset() {
	*x = ReportEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportEventRequest) ProtoMessage() {}

func (x *ReportEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportEventRequest.ProtoReflect.Descriptor instead.
func (*ReportEventRequest) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{0}
}

func (x *ReportEventRequest) GetDistinctId() string {
	if x != nil {
		return x.DistinctId
	}
	return ""
}

func (x *ReportEventRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ReportEventRequest) GetEvent() *ConnectUsageEventOneOf {
	if x != nil {
		return x.Event
	}
	return nil
}

type EventReportedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventReportedResponse) Reset() {
	*x = EventReportedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReportedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReportedResponse) ProtoMessage() {}

func (x *EventReportedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReportedResponse.ProtoReflect.Descriptor instead.
func (*EventReportedResponse) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{1}
}

type ClusterProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthClusterId string `protobuf:"bytes,1,opt,name=auth_cluster_id,json=authClusterId,proto3" json:"auth_cluster_id,omitempty"`
	ClusterName   string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	UserName      string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *ClusterProperties) Reset() {
	*x = ClusterProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterProperties) ProtoMessage() {}

func (x *ClusterProperties) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterProperties.ProtoReflect.Descriptor instead.
func (*ClusterProperties) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterProperties) GetAuthClusterId() string {
	if x != nil {
		return x.AuthClusterId
	}
	return ""
}

func (x *ClusterProperties) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ClusterProperties) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type LoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterProperties *ClusterProperties `protobuf:"bytes,1,opt,name=cluster_properties,json=clusterProperties,proto3" json:"cluster_properties,omitempty"`
	Arch              string             `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`
	Os                string             `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion         string             `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	ConnectVersion    string             `protobuf:"bytes,5,opt,name=connect_version,json=connectVersion,proto3" json:"connect_version,omitempty"`
}

func (x *LoginEvent) Reset() {
	*x = LoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginEvent) ProtoMessage() {}

func (x *LoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginEvent.ProtoReflect.Descriptor instead.
func (*LoginEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{3}
}

func (x *LoginEvent) GetClusterProperties() *ClusterProperties {
	if x != nil {
		return x.ClusterProperties
	}
	return nil
}

func (x *LoginEvent) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *LoginEvent) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginEvent) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *LoginEvent) GetConnectVersion() string {
	if x != nil {
		return x.ConnectVersion
	}
	return ""
}

type ProtocolRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterProperties *ClusterProperties `protobuf:"bytes,1,opt,name=cluster_properties,json=clusterProperties,proto3" json:"cluster_properties,omitempty"`
	// one of ssh/proxy_db/kube
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *ProtocolRunEvent) Reset() {
	*x = ProtocolRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolRunEvent) ProtoMessage() {}

func (x *ProtocolRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolRunEvent.ProtoReflect.Descriptor instead.
func (*ProtocolRunEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{4}
}

func (x *ProtocolRunEvent) GetClusterProperties() *ClusterProperties {
	if x != nil {
		return x.ClusterProperties
	}
	return nil
}

func (x *ProtocolRunEvent) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type AccessRequestCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterProperties *ClusterProperties `protobuf:"bytes,1,opt,name=cluster_properties,json=clusterProperties,proto3" json:"cluster_properties,omitempty"`
	// one of role/resource
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *AccessRequestCreateEvent) Reset() {
	*x = AccessRequestCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessRequestCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRequestCreateEvent) ProtoMessage() {}

func (x *AccessRequestCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRequestCreateEvent.ProtoReflect.Descriptor instead.
func (*AccessRequestCreateEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{5}
}

func (x *AccessRequestCreateEvent) GetClusterProperties() *ClusterProperties {
	if x != nil {
		return x.ClusterProperties
	}
	return nil
}

func (x *AccessRequestCreateEvent) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type AccessRequestReviewEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterProperties *ClusterProperties `protobuf:"bytes,1,opt,name=cluster_properties,json=clusterProperties,proto3" json:"cluster_properties,omitempty"`
}

func (x *AccessRequestReviewEvent) Reset() {
	*x = AccessRequestReviewEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessRequestReviewEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRequestReviewEvent) ProtoMessage() {}

func (x *AccessRequestReviewEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRequestReviewEvent.ProtoReflect.Descriptor instead.
func (*AccessRequestReviewEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{6}
}

func (x *AccessRequestReviewEvent) GetClusterProperties() *ClusterProperties {
	if x != nil {
		return x.ClusterProperties
	}
	return nil
}

type AccessRequestAssumeRoleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterProperties *ClusterProperties `protobuf:"bytes,1,opt,name=cluster_properties,json=clusterProperties,proto3" json:"cluster_properties,omitempty"`
}

func (x *AccessRequestAssumeRoleEvent) Reset() {
	*x = AccessRequestAssumeRoleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessRequestAssumeRoleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRequestAssumeRoleEvent) ProtoMessage() {}

func (x *AccessRequestAssumeRoleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRequestAssumeRoleEvent.ProtoReflect.Descriptor instead.
func (*AccessRequestAssumeRoleEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{7}
}

func (x *AccessRequestAssumeRoleEvent) GetClusterProperties() *ClusterProperties {
	if x != nil {
		return x.ClusterProperties
	}
	return nil
}

type FileTransferRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterProperties *ClusterProperties `protobuf:"bytes,1,opt,name=cluster_properties,json=clusterProperties,proto3" json:"cluster_properties,omitempty"`
	Direction         string             `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *FileTransferRunEvent) Reset() {
	*x = FileTransferRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferRunEvent) ProtoMessage() {}

func (x *FileTransferRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferRunEvent.ProtoReflect.Descriptor instead.
func (*FileTransferRunEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{8}
}

func (x *FileTransferRunEvent) GetClusterProperties() *ClusterProperties {
	if x != nil {
		return x.ClusterProperties
	}
	return nil
}

func (x *FileTransferRunEvent) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type UserJobRoleUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobRole string `protobuf:"bytes,1,opt,name=job_role,json=jobRole,proto3" json:"job_role,omitempty"`
}

func (x *UserJobRoleUpdateEvent) Reset() {
	*x = UserJobRoleUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserJobRoleUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserJobRoleUpdateEvent) ProtoMessage() {}

func (x *UserJobRoleUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserJobRoleUpdateEvent.ProtoReflect.Descriptor instead.
func (*UserJobRoleUpdateEvent) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{9}
}

func (x *UserJobRoleUpdateEvent) GetJobRole() string {
	if x != nil {
		return x.JobRole
	}
	return ""
}

type ConnectUsageEventOneOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*ConnectUsageEventOneOf_LoginEvent
	//	*ConnectUsageEventOneOf_ProtocolRunEvent
	//	*ConnectUsageEventOneOf_AccessRequestCreateEvent
	//	*ConnectUsageEventOneOf_AccessRequestReviewEvent
	//	*ConnectUsageEventOneOf_AccessRequestAssumeRoleEvent
	//	*ConnectUsageEventOneOf_FileTransferRunEvent
	//	*ConnectUsageEventOneOf_UserJobRoleUpdateEvent
	Event isConnectUsageEventOneOf_Event `protobuf_oneof:"event"`
}

func (x *ConnectUsageEventOneOf) Reset() {
	*x = ConnectUsageEventOneOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_usage_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectUsageEventOneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectUsageEventOneOf) ProtoMessage() {}

func (x *ConnectUsageEventOneOf) ProtoReflect() protoreflect.Message {
	mi := &file_v1_usage_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectUsageEventOneOf.ProtoReflect.Descriptor instead.
func (*ConnectUsageEventOneOf) Descriptor() ([]byte, []int) {
	return file_v1_usage_events_proto_rawDescGZIP(), []int{10}
}

func (m *ConnectUsageEventOneOf) GetEvent() isConnectUsageEventOneOf_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetLoginEvent() *LoginEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_LoginEvent); ok {
		return x.LoginEvent
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetProtocolRunEvent() *ProtocolRunEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_ProtocolRunEvent); ok {
		return x.ProtocolRunEvent
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetAccessRequestCreateEvent() *AccessRequestCreateEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_AccessRequestCreateEvent); ok {
		return x.AccessRequestCreateEvent
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetAccessRequestReviewEvent() *AccessRequestReviewEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_AccessRequestReviewEvent); ok {
		return x.AccessRequestReviewEvent
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetAccessRequestAssumeRoleEvent() *AccessRequestAssumeRoleEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_AccessRequestAssumeRoleEvent); ok {
		return x.AccessRequestAssumeRoleEvent
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetFileTransferRunEvent() *FileTransferRunEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_FileTransferRunEvent); ok {
		return x.FileTransferRunEvent
	}
	return nil
}

func (x *ConnectUsageEventOneOf) GetUserJobRoleUpdateEvent() *UserJobRoleUpdateEvent {
	if x, ok := x.GetEvent().(*ConnectUsageEventOneOf_UserJobRoleUpdateEvent); ok {
		return x.UserJobRoleUpdateEvent
	}
	return nil
}

type isConnectUsageEventOneOf_Event interface {
	isConnectUsageEventOneOf_Event()
}

type ConnectUsageEventOneOf_LoginEvent struct {
	LoginEvent *LoginEvent `protobuf:"bytes,1,opt,name=login_event,json=loginEvent,proto3,oneof"`
}

type ConnectUsageEventOneOf_ProtocolRunEvent struct {
	ProtocolRunEvent *ProtocolRunEvent `protobuf:"bytes,2,opt,name=protocol_run_event,json=protocolRunEvent,proto3,oneof"`
}

type ConnectUsageEventOneOf_AccessRequestCreateEvent struct {
	AccessRequestCreateEvent *AccessRequestCreateEvent `protobuf:"bytes,3,opt,name=access_request_create_event,json=accessRequestCreateEvent,proto3,oneof"`
}

type ConnectUsageEventOneOf_AccessRequestReviewEvent struct {
	AccessRequestReviewEvent *AccessRequestReviewEvent `protobuf:"bytes,4,opt,name=access_request_review_event,json=accessRequestReviewEvent,proto3,oneof"`
}

type ConnectUsageEventOneOf_AccessRequestAssumeRoleEvent struct {
	AccessRequestAssumeRoleEvent *AccessRequestAssumeRoleEvent `protobuf:"bytes,5,opt,name=access_request_assume_role_event,json=accessRequestAssumeRoleEvent,proto3,oneof"`
}

type ConnectUsageEventOneOf_FileTransferRunEvent struct {
	FileTransferRunEvent *FileTransferRunEvent `protobuf:"bytes,6,opt,name=file_transfer_run_event,json=fileTransferRunEvent,proto3,oneof"`
}

type ConnectUsageEventOneOf_UserJobRoleUpdateEvent struct {
	UserJobRoleUpdateEvent *UserJobRoleUpdateEvent `protobuf:"bytes,7,opt,name=user_job_role_update_event,json=userJobRoleUpdateEvent,proto3,oneof"`
}

func (*ConnectUsageEventOneOf_LoginEvent) isConnectUsageEventOneOf_Event() {}

func (*ConnectUsageEventOneOf_ProtocolRunEvent) isConnectUsageEventOneOf_Event() {}

func (*ConnectUsageEventOneOf_AccessRequestCreateEvent) isConnectUsageEventOneOf_Event() {}

func (*ConnectUsageEventOneOf_AccessRequestReviewEvent) isConnectUsageEventOneOf_Event() {}

func (*ConnectUsageEventOneOf_AccessRequestAssumeRoleEvent) isConnectUsageEventOneOf_Event() {}

func (*ConnectUsageEventOneOf_FileTransferRunEvent) isConnectUsageEventOneOf_Event() {}

func (*ConnectUsageEventOneOf_UserJobRoleUpdateEvent) isConnectUsageEventOneOf_Event() {}

var File_v1_usage_events_proto protoreflect.FileDescriptor

var file_v1_usage_events_proto_rawDesc = []byte{
	0x0a, 0x15, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x42, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a,
	0x11, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0x72, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x1c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x14,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x16, 0x55, 0x73,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x22,
	0xef, 0x05, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x12, 0x43, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x56, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x72, 0x75, 0x6e, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x75, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x1b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x18,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x1b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x18, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x7c, 0x0a, 0x20, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x75,
	0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x17, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x6a, 0x0a, 0x1a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_usage_events_proto_rawDescOnce sync.Once
	file_v1_usage_events_proto_rawDescData = file_v1_usage_events_proto_rawDesc
)

func file_v1_usage_events_proto_rawDescGZIP() []byte {
	file_v1_usage_events_proto_rawDescOnce.Do(func() {
		file_v1_usage_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_usage_events_proto_rawDescData)
	})
	return file_v1_usage_events_proto_rawDescData
}

var file_v1_usage_events_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_v1_usage_events_proto_goTypes = []interface{}{
	(*ReportEventRequest)(nil),           // 0: teleport.terminal.v1.ReportEventRequest
	(*EventReportedResponse)(nil),        // 1: teleport.terminal.v1.EventReportedResponse
	(*ClusterProperties)(nil),            // 2: teleport.terminal.v1.ClusterProperties
	(*LoginEvent)(nil),                   // 3: teleport.terminal.v1.LoginEvent
	(*ProtocolRunEvent)(nil),             // 4: teleport.terminal.v1.ProtocolRunEvent
	(*AccessRequestCreateEvent)(nil),     // 5: teleport.terminal.v1.AccessRequestCreateEvent
	(*AccessRequestReviewEvent)(nil),     // 6: teleport.terminal.v1.AccessRequestReviewEvent
	(*AccessRequestAssumeRoleEvent)(nil), // 7: teleport.terminal.v1.AccessRequestAssumeRoleEvent
	(*FileTransferRunEvent)(nil),         // 8: teleport.terminal.v1.FileTransferRunEvent
	(*UserJobRoleUpdateEvent)(nil),       // 9: teleport.terminal.v1.UserJobRoleUpdateEvent
	(*ConnectUsageEventOneOf)(nil),       // 10: teleport.terminal.v1.ConnectUsageEventOneOf
	(*timestamppb.Timestamp)(nil),        // 11: google.protobuf.Timestamp
}
var file_v1_usage_events_proto_depIdxs = []int32{
	11, // 0: teleport.terminal.v1.ReportEventRequest.timestamp:type_name -> google.protobuf.Timestamp
	10, // 1: teleport.terminal.v1.ReportEventRequest.event:type_name -> teleport.terminal.v1.ConnectUsageEventOneOf
	2,  // 2: teleport.terminal.v1.LoginEvent.cluster_properties:type_name -> teleport.terminal.v1.ClusterProperties
	2,  // 3: teleport.terminal.v1.ProtocolRunEvent.cluster_properties:type_name -> teleport.terminal.v1.ClusterProperties
	2,  // 4: teleport.terminal.v1.AccessRequestCreateEvent.cluster_properties:type_name -> teleport.terminal.v1.ClusterProperties
	2,  // 5: teleport.terminal.v1.AccessRequestReviewEvent.cluster_properties:type_name -> teleport.terminal.v1.ClusterProperties
	2,  // 6: teleport.terminal.v1.AccessRequestAssumeRoleEvent.cluster_properties:type_name -> teleport.terminal.v1.ClusterProperties
	2,  // 7: teleport.terminal.v1.FileTransferRunEvent.cluster_properties:type_name -> teleport.terminal.v1.ClusterProperties
	3,  // 8: teleport.terminal.v1.ConnectUsageEventOneOf.login_event:type_name -> teleport.terminal.v1.LoginEvent
	4,  // 9: teleport.terminal.v1.ConnectUsageEventOneOf.protocol_run_event:type_name -> teleport.terminal.v1.ProtocolRunEvent
	5,  // 10: teleport.terminal.v1.ConnectUsageEventOneOf.access_request_create_event:type_name -> teleport.terminal.v1.AccessRequestCreateEvent
	6,  // 11: teleport.terminal.v1.ConnectUsageEventOneOf.access_request_review_event:type_name -> teleport.terminal.v1.AccessRequestReviewEvent
	7,  // 12: teleport.terminal.v1.ConnectUsageEventOneOf.access_request_assume_role_event:type_name -> teleport.terminal.v1.AccessRequestAssumeRoleEvent
	8,  // 13: teleport.terminal.v1.ConnectUsageEventOneOf.file_transfer_run_event:type_name -> teleport.terminal.v1.FileTransferRunEvent
	9,  // 14: teleport.terminal.v1.ConnectUsageEventOneOf.user_job_role_update_event:type_name -> teleport.terminal.v1.UserJobRoleUpdateEvent
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_v1_usage_events_proto_init() }
func file_v1_usage_events_proto_init() {
	if File_v1_usage_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_usage_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReportedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessRequestCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessRequestReviewEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessRequestAssumeRoleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserJobRoleUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_usage_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectUsageEventOneOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_usage_events_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ConnectUsageEventOneOf_LoginEvent)(nil),
		(*ConnectUsageEventOneOf_ProtocolRunEvent)(nil),
		(*ConnectUsageEventOneOf_AccessRequestCreateEvent)(nil),
		(*ConnectUsageEventOneOf_AccessRequestReviewEvent)(nil),
		(*ConnectUsageEventOneOf_AccessRequestAssumeRoleEvent)(nil),
		(*ConnectUsageEventOneOf_FileTransferRunEvent)(nil),
		(*ConnectUsageEventOneOf_UserJobRoleUpdateEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_usage_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_usage_events_proto_goTypes,
		DependencyIndexes: file_v1_usage_events_proto_depIdxs,
		MessageInfos:      file_v1_usage_events_proto_msgTypes,
	}.Build()
	File_v1_usage_events_proto = out.File
	file_v1_usage_events_proto_rawDesc = nil
	file_v1_usage_events_proto_goTypes = nil
	file_v1_usage_events_proto_depIdxs = nil
}
