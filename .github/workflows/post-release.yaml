name: Post-release

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Collect release information
    outputs:
      type: ${{ steps.artifacts.outputs.type }}
      version: ${{ steps.artifacts.outputs.version }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ vars.GITHUB_REF }}

      # Release event metadata doesn't include "is latest" flag so we have
      # to determine it another way.
      - name: Determine release latest flag and version
        id: artifacts
        run: |
          LATEST_RELEASE_ID=$(gh release view --json id | jq '.id' | tr -d \")
          CURRENT_RELEASE_ID=${{ github.event.release.node_id }}

          if [ $LATEST_RELEASE_ID == $CURRENT_RELEASE_ID ]; then
            echo "type=latest" >> $GITHUB_OUTPUT
          else
            echo "type=other" >> $GITHUB_OUTPUT
          fi

          echo "version=$(make --no-print-directory print-version)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}

  update-ami-ids:
    name: Update AMI IDs
    needs: release
    if: needs.release.outputs.type == 'latest'
    uses: ./.github/workflows/update-ami-ids.yml
    with:
      version: ${{ needs.release.outputs.version }}
