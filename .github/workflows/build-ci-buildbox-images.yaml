name: Build CI buildbox Images
run-name: Build CI buildbox Images
on:
  push:
    paths:
      - build.assets/Dockerfile
      - build.assets/Dockerfile-centos7
      - build.assets/Makefile
      - build.assets/images.mk    
    branches:
      - master
  pull_request:
    paths:
      - build.assets/Dockerfile    
      - build.assets/Dockerfile-centos7
      - build.assets/Makefile
      - build.assets/images.mk

env:
  REGISTRY: ghcr.io
  BUILDBOX_BASE_NAME: ghcr.io/gzigzigzeo/teleport-buildbox

jobs:
  buildbox:
    name: Build buildbox ubuntu image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Teleport
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # We need to keep env vars in sync, so, we can't use standard build actions
      - name: Build buildbox image
        run: cd build.assets && make buildbox

      - name: Docker push the latest built image
        run: docker push $(docker images -a --format '{{.Repository}}:{{.Tag}}'| head -1)

  buildbox-centos7:
    name: Build buildbox centos7 image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Teleport
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # We need to keep env vars in sync, so, we can't use standard build actions
      - name: Build buildbox image
        run: cd build.assets && make buildbox-centos7

      - name: Docker push the latest built image
        run: docker push $(docker images -a --format '{{.Repository}}:{{.Tag}}'| head -1)
