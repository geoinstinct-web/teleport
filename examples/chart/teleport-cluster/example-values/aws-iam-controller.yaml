# This example shows how to configure Teleport auth pods to authenticate to AWS by assuming an IAM role
# instead of inheriting ambiant credentials from the EC2 node or relying on a service account key.
#
# You need an IAM OIDC provider for the EKS cluster https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html
# Then follow https://docs.aws.amazon.com/eks/latest/userguide/associate-service-account-role.html:
# - use the namespace you are releasing the Helm chart in
# - the service account name is the Helm release name
# - create and attach the IAM policies described here:
#    - https://goteleport.com/docs/reference/backends/#s3-iam-policy
#    - https://goteleport.com/docs/reference/backends/#dynamodb (autoscaling configuration is optional)

# This is the part that defines which IAM role the auth service account should assume
# It's better to use `auth.annotations` instead of `annotations` because the proxies
# don't need to assume the IAM role.
auth:
  annotations:
    serviceAccount:
      eks.amazonaws.com/role-arn: arn:aws:iam::$account_id:role/$my-role

# The rest of the config is the same
chartMode: aws
clusterName: teleport.example.com                 # Name of your cluster. Use the FQDN you intend to configure in DNS
aws:
  region: us-west-2                               # AWS region
  backendTable: teleport-helm-backend             # DynamoDB table to use for the Teleport backend
  auditLogTable: teleport-helm-events             # DynamoDB table to use for the Teleport audit log (must be different to the backend table)
  auditLogMirrorOnStdout: false                   # Whether to mirror audit log entries to stdout in JSON format (useful for external log collectors)
  sessionRecordingBucket: teleport-helm-sessions  # S3 bucket to use for Teleport session recordings
  backups: true                                   # Whether to turn on DynamoDB backups
  dynamoAutoScaling: false                        # Whether Teleport should configure DynamoDB's autoscaling.
highAvailability:
  replicaCount: 2                                 # Number of replicas to configure
  # cert-manager is not part of the chart, it should be installed by cluster administrators
  certManager:
    enabled: true                                 # Enable cert-manager support to get TLS certificates
    issuerName: letsencrypt-production            # Name of the cert-manager Issuer to use (should be created beforehand)
