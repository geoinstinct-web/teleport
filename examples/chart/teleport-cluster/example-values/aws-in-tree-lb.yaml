# EKS in-tree LoadBalancer usage is discouraged by AWS but remains the easiest and most used
# way to create a LoadBalancer on an EKS cluster as it is working by default and does not
# require the cluster administrator to install and maintain additional components.
#
# The other way of creating a LoadBalancer in EKS is the AWS LoadBalancer Controller.
# See https://docs.aws.amazon.com/eks/latest/userguide/network-load-balancing.html and ./aws-lb-controller.yaml
chartMode: aws
clusterName: teleport.example.com                 # Name of your cluster. Use the FQDN you intend to configure in DNS
aws:
  region: us-west-2                               # AWS region
  backendTable: teleport-helm-backend             # DynamoDB table to use for the Teleport backend
  auditLogTable: teleport-helm-events             # DynamoDB table to use for the Teleport audit log (must be different to the backend table)
  auditLogMirrorOnStdout: false                   # Whether to mirror audit log entries to stdout in JSON format (useful for external log collectors)
  sessionRecordingBucket: teleport-helm-sessions  # S3 bucket to use for Teleport session recordings
  backups: true                                   # Whether to turn on DynamoDB backups
  dynamoAutoScaling: false                        # Whether Teleport should configure DynamoDB's autoscaling.
highAvailability:
  replicaCount: 2                                 # Number of replicas to configure
  # cert-manager is not part of the chart, it should be installed by cluster administrators
  certManager:
    enabled: true                                 # Enable cert-manager support to get TLS certificates
    issuerName: letsencrypt-production            # Name of the cert-manager Issuer to use (should be created beforehand)
